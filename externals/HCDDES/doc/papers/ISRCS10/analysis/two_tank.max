/* To invoke maxima -b two_tank.max */
/* Compute misc. quantities for two tank problem using IDA-PBC  */
assume(k1 > 0, k2 > 0, k3 > 0, gamma > 0 and gamma < 1, a1 > 0, a2 > 0, A1 > 0, A2 > 0, g > 0);
Qd : matrix([-1/(k1*A1),1/(k2*A1),0],[0,-1/(k2*A2),0],[k3/k1,0,-k3/k1]);
HQd : (-1/2)*(Qd + transpose(Qd));
HQd2 : submatrix(3,HQd,3);
det_HQd2 : ratsimp(determinant(HQd2));
n_det_HQd2 : num(det_HQd2);
solve(n_det_HQd2=0, k2);
ineq2: k2 > rhs(%[1]);
det_HQd : determinant(HQd);
det_HQd : ratsimp(det_HQd);
n_det_HQd : num(det_HQd);
n_det_HQd : factor(n_det_HQd)/k3;
solve(n_det_HQd=0,k3);
ineq3: k3 < expand(rhs(%[1]));
k1 > 0;
ineq2;
ineq3;
gn : matrix([A1*(1-gamma),-gamma*A2,1]);
ginv : matrix([A1,A2,0]);
gnQd : gn . Qd;
n_gnQd : nullspace(gnQd);
pus : first(rest(n_gnQd)) + first(n_gnQd);
kus : fullratsimp(-1/(ginv . Qd . pus));
p : pus * kus;
H : (2/3)*k1*a1*sqrt(2*g)*x1^(3/2) + (2/3)*k2*a2*sqrt(2*g)*x2^(3/2) + k1*a1*sqrt(2*g*x1d)*x3;
DH : matrix([diff(H,x1)],[diff(H,x2)],[diff(H,x3)]);
DHs : subst(0, x3, DH);
DHs : subst(x1*((1-gamma)*a1/a2)^2,x2,DHs);
DHs : subst(x1,x1d,DHs);
pinv : (1/(transpose(p).p)) * transpose(p);
/* l : fullratsimp(- pinv . DHs); */
/* fullratsimp((P . l) + DHs); */
D2H : hessian(H,[x1,x2,x3]);
eq : DHs + p*l;
solve(eq[1],l);
DHsl : fullratsimp(subst(rhs(%[1]),l,eq));
DHsl : fullratsimp(subst(1,k1,DHsl));