// cpp(meta datanetwork format) source file ESMoL.cpp generated from diagram ESMoL
// generated on Wed Sep 24 11:32:07 2008

#include "ESMoL.h"
#include "UmlExt.h"

#include "UdmStatic.h"

#include "UdmDom.h"
#include "ESMoL_xsd.h"

namespace ESMoL {

		::Uml::Diagram umldiagram;

		::Uml::Class TTTask::meta;
		::Uml::Class TTBus::meta;
		::Uml::Class TTMessage::meta;
		::Uml::Class OldBus::meta;
		::Uml::Class OldTask::meta;
		::Uml::Class CCode::meta;
		::Uml::Class SubsystemRef::meta;
		::Uml::Class COutputPort::meta;
		::Uml::Class CInputPort::meta;
		::Uml::Class IOPortExp::meta;
		::Uml::Class IOPortInfo::meta;
		::Uml::Class IOPortInfoRef::meta;
		::Uml::Class IOPortAssignment::meta;
		::Uml::Class IOPortInfoBase::meta;
		::Uml::Class ArchitectureLibrary::meta;
		::Uml::Class System::meta;
		::Uml::Class DesignFolder::meta;
		::Uml::Class Connector::meta;
		::Uml::Class ComponentBase::meta;
		::Uml::Class Output::meta;
		::Uml::Class Input::meta;
		::Uml::Class Types::meta;
		::Uml::Class TypeStruct::meta;
		::Uml::Class Matrix::meta;
		::Uml::Class TypeBase::meta;
		::Uml::Class TypeBaseRef::meta;
		::Uml::Class TimingConstraint::meta;
		::Uml::Class RequirementsLibrary::meta;
		::Uml::Class TimingSheet::meta;
		::Uml::Class TaskRef::meta;
		::Uml::Class Primitive::meta;
		::Uml::Class Block::meta;
		::Uml::Class Parameter::meta;
		::Uml::Class Reference::meta;
		::Uml::Class Annotation::meta;
		::Uml::Class Line::meta;
		::Uml::Class Dataflow::meta;
		::Uml::Class Subsystem::meta;
		::Uml::Class OutputPort::meta;
		::Uml::Class OutPort::meta;
		::Uml::Class StatePort::meta;
		::Uml::Class Port::meta;
		::Uml::Class EnablePort::meta;
		::Uml::Class TriggerPort::meta;
		::Uml::Class InputPort::meta;
		::Uml::Class InPort::meta;
		::Uml::Class ActionPort::meta;
		::Uml::Class State::meta;
		::Uml::Class Transition::meta;
		::Uml::Class History::meta;
		::Uml::Class TransStart::meta;
		::Uml::Class Junction::meta;
		::Uml::Class ConnectorRef::meta;
		::Uml::Class Stateflow::meta;
		::Uml::Class TransConnector::meta;
		::Uml::Class Data::meta;
		::Uml::Class Event::meta;
		::Uml::Class StateDE::meta;
		::Uml::Class OS::meta;
		::Uml::Class Wire::meta;
		::Uml::Class HardwareUnit::meta;
		::Uml::Class PlatformLibrary::meta;
		::Uml::Class Router::meta;
		::Uml::Class Connectable::meta;
		::Uml::Class Capability::meta;
		::Uml::Class HWElement::meta;
		::Uml::Class IChan::meta;
		::Uml::Class OChan::meta;
		::Uml::Class BChan::meta;
		::Uml::Class Bus::meta;
		::Uml::Class Node::meta;
		::Uml::Class Channel::meta;
		::Uml::Class OutCommMapping::meta;
		::Uml::Class CommDst::meta;
		::Uml::Class CommMapping::meta;
		::Uml::Class InCommMapping::meta;
		::Uml::Class Component::meta;
		::Uml::Class Message::meta;
		::Uml::Class MessageRef::meta;
		::Uml::Class IOPort::meta;
		::Uml::Class MsgAssignment::meta;
		::Uml::Class TaskAssignment::meta;
		::Uml::Class DeploymentLibrary::meta;
		::Uml::Class Deployment::meta;
		::Uml::Class Task::meta;
		::Uml::Class NodeRef::meta;
		::Uml::Class ChannelRef::meta;
		::Uml::Class RootFolder::meta;
		::Uml::Class MgaObject::meta;
		::Uml::Attribute TTTask::meta_TTFreq;
		::Uml::Attribute TTTask::meta_TTSchedule;
		::Uml::Attribute TTTask::meta_TTExecTime;
		::Uml::Attribute TTBus::meta_TTSetupTime;
		::Uml::Attribute TTBus::meta_Hyperperiod;
		::Uml::Attribute TTBus::meta_SlotSize;
		::Uml::Attribute TTMessage::meta_TTSchedule;
		::Uml::Attribute OldBus::meta_FrameSize;
		::Uml::Attribute OldBus::meta_Medium;
		::Uml::Attribute OldTask::meta_Priority;
		::Uml::Attribute OldTask::meta_TaskType;
		::Uml::Attribute OldTask::meta_Activation;
		::Uml::Attribute OldTask::meta_AutoStart;
		::Uml::Attribute OldTask::meta_Preemption;
		::Uml::Attribute OldTask::meta_Cyclic;
		::Uml::Attribute OldTask::meta_CycleTime;
		::Uml::Attribute IOPortInfo::meta_DataInit;
		::Uml::Attribute IOPortInfo::meta_DataSize;
		::Uml::Attribute IOPortInfo::meta_DataMin;
		::Uml::Attribute IOPortInfo::meta_DataMax;
		::Uml::Attribute IOPortInfo::meta_Scale;
		::Uml::Attribute IOPortInfo::meta_Offset;
		::Uml::Attribute ArchitectureLibrary::meta_name;
		::Uml::Attribute DesignFolder::meta_name;
		::Uml::Attribute Connector::meta_ConnectionType;
		::Uml::Attribute ComponentBase::meta_Deadline;
		::Uml::Attribute ComponentBase::meta_Period;
		::Uml::Attribute Types::meta_name;
		::Uml::Attribute TypeStruct::meta_MemberCount;
		::Uml::Attribute Matrix::meta_rows;
		::Uml::Attribute Matrix::meta_Type;
		::Uml::Attribute Matrix::meta_columns;
		::Uml::Attribute TypeBaseRef::meta_MemberIndex;
		::Uml::Attribute TimingConstraint::meta_Latency;
		::Uml::Attribute RequirementsLibrary::meta_name;
		::Uml::Attribute Block::meta_Tag;
		::Uml::Attribute Block::meta_BlockType;
		::Uml::Attribute Block::meta_Name;
		::Uml::Attribute Block::meta_Description;
		::Uml::Attribute Block::meta_Priority;
		::Uml::Attribute Block::meta_SampleTime;
		::Uml::Attribute Block::meta_UserData;
		::Uml::Attribute Parameter::meta_Value;
		::Uml::Attribute Reference::meta_SourceBlock;
		::Uml::Attribute Reference::meta_SourceType;
		::Uml::Attribute Annotation::meta_Text;
		::Uml::Attribute Line::meta_Name;
		::Uml::Attribute Dataflow::meta_name;
		::Uml::Attribute OutputPort::meta_Number;
		::Uml::Attribute EnablePort::meta_StatesWhenEnabling;
		::Uml::Attribute TriggerPort::meta_TriggerType;
		::Uml::Attribute InputPort::meta_Number;
		::Uml::Attribute State::meta_Name;
		::Uml::Attribute State::meta_Decomposition;
		::Uml::Attribute State::meta_EnterAction;
		::Uml::Attribute State::meta_DuringAction;
		::Uml::Attribute State::meta_ExitAction;
		::Uml::Attribute State::meta_Order;
		::Uml::Attribute Transition::meta_Guard;
		::Uml::Attribute Transition::meta_Trigger;
		::Uml::Attribute Transition::meta_Action;
		::Uml::Attribute Transition::meta_ConditionAction;
		::Uml::Attribute Transition::meta_Order;
		::Uml::Attribute Stateflow::meta_name;
		::Uml::Attribute Data::meta_Name;
		::Uml::Attribute Data::meta_Description;
		::Uml::Attribute Data::meta_DataType;
		::Uml::Attribute Data::meta_Port;
		::Uml::Attribute Data::meta_Units;
		::Uml::Attribute Data::meta_InitialValue;
		::Uml::Attribute Data::meta_Min;
		::Uml::Attribute Data::meta_Max;
		::Uml::Attribute Data::meta_ArraySize;
		::Uml::Attribute Data::meta_ArrayFirstIndex;
		::Uml::Attribute Data::meta_Scope;
		::Uml::Attribute Event::meta_Name;
		::Uml::Attribute Event::meta_Description;
		::Uml::Attribute Event::meta_Scope;
		::Uml::Attribute Event::meta_Trigger;
		::Uml::Attribute Event::meta_Port;
		::Uml::Attribute OS::meta_SendOverheadTime;
		::Uml::Attribute OS::meta_ContextSwitchTime;
		::Uml::Attribute OS::meta_RecvOverheadTime;
		::Uml::Attribute OS::meta_TickResolution;
		::Uml::Attribute PlatformLibrary::meta_name;
		::Uml::Attribute HWElement::meta_MetaData;
		::Uml::Attribute Bus::meta_OverheadTime;
		::Uml::Attribute Bus::meta_DataRate;
		::Uml::Attribute Bus::meta_MinFrameSize;
		::Uml::Attribute Bus::meta_SwitchMemorySize;
		::Uml::Attribute Node::meta_ROM;
		::Uml::Attribute Node::meta_Simulator;
		::Uml::Attribute Node::meta_RAM;
		::Uml::Attribute Node::meta_Speed;
		::Uml::Attribute Node::meta_CPU;
		::Uml::Attribute Channel::meta_InterruptNum;
		::Uml::Attribute Component::meta_WCET;
		::Uml::Attribute Message::meta_MsgSize;
		::Uml::Attribute Message::meta_MsgMetaData;
		::Uml::Attribute DeploymentLibrary::meta_name;
		::Uml::Attribute RootFolder::meta_name;
		::Uml::Attribute MgaObject::meta_position;
		::Uml::Attribute MgaObject::meta_name;
		::Uml::AssociationRole SubsystemRef::meta_ref;
		::Uml::AssociationRole IOPortExp::meta_srcIOPortAssignment, IOPortExp::meta_srcIOPortAssignment_rev;
		::Uml::AssociationRole IOPortInfo::meta_referedbyIOPortInfoRef;
		::Uml::AssociationRole IOPortInfoRef::meta_ref;
		::Uml::AssociationRole IOPortAssignment::meta_dstIOPortAssignment_end_;
		::Uml::AssociationRole IOPortAssignment::meta_srcIOPortAssignment_end_;
		::Uml::AssociationRole IOPortInfoBase::meta_dstIOPortAssignment, IOPortInfoBase::meta_dstIOPortAssignment_rev;
		::Uml::AssociationRole Connector::meta_srcConnector_end_;
		::Uml::AssociationRole Connector::meta_dstConnector_end_;
		::Uml::AssociationRole ComponentBase::meta_referedbySystemRef;
		::Uml::AssociationRole Output::meta_dstOutCommMapping, Output::meta_dstOutCommMapping_rev;
		::Uml::AssociationRole Output::meta_dstConnector, Output::meta_dstConnector_rev;
		::Uml::AssociationRole Input::meta_srcConnector, Input::meta_srcConnector_rev;
		::Uml::AssociationRole Input::meta_srcInCommMapping, Input::meta_srcInCommMapping_rev;
		::Uml::AssociationRole TypeBase::meta_referedbyTypeStructRef;
		::Uml::AssociationRole TypeBaseRef::meta_ref;
		::Uml::AssociationRole TimingConstraint::meta_dstTimingConstraint_end_;
		::Uml::AssociationRole TimingConstraint::meta_srcTimingConstraint_end_;
		::Uml::AssociationRole TaskRef::meta_srcTimingConstraint, TaskRef::meta_srcTimingConstraint_rev;
		::Uml::AssociationRole TaskRef::meta_dstTimingConstraint, TaskRef::meta_dstTimingConstraint_rev;
		::Uml::AssociationRole TaskRef::meta_ref;
		::Uml::AssociationRole Line::meta_dstLine_end_;
		::Uml::AssociationRole Line::meta_srcLine_end_;
		::Uml::AssociationRole Subsystem::meta_referedbySubsystemRef;
		::Uml::AssociationRole Port::meta_srcLine, Port::meta_srcLine_rev;
		::Uml::AssociationRole Port::meta_dstLine, Port::meta_dstLine_rev;
		::Uml::AssociationRole Transition::meta_srcTransition_end_;
		::Uml::AssociationRole Transition::meta_dstTransition_end_;
		::Uml::AssociationRole ConnectorRef::meta_ref;
		::Uml::AssociationRole TransConnector::meta_referedbyConnectorRef;
		::Uml::AssociationRole TransConnector::meta_dstTransition, TransConnector::meta_dstTransition_rev;
		::Uml::AssociationRole TransConnector::meta_srcTransition, TransConnector::meta_srcTransition_rev;
		::Uml::AssociationRole Wire::meta_dstWire_end_;
		::Uml::AssociationRole Wire::meta_srcWire_end_;
		::Uml::AssociationRole Connectable::meta_srcWire, Connectable::meta_srcWire_rev;
		::Uml::AssociationRole Connectable::meta_dstWire, Connectable::meta_dstWire_rev;
		::Uml::AssociationRole Node::meta_referedbyNodeRef;
		::Uml::AssociationRole Channel::meta_referedbyChannelRef;
		::Uml::AssociationRole OutCommMapping::meta_srcOutCommMapping_end_;
		::Uml::AssociationRole OutCommMapping::meta_dstOutCommMapping_end_;
		::Uml::AssociationRole CommDst::meta_srcOutCommMapping, CommDst::meta_srcOutCommMapping_rev;
		::Uml::AssociationRole CommDst::meta_dstInCommMapping, CommDst::meta_dstInCommMapping_rev;
		::Uml::AssociationRole CommDst::meta_dstMsgAssignment, CommDst::meta_dstMsgAssignment_rev;
		::Uml::AssociationRole InCommMapping::meta_dstInCommMapping_end_;
		::Uml::AssociationRole InCommMapping::meta_srcInCommMapping_end_;
		::Uml::AssociationRole Component::meta_ref;
		::Uml::AssociationRole Message::meta_referedbyBusMessageRef;
		::Uml::AssociationRole MessageRef::meta_ref;
		::Uml::AssociationRole MsgAssignment::meta_srcMsgAssignment_end_;
		::Uml::AssociationRole MsgAssignment::meta_dstMsgAssignment_end_;
		::Uml::AssociationRole TaskAssignment::meta_srcTaskAssignment_end_;
		::Uml::AssociationRole TaskAssignment::meta_dstTaskAssignment_end_;
		::Uml::AssociationRole Task::meta_referedbyTaskRef;
		::Uml::AssociationRole Task::meta_dstTaskAssignment, Task::meta_dstTaskAssignment_rev;
		::Uml::AssociationRole NodeRef::meta_ref;
		::Uml::AssociationRole NodeRef::meta_srcTaskAssignment, NodeRef::meta_srcTaskAssignment_rev;
		::Uml::AssociationRole ChannelRef::meta_ref;
		::Uml::AssociationRole ChannelRef::meta_srcMsgAssignment, ChannelRef::meta_srcMsgAssignment_rev;
		::Uml::CompositionParentRole COutputPort::meta_CCode_parent;
		::Uml::CompositionParentRole CInputPort::meta_CCode_parent;
		::Uml::CompositionParentRole ArchitectureLibrary::meta_RootFolder_parent;
		::Uml::CompositionParentRole System::meta_ArchitectureLibrary_parent;
		::Uml::CompositionParentRole System::meta_DesignFolder_parent;
		::Uml::CompositionParentRole DesignFolder::meta_RootFolder_parent;
		::Uml::CompositionParentRole Connector::meta_System_parent;
		::Uml::CompositionParentRole Connector::meta_Task_parent;
		::Uml::CompositionParentRole ComponentBase::meta_System_parent;
		::Uml::CompositionParentRole Types::meta_RootFolder_parent;
		::Uml::CompositionParentRole TypeBase::meta_Types_parent;
		::Uml::CompositionParentRole TypeBaseRef::meta_TypeStruct_parent;
		::Uml::CompositionParentRole TypeBaseRef::meta_Port_parent;
		::Uml::CompositionParentRole TypeBaseRef::meta_StateDE_parent;
		::Uml::CompositionParentRole TimingConstraint::meta_TimingSheet_parent;
		::Uml::CompositionParentRole RequirementsLibrary::meta_RootFolder_parent;
		::Uml::CompositionParentRole TimingSheet::meta_DesignFolder_parent;
		::Uml::CompositionParentRole TimingSheet::meta_RequirementsLibrary_parent;
		::Uml::CompositionParentRole TaskRef::meta_TimingSheet_parent;
		::Uml::CompositionParentRole Block::meta_Subsystem_parent;
		::Uml::CompositionParentRole Parameter::meta_Parameter_Block_parent;
		::Uml::CompositionParentRole Annotation::meta_Block_parent;
		::Uml::CompositionParentRole Line::meta_Line_Block_parent;
		::Uml::CompositionParentRole Dataflow::meta_RootFolder_parent;
		::Uml::CompositionParentRole Subsystem::meta_DesignFolder_parent;
		::Uml::CompositionParentRole Subsystem::meta_Dataflow_parent;
		::Uml::CompositionParentRole Port::meta_Block_parent;
		::Uml::CompositionParentRole State::meta_Stateflow_parent;
		::Uml::CompositionParentRole Transition::meta_Transition_State_parent;
		::Uml::CompositionParentRole ConnectorRef::meta_Block_parent;
		::Uml::CompositionParentRole Stateflow::meta_RootFolder_parent;
		::Uml::CompositionParentRole TransConnector::meta_State_parent;
		::Uml::CompositionParentRole StateDE::meta_State_parent;
		::Uml::CompositionParentRole OS::meta_Node_parent;
		::Uml::CompositionParentRole Wire::meta_HardwareUnit_parent;
		::Uml::CompositionParentRole HardwareUnit::meta_DesignFolder_parent;
		::Uml::CompositionParentRole HardwareUnit::meta_PlatformLibrary_parent;
		::Uml::CompositionParentRole PlatformLibrary::meta_RootFolder_parent;
		::Uml::CompositionParentRole Capability::meta_HWElement_parent;
		::Uml::CompositionParentRole HWElement::meta_HardwareUnit_parent;
		::Uml::CompositionParentRole BChan::meta_Router_parent;
		::Uml::CompositionParentRole Channel::meta_HardwareUnit_parent;
		::Uml::CompositionParentRole Channel::meta_Node_parent;
		::Uml::CompositionParentRole CommDst::meta_Task_parent;
		::Uml::CompositionParentRole CommMapping::meta_Task_parent;
		::Uml::CompositionParentRole Component::meta_Task_parent;
		::Uml::CompositionParentRole MsgAssignment::meta_Task_parent;
		::Uml::CompositionParentRole TaskAssignment::meta_Deployment_parent;
		::Uml::CompositionParentRole DeploymentLibrary::meta_RootFolder_parent;
		::Uml::CompositionParentRole Deployment::meta_DesignFolder_parent;
		::Uml::CompositionParentRole Deployment::meta_DeploymentLibrary_parent;
		::Uml::CompositionParentRole Task::meta_Deployment_parent;
		::Uml::CompositionParentRole NodeRef::meta_Deployment_parent;
		::Uml::CompositionParentRole RootFolder::meta_RootFolder_parent;
		::Uml::CompositionChildRole CCode::meta_CInputPort_children;
		::Uml::CompositionChildRole CCode::meta_COutputPort_children;
		::Uml::CompositionChildRole ArchitectureLibrary::meta_System_children;
		::Uml::CompositionChildRole System::meta_ComponentBase_children;
		::Uml::CompositionChildRole System::meta_Connector_children;
		::Uml::CompositionChildRole DesignFolder::meta_TimingSheet_children;
		::Uml::CompositionChildRole DesignFolder::meta_System_children;
		::Uml::CompositionChildRole DesignFolder::meta_Subsystem_children;
		::Uml::CompositionChildRole DesignFolder::meta_HardwareUnit_children;
		::Uml::CompositionChildRole DesignFolder::meta_Deployment_children;
		::Uml::CompositionChildRole Types::meta_TypeBase_children;
		::Uml::CompositionChildRole TypeStruct::meta_TypeBaseRef_children;
		::Uml::CompositionChildRole RequirementsLibrary::meta_TimingSheet_children;
		::Uml::CompositionChildRole TimingSheet::meta_TimingConstraint_children;
		::Uml::CompositionChildRole TimingSheet::meta_TaskRef_children;
		::Uml::CompositionChildRole Block::meta_Line;
		::Uml::CompositionChildRole Block::meta_Parameter;
		::Uml::CompositionChildRole Block::meta_Annotation_children;
		::Uml::CompositionChildRole Block::meta_ConnectorRef_children;
		::Uml::CompositionChildRole Block::meta_Port_children;
		::Uml::CompositionChildRole Dataflow::meta_Subsystem_children;
		::Uml::CompositionChildRole Subsystem::meta_Block_children;
		::Uml::CompositionChildRole Port::meta_TypeBaseRef_child;
		::Uml::CompositionChildRole State::meta_TransConnector_children;
		::Uml::CompositionChildRole State::meta_Transition;
		::Uml::CompositionChildRole State::meta_StateDE_children;
		::Uml::CompositionChildRole Stateflow::meta_State_children;
		::Uml::CompositionChildRole StateDE::meta_TypeBaseRef_child;
		::Uml::CompositionChildRole HardwareUnit::meta_HWElement_children;
		::Uml::CompositionChildRole HardwareUnit::meta_Wire_children;
		::Uml::CompositionChildRole HardwareUnit::meta_Channel_children;
		::Uml::CompositionChildRole PlatformLibrary::meta_HardwareUnit_children;
		::Uml::CompositionChildRole Router::meta_BChan_children;
		::Uml::CompositionChildRole HWElement::meta_Capability_children;
		::Uml::CompositionChildRole Node::meta_Channel_children;
		::Uml::CompositionChildRole Node::meta_OS_child;
		::Uml::CompositionChildRole DeploymentLibrary::meta_Deployment_children;
		::Uml::CompositionChildRole Deployment::meta_Task_children;
		::Uml::CompositionChildRole Deployment::meta_TaskAssignment_children;
		::Uml::CompositionChildRole Deployment::meta_NodeRef_children;
		::Uml::CompositionChildRole Task::meta_Connector_children;
		::Uml::CompositionChildRole Task::meta_Component_children;
		::Uml::CompositionChildRole Task::meta_CommDst_children;
		::Uml::CompositionChildRole Task::meta_CommMapping_children;
		::Uml::CompositionChildRole Task::meta_MsgAssignment_children;
		::Uml::CompositionChildRole RootFolder::meta_DesignFolder_children;
		::Uml::CompositionChildRole RootFolder::meta_ArchitectureLibrary_children;
		::Uml::CompositionChildRole RootFolder::meta_Types_children;
		::Uml::CompositionChildRole RootFolder::meta_RequirementsLibrary_children;
		::Uml::CompositionChildRole RootFolder::meta_Dataflow_children;
		::Uml::CompositionChildRole RootFolder::meta_Stateflow_children;
		::Uml::CompositionChildRole RootFolder::meta_PlatformLibrary_children;
		::Uml::CompositionChildRole RootFolder::meta_DeploymentLibrary_children;
		::Uml::CompositionChildRole RootFolder::meta_RootFolder_children;
		void Creates()
		{
			TTTask::meta = ::Uml::Class::Create(umldiagram);
			TTBus::meta = ::Uml::Class::Create(umldiagram);
			TTMessage::meta = ::Uml::Class::Create(umldiagram);
			OldBus::meta = ::Uml::Class::Create(umldiagram);
			OldTask::meta = ::Uml::Class::Create(umldiagram);
			CCode::meta = ::Uml::Class::Create(umldiagram);
			SubsystemRef::meta = ::Uml::Class::Create(umldiagram);
			COutputPort::meta = ::Uml::Class::Create(umldiagram);
			CInputPort::meta = ::Uml::Class::Create(umldiagram);
			IOPortExp::meta = ::Uml::Class::Create(umldiagram);
			IOPortInfo::meta = ::Uml::Class::Create(umldiagram);
			IOPortInfoRef::meta = ::Uml::Class::Create(umldiagram);
			IOPortAssignment::meta = ::Uml::Class::Create(umldiagram);
			IOPortInfoBase::meta = ::Uml::Class::Create(umldiagram);
			ArchitectureLibrary::meta = ::Uml::Class::Create(umldiagram);
			System::meta = ::Uml::Class::Create(umldiagram);
			DesignFolder::meta = ::Uml::Class::Create(umldiagram);
			Connector::meta = ::Uml::Class::Create(umldiagram);
			ComponentBase::meta = ::Uml::Class::Create(umldiagram);
			Output::meta = ::Uml::Class::Create(umldiagram);
			Input::meta = ::Uml::Class::Create(umldiagram);
			Types::meta = ::Uml::Class::Create(umldiagram);
			TypeStruct::meta = ::Uml::Class::Create(umldiagram);
			Matrix::meta = ::Uml::Class::Create(umldiagram);
			TypeBase::meta = ::Uml::Class::Create(umldiagram);
			TypeBaseRef::meta = ::Uml::Class::Create(umldiagram);
			TimingConstraint::meta = ::Uml::Class::Create(umldiagram);
			RequirementsLibrary::meta = ::Uml::Class::Create(umldiagram);
			TimingSheet::meta = ::Uml::Class::Create(umldiagram);
			TaskRef::meta = ::Uml::Class::Create(umldiagram);
			Primitive::meta = ::Uml::Class::Create(umldiagram);
			Block::meta = ::Uml::Class::Create(umldiagram);
			Parameter::meta = ::Uml::Class::Create(umldiagram);
			Reference::meta = ::Uml::Class::Create(umldiagram);
			Annotation::meta = ::Uml::Class::Create(umldiagram);
			Line::meta = ::Uml::Class::Create(umldiagram);
			Dataflow::meta = ::Uml::Class::Create(umldiagram);
			Subsystem::meta = ::Uml::Class::Create(umldiagram);
			OutputPort::meta = ::Uml::Class::Create(umldiagram);
			OutPort::meta = ::Uml::Class::Create(umldiagram);
			StatePort::meta = ::Uml::Class::Create(umldiagram);
			Port::meta = ::Uml::Class::Create(umldiagram);
			EnablePort::meta = ::Uml::Class::Create(umldiagram);
			TriggerPort::meta = ::Uml::Class::Create(umldiagram);
			InputPort::meta = ::Uml::Class::Create(umldiagram);
			InPort::meta = ::Uml::Class::Create(umldiagram);
			ActionPort::meta = ::Uml::Class::Create(umldiagram);
			State::meta = ::Uml::Class::Create(umldiagram);
			Transition::meta = ::Uml::Class::Create(umldiagram);
			History::meta = ::Uml::Class::Create(umldiagram);
			TransStart::meta = ::Uml::Class::Create(umldiagram);
			Junction::meta = ::Uml::Class::Create(umldiagram);
			ConnectorRef::meta = ::Uml::Class::Create(umldiagram);
			Stateflow::meta = ::Uml::Class::Create(umldiagram);
			TransConnector::meta = ::Uml::Class::Create(umldiagram);
			Data::meta = ::Uml::Class::Create(umldiagram);
			Event::meta = ::Uml::Class::Create(umldiagram);
			StateDE::meta = ::Uml::Class::Create(umldiagram);
			OS::meta = ::Uml::Class::Create(umldiagram);
			Wire::meta = ::Uml::Class::Create(umldiagram);
			HardwareUnit::meta = ::Uml::Class::Create(umldiagram);
			PlatformLibrary::meta = ::Uml::Class::Create(umldiagram);
			Router::meta = ::Uml::Class::Create(umldiagram);
			Connectable::meta = ::Uml::Class::Create(umldiagram);
			Capability::meta = ::Uml::Class::Create(umldiagram);
			HWElement::meta = ::Uml::Class::Create(umldiagram);
			IChan::meta = ::Uml::Class::Create(umldiagram);
			OChan::meta = ::Uml::Class::Create(umldiagram);
			BChan::meta = ::Uml::Class::Create(umldiagram);
			Bus::meta = ::Uml::Class::Create(umldiagram);
			Node::meta = ::Uml::Class::Create(umldiagram);
			Channel::meta = ::Uml::Class::Create(umldiagram);
			OutCommMapping::meta = ::Uml::Class::Create(umldiagram);
			CommDst::meta = ::Uml::Class::Create(umldiagram);
			CommMapping::meta = ::Uml::Class::Create(umldiagram);
			InCommMapping::meta = ::Uml::Class::Create(umldiagram);
			Component::meta = ::Uml::Class::Create(umldiagram);
			Message::meta = ::Uml::Class::Create(umldiagram);
			MessageRef::meta = ::Uml::Class::Create(umldiagram);
			IOPort::meta = ::Uml::Class::Create(umldiagram);
			MsgAssignment::meta = ::Uml::Class::Create(umldiagram);
			TaskAssignment::meta = ::Uml::Class::Create(umldiagram);
			DeploymentLibrary::meta = ::Uml::Class::Create(umldiagram);
			Deployment::meta = ::Uml::Class::Create(umldiagram);
			Task::meta = ::Uml::Class::Create(umldiagram);
			NodeRef::meta = ::Uml::Class::Create(umldiagram);
			ChannelRef::meta = ::Uml::Class::Create(umldiagram);
			RootFolder::meta = ::Uml::Class::Create(umldiagram);
			MgaObject::meta = ::Uml::Class::Create(umldiagram);
			TTTask::meta_TTFreq = ::Uml::Attribute::Create(TTTask::meta);
			TTTask::meta_TTSchedule = ::Uml::Attribute::Create(TTTask::meta);
			TTTask::meta_TTExecTime = ::Uml::Attribute::Create(TTTask::meta);
			TTBus::meta_TTSetupTime = ::Uml::Attribute::Create(TTBus::meta);
			TTBus::meta_Hyperperiod = ::Uml::Attribute::Create(TTBus::meta);
			TTBus::meta_SlotSize = ::Uml::Attribute::Create(TTBus::meta);
			TTMessage::meta_TTSchedule = ::Uml::Attribute::Create(TTMessage::meta);
			OldBus::meta_FrameSize = ::Uml::Attribute::Create(OldBus::meta);
			OldBus::meta_Medium = ::Uml::Attribute::Create(OldBus::meta);
			OldTask::meta_Priority = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_TaskType = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_Activation = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_AutoStart = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_Preemption = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_Cyclic = ::Uml::Attribute::Create(OldTask::meta);
			OldTask::meta_CycleTime = ::Uml::Attribute::Create(OldTask::meta);
			IOPortInfo::meta_DataInit = ::Uml::Attribute::Create(IOPortInfo::meta);
			IOPortInfo::meta_DataSize = ::Uml::Attribute::Create(IOPortInfo::meta);
			IOPortInfo::meta_DataMin = ::Uml::Attribute::Create(IOPortInfo::meta);
			IOPortInfo::meta_DataMax = ::Uml::Attribute::Create(IOPortInfo::meta);
			IOPortInfo::meta_Scale = ::Uml::Attribute::Create(IOPortInfo::meta);
			IOPortInfo::meta_Offset = ::Uml::Attribute::Create(IOPortInfo::meta);
			ArchitectureLibrary::meta_name = ::Uml::Attribute::Create(ArchitectureLibrary::meta);
			DesignFolder::meta_name = ::Uml::Attribute::Create(DesignFolder::meta);
			Connector::meta_ConnectionType = ::Uml::Attribute::Create(Connector::meta);
			ComponentBase::meta_Deadline = ::Uml::Attribute::Create(ComponentBase::meta);
			ComponentBase::meta_Period = ::Uml::Attribute::Create(ComponentBase::meta);
			Types::meta_name = ::Uml::Attribute::Create(Types::meta);
			TypeStruct::meta_MemberCount = ::Uml::Attribute::Create(TypeStruct::meta);
			Matrix::meta_rows = ::Uml::Attribute::Create(Matrix::meta);
			Matrix::meta_Type = ::Uml::Attribute::Create(Matrix::meta);
			Matrix::meta_columns = ::Uml::Attribute::Create(Matrix::meta);
			TypeBaseRef::meta_MemberIndex = ::Uml::Attribute::Create(TypeBaseRef::meta);
			TimingConstraint::meta_Latency = ::Uml::Attribute::Create(TimingConstraint::meta);
			RequirementsLibrary::meta_name = ::Uml::Attribute::Create(RequirementsLibrary::meta);
			Block::meta_Tag = ::Uml::Attribute::Create(Block::meta);
			Block::meta_BlockType = ::Uml::Attribute::Create(Block::meta);
			Block::meta_Name = ::Uml::Attribute::Create(Block::meta);
			Block::meta_Description = ::Uml::Attribute::Create(Block::meta);
			Block::meta_Priority = ::Uml::Attribute::Create(Block::meta);
			Block::meta_SampleTime = ::Uml::Attribute::Create(Block::meta);
			Block::meta_UserData = ::Uml::Attribute::Create(Block::meta);
			Parameter::meta_Value = ::Uml::Attribute::Create(Parameter::meta);
			Reference::meta_SourceBlock = ::Uml::Attribute::Create(Reference::meta);
			Reference::meta_SourceType = ::Uml::Attribute::Create(Reference::meta);
			Annotation::meta_Text = ::Uml::Attribute::Create(Annotation::meta);
			Line::meta_Name = ::Uml::Attribute::Create(Line::meta);
			Dataflow::meta_name = ::Uml::Attribute::Create(Dataflow::meta);
			OutputPort::meta_Number = ::Uml::Attribute::Create(OutputPort::meta);
			EnablePort::meta_StatesWhenEnabling = ::Uml::Attribute::Create(EnablePort::meta);
			TriggerPort::meta_TriggerType = ::Uml::Attribute::Create(TriggerPort::meta);
			InputPort::meta_Number = ::Uml::Attribute::Create(InputPort::meta);
			State::meta_Name = ::Uml::Attribute::Create(State::meta);
			State::meta_Decomposition = ::Uml::Attribute::Create(State::meta);
			State::meta_EnterAction = ::Uml::Attribute::Create(State::meta);
			State::meta_DuringAction = ::Uml::Attribute::Create(State::meta);
			State::meta_ExitAction = ::Uml::Attribute::Create(State::meta);
			State::meta_Order = ::Uml::Attribute::Create(State::meta);
			Transition::meta_Guard = ::Uml::Attribute::Create(Transition::meta);
			Transition::meta_Trigger = ::Uml::Attribute::Create(Transition::meta);
			Transition::meta_Action = ::Uml::Attribute::Create(Transition::meta);
			Transition::meta_ConditionAction = ::Uml::Attribute::Create(Transition::meta);
			Transition::meta_Order = ::Uml::Attribute::Create(Transition::meta);
			Stateflow::meta_name = ::Uml::Attribute::Create(Stateflow::meta);
			Data::meta_Name = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Description = ::Uml::Attribute::Create(Data::meta);
			Data::meta_DataType = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Port = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Units = ::Uml::Attribute::Create(Data::meta);
			Data::meta_InitialValue = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Min = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Max = ::Uml::Attribute::Create(Data::meta);
			Data::meta_ArraySize = ::Uml::Attribute::Create(Data::meta);
			Data::meta_ArrayFirstIndex = ::Uml::Attribute::Create(Data::meta);
			Data::meta_Scope = ::Uml::Attribute::Create(Data::meta);
			Event::meta_Name = ::Uml::Attribute::Create(Event::meta);
			Event::meta_Description = ::Uml::Attribute::Create(Event::meta);
			Event::meta_Scope = ::Uml::Attribute::Create(Event::meta);
			Event::meta_Trigger = ::Uml::Attribute::Create(Event::meta);
			Event::meta_Port = ::Uml::Attribute::Create(Event::meta);
			OS::meta_SendOverheadTime = ::Uml::Attribute::Create(OS::meta);
			OS::meta_ContextSwitchTime = ::Uml::Attribute::Create(OS::meta);
			OS::meta_RecvOverheadTime = ::Uml::Attribute::Create(OS::meta);
			OS::meta_TickResolution = ::Uml::Attribute::Create(OS::meta);
			PlatformLibrary::meta_name = ::Uml::Attribute::Create(PlatformLibrary::meta);
			HWElement::meta_MetaData = ::Uml::Attribute::Create(HWElement::meta);
			Bus::meta_OverheadTime = ::Uml::Attribute::Create(Bus::meta);
			Bus::meta_DataRate = ::Uml::Attribute::Create(Bus::meta);
			Bus::meta_MinFrameSize = ::Uml::Attribute::Create(Bus::meta);
			Bus::meta_SwitchMemorySize = ::Uml::Attribute::Create(Bus::meta);
			Node::meta_ROM = ::Uml::Attribute::Create(Node::meta);
			Node::meta_Simulator = ::Uml::Attribute::Create(Node::meta);
			Node::meta_RAM = ::Uml::Attribute::Create(Node::meta);
			Node::meta_Speed = ::Uml::Attribute::Create(Node::meta);
			Node::meta_CPU = ::Uml::Attribute::Create(Node::meta);
			Channel::meta_InterruptNum = ::Uml::Attribute::Create(Channel::meta);
			Component::meta_WCET = ::Uml::Attribute::Create(Component::meta);
			Message::meta_MsgSize = ::Uml::Attribute::Create(Message::meta);
			Message::meta_MsgMetaData = ::Uml::Attribute::Create(Message::meta);
			DeploymentLibrary::meta_name = ::Uml::Attribute::Create(DeploymentLibrary::meta);
			RootFolder::meta_name = ::Uml::Attribute::Create(RootFolder::meta);
			MgaObject::meta_position = ::Uml::Attribute::Create(MgaObject::meta);
			MgaObject::meta_name = ::Uml::Attribute::Create(MgaObject::meta);
		}
		void InitClassesAttributes()
		{
			TTTask::meta.name() = "TTTask";
			TTTask::meta.isAbstract() = false;
			TTTask::meta.stereotype() = "Model";
			TTBus::meta.name() = "TTBus";
			TTBus::meta.isAbstract() = false;
			TTBus::meta.stereotype() = "Model";
			TTMessage::meta.name() = "TTMessage";
			TTMessage::meta.isAbstract() = false;
			TTMessage::meta.stereotype() = "Atom";
			OldBus::meta.name() = "OldBus";
			OldBus::meta.isAbstract() = false;
			OldBus::meta.stereotype() = "Model";
			OldTask::meta.name() = "OldTask";
			OldTask::meta.isAbstract() = false;
			OldTask::meta.stereotype() = "Model";
			CCode::meta.name() = "CCode";
			CCode::meta.isAbstract() = false;
			CCode::meta.stereotype() = "Model";
			SubsystemRef::meta.name() = "SubsystemRef";
			SubsystemRef::meta.isAbstract() = false;
			SubsystemRef::meta.stereotype() = "Reference";
			COutputPort::meta.name() = "COutputPort";
			COutputPort::meta.isAbstract() = false;
			COutputPort::meta.stereotype() = "Model";
			CInputPort::meta.name() = "CInputPort";
			CInputPort::meta.isAbstract() = false;
			CInputPort::meta.stereotype() = "Model";
			IOPortExp::meta.name() = "IOPortExp";
			IOPortExp::meta.isAbstract() = true;
			IOPortExp::meta.stereotype() = "FCO";
			IOPortInfo::meta.name() = "IOPortInfo";
			IOPortInfo::meta.isAbstract() = false;
			IOPortInfo::meta.stereotype() = "Model";
			IOPortInfoRef::meta.name() = "IOPortInfoRef";
			IOPortInfoRef::meta.isAbstract() = false;
			IOPortInfoRef::meta.stereotype() = "Reference";
			IOPortAssignment::meta.name() = "IOPortAssignment";
			IOPortAssignment::meta.isAbstract() = false;
			IOPortAssignment::meta.stereotype() = "Connection";
			IOPortInfoBase::meta.name() = "IOPortInfoBase";
			IOPortInfoBase::meta.isAbstract() = true;
			IOPortInfoBase::meta.stereotype() = "FCO";
			ArchitectureLibrary::meta.name() = "ArchitectureLibrary";
			ArchitectureLibrary::meta.isAbstract() = false;
			ArchitectureLibrary::meta.stereotype() = "Folder";
			System::meta.name() = "System";
			System::meta.isAbstract() = false;
			System::meta.stereotype() = "Model";
			DesignFolder::meta.name() = "DesignFolder";
			DesignFolder::meta.isAbstract() = false;
			DesignFolder::meta.stereotype() = "Folder";
			Connector::meta.name() = "Connector";
			Connector::meta.isAbstract() = false;
			Connector::meta.stereotype() = "Connection";
			ComponentBase::meta.name() = "ComponentBase";
			ComponentBase::meta.isAbstract() = true;
			ComponentBase::meta.stereotype() = "FCO";
			Output::meta.name() = "Output";
			Output::meta.isAbstract() = true;
			Output::meta.stereotype() = "Model";
			Input::meta.name() = "Input";
			Input::meta.isAbstract() = true;
			Input::meta.stereotype() = "Model";
			Types::meta.name() = "Types";
			Types::meta.isAbstract() = false;
			Types::meta.stereotype() = "Folder";
			TypeStruct::meta.name() = "TypeStruct";
			TypeStruct::meta.isAbstract() = false;
			TypeStruct::meta.stereotype() = "Model";
			Matrix::meta.name() = "Matrix";
			Matrix::meta.isAbstract() = false;
			Matrix::meta.stereotype() = "Atom";
			TypeBase::meta.name() = "TypeBase";
			TypeBase::meta.isAbstract() = true;
			TypeBase::meta.stereotype() = "FCO";
			TypeBaseRef::meta.name() = "TypeBaseRef";
			TypeBaseRef::meta.isAbstract() = false;
			TypeBaseRef::meta.stereotype() = "Reference";
			TimingConstraint::meta.name() = "TimingConstraint";
			TimingConstraint::meta.isAbstract() = false;
			TimingConstraint::meta.stereotype() = "Connection";
			RequirementsLibrary::meta.name() = "RequirementsLibrary";
			RequirementsLibrary::meta.isAbstract() = false;
			RequirementsLibrary::meta.stereotype() = "Folder";
			TimingSheet::meta.name() = "TimingSheet";
			TimingSheet::meta.isAbstract() = false;
			TimingSheet::meta.stereotype() = "Model";
			TaskRef::meta.name() = "TaskRef";
			TaskRef::meta.isAbstract() = false;
			TaskRef::meta.stereotype() = "Reference";
			Primitive::meta.name() = "Primitive";
			Primitive::meta.isAbstract() = false;
			Primitive::meta.stereotype() = "Model";
			Block::meta.name() = "Block";
			Block::meta.isAbstract() = true;
			Block::meta.stereotype() = "Model";
			Parameter::meta.name() = "Parameter";
			Parameter::meta.isAbstract() = false;
			Parameter::meta.stereotype() = "Atom";
			Reference::meta.name() = "Reference";
			Reference::meta.isAbstract() = false;
			Reference::meta.stereotype() = "Model";
			Annotation::meta.name() = "Annotation";
			Annotation::meta.isAbstract() = false;
			Annotation::meta.stereotype() = "Atom";
			Line::meta.name() = "Line";
			Line::meta.isAbstract() = false;
			Line::meta.stereotype() = "Connection";
			Dataflow::meta.name() = "Dataflow";
			Dataflow::meta.isAbstract() = false;
			Dataflow::meta.stereotype() = "Folder";
			Subsystem::meta.name() = "Subsystem";
			Subsystem::meta.isAbstract() = false;
			Subsystem::meta.stereotype() = "Model";
			OutputPort::meta.name() = "OutputPort";
			OutputPort::meta.isAbstract() = false;
			OutputPort::meta.stereotype() = "Model";
			OutPort::meta.name() = "OutPort";
			OutPort::meta.isAbstract() = true;
			OutPort::meta.stereotype() = "Model";
			StatePort::meta.name() = "StatePort";
			StatePort::meta.isAbstract() = false;
			StatePort::meta.stereotype() = "Model";
			Port::meta.name() = "Port";
			Port::meta.isAbstract() = true;
			Port::meta.stereotype() = "Model";
			EnablePort::meta.name() = "EnablePort";
			EnablePort::meta.isAbstract() = false;
			EnablePort::meta.stereotype() = "Model";
			TriggerPort::meta.name() = "TriggerPort";
			TriggerPort::meta.isAbstract() = false;
			TriggerPort::meta.stereotype() = "Model";
			InputPort::meta.name() = "InputPort";
			InputPort::meta.isAbstract() = false;
			InputPort::meta.stereotype() = "Model";
			InPort::meta.name() = "InPort";
			InPort::meta.isAbstract() = true;
			InPort::meta.stereotype() = "Model";
			ActionPort::meta.name() = "ActionPort";
			ActionPort::meta.isAbstract() = false;
			ActionPort::meta.stereotype() = "Model";
			State::meta.name() = "State";
			State::meta.isAbstract() = false;
			State::meta.stereotype() = "Model";
			Transition::meta.name() = "Transition";
			Transition::meta.isAbstract() = false;
			Transition::meta.stereotype() = "Connection";
			History::meta.name() = "History";
			History::meta.isAbstract() = false;
			History::meta.stereotype() = "Atom";
			TransStart::meta.name() = "TransStart";
			TransStart::meta.isAbstract() = false;
			TransStart::meta.stereotype() = "Atom";
			Junction::meta.name() = "Junction";
			Junction::meta.isAbstract() = false;
			Junction::meta.stereotype() = "Atom";
			ConnectorRef::meta.name() = "ConnectorRef";
			ConnectorRef::meta.isAbstract() = false;
			ConnectorRef::meta.stereotype() = "Reference";
			Stateflow::meta.name() = "Stateflow";
			Stateflow::meta.isAbstract() = false;
			Stateflow::meta.stereotype() = "Folder";
			TransConnector::meta.name() = "TransConnector";
			TransConnector::meta.isAbstract() = true;
			TransConnector::meta.stereotype() = "FCO";
			Data::meta.name() = "Data";
			Data::meta.isAbstract() = false;
			Data::meta.stereotype() = "Model";
			Event::meta.name() = "Event";
			Event::meta.isAbstract() = false;
			Event::meta.stereotype() = "Model";
			StateDE::meta.name() = "StateDE";
			StateDE::meta.isAbstract() = true;
			StateDE::meta.stereotype() = "Model";
			OS::meta.name() = "OS";
			OS::meta.isAbstract() = false;
			OS::meta.stereotype() = "Atom";
			Wire::meta.name() = "Wire";
			Wire::meta.isAbstract() = false;
			Wire::meta.stereotype() = "Connection";
			HardwareUnit::meta.name() = "HardwareUnit";
			HardwareUnit::meta.isAbstract() = false;
			HardwareUnit::meta.stereotype() = "Model";
			PlatformLibrary::meta.name() = "PlatformLibrary";
			PlatformLibrary::meta.isAbstract() = false;
			PlatformLibrary::meta.stereotype() = "Folder";
			Router::meta.name() = "Router";
			Router::meta.isAbstract() = false;
			Router::meta.stereotype() = "Model";
			Connectable::meta.name() = "Connectable";
			Connectable::meta.isAbstract() = true;
			Connectable::meta.stereotype() = "FCO";
			Capability::meta.name() = "Capability";
			Capability::meta.isAbstract() = false;
			Capability::meta.stereotype() = "Atom";
			HWElement::meta.name() = "HWElement";
			HWElement::meta.isAbstract() = true;
			HWElement::meta.stereotype() = "Model";
			IChan::meta.name() = "IChan";
			IChan::meta.isAbstract() = false;
			IChan::meta.stereotype() = "Atom";
			OChan::meta.name() = "OChan";
			OChan::meta.isAbstract() = false;
			OChan::meta.stereotype() = "Atom";
			BChan::meta.name() = "BChan";
			BChan::meta.isAbstract() = false;
			BChan::meta.stereotype() = "Atom";
			Bus::meta.name() = "Bus";
			Bus::meta.isAbstract() = true;
			Bus::meta.stereotype() = "Model";
			Node::meta.name() = "Node";
			Node::meta.isAbstract() = false;
			Node::meta.stereotype() = "Model";
			Channel::meta.name() = "Channel";
			Channel::meta.isAbstract() = true;
			Channel::meta.stereotype() = "Atom";
			OutCommMapping::meta.name() = "OutCommMapping";
			OutCommMapping::meta.isAbstract() = false;
			OutCommMapping::meta.stereotype() = "Connection";
			CommDst::meta.name() = "CommDst";
			CommDst::meta.isAbstract() = true;
			CommDst::meta.stereotype() = "FCO";
			CommMapping::meta.name() = "CommMapping";
			CommMapping::meta.isAbstract() = true;
			CommMapping::meta.stereotype() = "FCO";
			InCommMapping::meta.name() = "InCommMapping";
			InCommMapping::meta.isAbstract() = false;
			InCommMapping::meta.stereotype() = "Connection";
			Component::meta.name() = "Component";
			Component::meta.isAbstract() = false;
			Component::meta.stereotype() = "Reference";
			Message::meta.name() = "Message";
			Message::meta.isAbstract() = true;
			Message::meta.stereotype() = "Atom";
			MessageRef::meta.name() = "MessageRef";
			MessageRef::meta.isAbstract() = false;
			MessageRef::meta.stereotype() = "Reference";
			IOPort::meta.name() = "IOPort";
			IOPort::meta.isAbstract() = true;
			IOPort::meta.stereotype() = "FCO";
			MsgAssignment::meta.name() = "MsgAssignment";
			MsgAssignment::meta.isAbstract() = false;
			MsgAssignment::meta.stereotype() = "Connection";
			TaskAssignment::meta.name() = "TaskAssignment";
			TaskAssignment::meta.isAbstract() = false;
			TaskAssignment::meta.stereotype() = "Connection";
			DeploymentLibrary::meta.name() = "DeploymentLibrary";
			DeploymentLibrary::meta.isAbstract() = false;
			DeploymentLibrary::meta.stereotype() = "Folder";
			Deployment::meta.name() = "Deployment";
			Deployment::meta.isAbstract() = false;
			Deployment::meta.stereotype() = "Model";
			Task::meta.name() = "Task";
			Task::meta.isAbstract() = true;
			Task::meta.stereotype() = "Model";
			NodeRef::meta.name() = "NodeRef";
			NodeRef::meta.isAbstract() = false;
			NodeRef::meta.stereotype() = "Reference";
			ChannelRef::meta.name() = "ChannelRef";
			ChannelRef::meta.isAbstract() = false;
			ChannelRef::meta.stereotype() = "Reference";
			RootFolder::meta.name() = "RootFolder";
			RootFolder::meta.isAbstract() = false;
			RootFolder::meta.stereotype() = "Folder";
			MgaObject::meta.name() = "MgaObject";
			MgaObject::meta.isAbstract() = true;
			
			vector<string> TTTask_TTFreq_dva;
			TTTask_TTFreq_dva.push_back("1Hz");
			TTTask::meta_TTFreq.name() = "TTFreq";
			TTTask::meta_TTFreq.type() = "String";
			TTTask::meta_TTFreq.min() = 1;
			TTTask::meta_TTFreq.max() = 1;
			TTTask::meta_TTFreq.nonpersistent() = false;
			TTTask::meta_TTFreq.registry() = false;
			TTTask::meta_TTFreq.ordered() = false;
			TTTask::meta_TTFreq.visibility() = "public";
			TTTask::meta_TTFreq.defvalue() = TTTask_TTFreq_dva;
			TTTask::meta_TTSchedule.name() = "TTSchedule";
			TTTask::meta_TTSchedule.type() = "String";
			TTTask::meta_TTSchedule.min() = 1;
			TTTask::meta_TTSchedule.max() = 1;
			TTTask::meta_TTSchedule.nonpersistent() = false;
			TTTask::meta_TTSchedule.registry() = false;
			TTTask::meta_TTSchedule.ordered() = false;
			TTTask::meta_TTSchedule.visibility() = "public";
			TTTask::meta_TTSchedule.defvalue() = vector<string>();
			vector<string> TTTask_TTExecTime_dva;
			TTTask_TTExecTime_dva.push_back("0s");
			TTTask::meta_TTExecTime.name() = "TTExecTime";
			TTTask::meta_TTExecTime.type() = "String";
			TTTask::meta_TTExecTime.min() = 1;
			TTTask::meta_TTExecTime.max() = 1;
			TTTask::meta_TTExecTime.nonpersistent() = false;
			TTTask::meta_TTExecTime.registry() = false;
			TTTask::meta_TTExecTime.ordered() = false;
			TTTask::meta_TTExecTime.visibility() = "public";
			TTTask::meta_TTExecTime.defvalue() = TTTask_TTExecTime_dva;
			vector<string> TTBus_TTSetupTime_dva;
			TTBus_TTSetupTime_dva.push_back("0s");
			TTBus::meta_TTSetupTime.name() = "TTSetupTime";
			TTBus::meta_TTSetupTime.type() = "String";
			TTBus::meta_TTSetupTime.min() = 1;
			TTBus::meta_TTSetupTime.max() = 1;
			TTBus::meta_TTSetupTime.nonpersistent() = false;
			TTBus::meta_TTSetupTime.registry() = false;
			TTBus::meta_TTSetupTime.ordered() = false;
			TTBus::meta_TTSetupTime.visibility() = "public";
			TTBus::meta_TTSetupTime.defvalue() = TTBus_TTSetupTime_dva;
			vector<string> TTBus_Hyperperiod_dva;
			TTBus_Hyperperiod_dva.push_back("0s");
			TTBus::meta_Hyperperiod.name() = "Hyperperiod";
			TTBus::meta_Hyperperiod.type() = "String";
			TTBus::meta_Hyperperiod.min() = 1;
			TTBus::meta_Hyperperiod.max() = 1;
			TTBus::meta_Hyperperiod.nonpersistent() = false;
			TTBus::meta_Hyperperiod.registry() = false;
			TTBus::meta_Hyperperiod.ordered() = false;
			TTBus::meta_Hyperperiod.visibility() = "public";
			TTBus::meta_Hyperperiod.defvalue() = TTBus_Hyperperiod_dva;
			vector<string> TTBus_SlotSize_dva;
			TTBus_SlotSize_dva.push_back("512B");
			TTBus::meta_SlotSize.name() = "SlotSize";
			TTBus::meta_SlotSize.type() = "String";
			TTBus::meta_SlotSize.min() = 1;
			TTBus::meta_SlotSize.max() = 1;
			TTBus::meta_SlotSize.nonpersistent() = false;
			TTBus::meta_SlotSize.registry() = false;
			TTBus::meta_SlotSize.ordered() = false;
			TTBus::meta_SlotSize.visibility() = "public";
			TTBus::meta_SlotSize.defvalue() = TTBus_SlotSize_dva;
			TTMessage::meta_TTSchedule.name() = "TTSchedule";
			TTMessage::meta_TTSchedule.type() = "String";
			TTMessage::meta_TTSchedule.min() = 1;
			TTMessage::meta_TTSchedule.max() = 1;
			TTMessage::meta_TTSchedule.nonpersistent() = false;
			TTMessage::meta_TTSchedule.registry() = false;
			TTMessage::meta_TTSchedule.ordered() = false;
			TTMessage::meta_TTSchedule.visibility() = "public";
			TTMessage::meta_TTSchedule.defvalue() = vector<string>();
			OldBus::meta_FrameSize.name() = "FrameSize";
			OldBus::meta_FrameSize.type() = "Integer";
			OldBus::meta_FrameSize.min() = 1;
			OldBus::meta_FrameSize.max() = 1;
			OldBus::meta_FrameSize.nonpersistent() = false;
			OldBus::meta_FrameSize.registry() = false;
			OldBus::meta_FrameSize.ordered() = false;
			OldBus::meta_FrameSize.visibility() = "public";
			OldBus::meta_FrameSize.defvalue() = vector<string>();
			OldBus::meta_Medium.name() = "Medium";
			OldBus::meta_Medium.type() = "String";
			OldBus::meta_Medium.min() = 1;
			OldBus::meta_Medium.max() = 1;
			OldBus::meta_Medium.nonpersistent() = false;
			OldBus::meta_Medium.registry() = false;
			OldBus::meta_Medium.ordered() = false;
			OldBus::meta_Medium.visibility() = "public";
			OldBus::meta_Medium.defvalue() = vector<string>();
			OldTask::meta_Priority.name() = "Priority";
			OldTask::meta_Priority.type() = "Integer";
			OldTask::meta_Priority.min() = 1;
			OldTask::meta_Priority.max() = 1;
			OldTask::meta_Priority.nonpersistent() = false;
			OldTask::meta_Priority.registry() = false;
			OldTask::meta_Priority.ordered() = false;
			OldTask::meta_Priority.visibility() = "public";
			OldTask::meta_Priority.defvalue() = vector<string>();
			vector<string> OldTask_TaskType_dva;
			OldTask_TaskType_dva.push_back("AUTO");
			OldTask::meta_TaskType.name() = "TaskType";
			OldTask::meta_TaskType.type() = "String";
			OldTask::meta_TaskType.min() = 1;
			OldTask::meta_TaskType.max() = 1;
			OldTask::meta_TaskType.nonpersistent() = false;
			OldTask::meta_TaskType.registry() = false;
			OldTask::meta_TaskType.ordered() = false;
			OldTask::meta_TaskType.visibility() = "public";
			OldTask::meta_TaskType.defvalue() = OldTask_TaskType_dva;
			vector<string> OldTask_Activation_dva;
			OldTask_Activation_dva.push_back("1");
			OldTask::meta_Activation.name() = "Activation";
			OldTask::meta_Activation.type() = "Integer";
			OldTask::meta_Activation.min() = 1;
			OldTask::meta_Activation.max() = 1;
			OldTask::meta_Activation.nonpersistent() = false;
			OldTask::meta_Activation.registry() = false;
			OldTask::meta_Activation.ordered() = false;
			OldTask::meta_Activation.visibility() = "public";
			OldTask::meta_Activation.defvalue() = OldTask_Activation_dva;
			vector<string> OldTask_AutoStart_dva;
			OldTask_AutoStart_dva.push_back("true");
			OldTask::meta_AutoStart.name() = "AutoStart";
			OldTask::meta_AutoStart.type() = "Boolean";
			OldTask::meta_AutoStart.min() = 1;
			OldTask::meta_AutoStart.max() = 1;
			OldTask::meta_AutoStart.nonpersistent() = false;
			OldTask::meta_AutoStart.registry() = false;
			OldTask::meta_AutoStart.ordered() = false;
			OldTask::meta_AutoStart.visibility() = "public";
			OldTask::meta_AutoStart.defvalue() = OldTask_AutoStart_dva;
			vector<string> OldTask_Preemption_dva;
			OldTask_Preemption_dva.push_back("FULL");
			OldTask::meta_Preemption.name() = "Preemption";
			OldTask::meta_Preemption.type() = "String";
			OldTask::meta_Preemption.min() = 1;
			OldTask::meta_Preemption.max() = 1;
			OldTask::meta_Preemption.nonpersistent() = false;
			OldTask::meta_Preemption.registry() = false;
			OldTask::meta_Preemption.ordered() = false;
			OldTask::meta_Preemption.visibility() = "public";
			OldTask::meta_Preemption.defvalue() = OldTask_Preemption_dva;
			vector<string> OldTask_Cyclic_dva;
			OldTask_Cyclic_dva.push_back("false");
			OldTask::meta_Cyclic.name() = "Cyclic";
			OldTask::meta_Cyclic.type() = "Boolean";
			OldTask::meta_Cyclic.min() = 1;
			OldTask::meta_Cyclic.max() = 1;
			OldTask::meta_Cyclic.nonpersistent() = false;
			OldTask::meta_Cyclic.registry() = false;
			OldTask::meta_Cyclic.ordered() = false;
			OldTask::meta_Cyclic.visibility() = "public";
			OldTask::meta_Cyclic.defvalue() = OldTask_Cyclic_dva;
			OldTask::meta_CycleTime.name() = "CycleTime";
			OldTask::meta_CycleTime.type() = "Integer";
			OldTask::meta_CycleTime.min() = 1;
			OldTask::meta_CycleTime.max() = 1;
			OldTask::meta_CycleTime.nonpersistent() = false;
			OldTask::meta_CycleTime.registry() = false;
			OldTask::meta_CycleTime.ordered() = false;
			OldTask::meta_CycleTime.visibility() = "public";
			OldTask::meta_CycleTime.defvalue() = vector<string>();
			IOPortInfo::meta_DataInit.name() = "DataInit";
			IOPortInfo::meta_DataInit.type() = "String";
			IOPortInfo::meta_DataInit.min() = 1;
			IOPortInfo::meta_DataInit.max() = 1;
			IOPortInfo::meta_DataInit.nonpersistent() = false;
			IOPortInfo::meta_DataInit.registry() = false;
			IOPortInfo::meta_DataInit.ordered() = false;
			IOPortInfo::meta_DataInit.visibility() = "public";
			IOPortInfo::meta_DataInit.defvalue() = vector<string>();
			IOPortInfo::meta_DataSize.name() = "DataSize";
			IOPortInfo::meta_DataSize.type() = "String";
			IOPortInfo::meta_DataSize.min() = 1;
			IOPortInfo::meta_DataSize.max() = 1;
			IOPortInfo::meta_DataSize.nonpersistent() = false;
			IOPortInfo::meta_DataSize.registry() = false;
			IOPortInfo::meta_DataSize.ordered() = false;
			IOPortInfo::meta_DataSize.visibility() = "public";
			IOPortInfo::meta_DataSize.defvalue() = vector<string>();
			IOPortInfo::meta_DataMin.name() = "DataMin";
			IOPortInfo::meta_DataMin.type() = "String";
			IOPortInfo::meta_DataMin.min() = 1;
			IOPortInfo::meta_DataMin.max() = 1;
			IOPortInfo::meta_DataMin.nonpersistent() = false;
			IOPortInfo::meta_DataMin.registry() = false;
			IOPortInfo::meta_DataMin.ordered() = false;
			IOPortInfo::meta_DataMin.visibility() = "public";
			IOPortInfo::meta_DataMin.defvalue() = vector<string>();
			IOPortInfo::meta_DataMax.name() = "DataMax";
			IOPortInfo::meta_DataMax.type() = "String";
			IOPortInfo::meta_DataMax.min() = 1;
			IOPortInfo::meta_DataMax.max() = 1;
			IOPortInfo::meta_DataMax.nonpersistent() = false;
			IOPortInfo::meta_DataMax.registry() = false;
			IOPortInfo::meta_DataMax.ordered() = false;
			IOPortInfo::meta_DataMax.visibility() = "public";
			IOPortInfo::meta_DataMax.defvalue() = vector<string>();
			IOPortInfo::meta_Scale.name() = "Scale";
			IOPortInfo::meta_Scale.type() = "String";
			IOPortInfo::meta_Scale.min() = 1;
			IOPortInfo::meta_Scale.max() = 1;
			IOPortInfo::meta_Scale.nonpersistent() = false;
			IOPortInfo::meta_Scale.registry() = false;
			IOPortInfo::meta_Scale.ordered() = false;
			IOPortInfo::meta_Scale.visibility() = "public";
			IOPortInfo::meta_Scale.defvalue() = vector<string>();
			IOPortInfo::meta_Offset.name() = "Offset";
			IOPortInfo::meta_Offset.type() = "String";
			IOPortInfo::meta_Offset.min() = 1;
			IOPortInfo::meta_Offset.max() = 1;
			IOPortInfo::meta_Offset.nonpersistent() = false;
			IOPortInfo::meta_Offset.registry() = false;
			IOPortInfo::meta_Offset.ordered() = false;
			IOPortInfo::meta_Offset.visibility() = "public";
			IOPortInfo::meta_Offset.defvalue() = vector<string>();
			ArchitectureLibrary::meta_name.name() = "name";
			ArchitectureLibrary::meta_name.type() = "String";
			ArchitectureLibrary::meta_name.min() = 0;
			ArchitectureLibrary::meta_name.max() = 1;
			ArchitectureLibrary::meta_name.nonpersistent() = false;
			ArchitectureLibrary::meta_name.registry() = false;
			ArchitectureLibrary::meta_name.ordered() = false;
			ArchitectureLibrary::meta_name.visibility() = "public";
			ArchitectureLibrary::meta_name.defvalue() = vector<string>();
			DesignFolder::meta_name.name() = "name";
			DesignFolder::meta_name.type() = "String";
			DesignFolder::meta_name.min() = 0;
			DesignFolder::meta_name.max() = 1;
			DesignFolder::meta_name.nonpersistent() = false;
			DesignFolder::meta_name.registry() = false;
			DesignFolder::meta_name.ordered() = false;
			DesignFolder::meta_name.visibility() = "public";
			DesignFolder::meta_name.defvalue() = vector<string>();
			Connector::meta_ConnectionType.name() = "ConnectionType";
			Connector::meta_ConnectionType.type() = "String";
			Connector::meta_ConnectionType.min() = 1;
			Connector::meta_ConnectionType.max() = 1;
			Connector::meta_ConnectionType.nonpersistent() = false;
			Connector::meta_ConnectionType.registry() = false;
			Connector::meta_ConnectionType.ordered() = false;
			Connector::meta_ConnectionType.visibility() = "public";
			Connector::meta_ConnectionType.defvalue() = vector<string>();
			ComponentBase::meta_Deadline.name() = "Deadline";
			ComponentBase::meta_Deadline.type() = "Integer";
			ComponentBase::meta_Deadline.min() = 1;
			ComponentBase::meta_Deadline.max() = 1;
			ComponentBase::meta_Deadline.nonpersistent() = false;
			ComponentBase::meta_Deadline.registry() = false;
			ComponentBase::meta_Deadline.ordered() = false;
			ComponentBase::meta_Deadline.visibility() = "public";
			ComponentBase::meta_Deadline.defvalue() = vector<string>();
			ComponentBase::meta_Period.name() = "Period";
			ComponentBase::meta_Period.type() = "Integer";
			ComponentBase::meta_Period.min() = 1;
			ComponentBase::meta_Period.max() = 1;
			ComponentBase::meta_Period.nonpersistent() = false;
			ComponentBase::meta_Period.registry() = false;
			ComponentBase::meta_Period.ordered() = false;
			ComponentBase::meta_Period.visibility() = "public";
			ComponentBase::meta_Period.defvalue() = vector<string>();
			Types::meta_name.name() = "name";
			Types::meta_name.type() = "String";
			Types::meta_name.min() = 0;
			Types::meta_name.max() = 1;
			Types::meta_name.nonpersistent() = false;
			Types::meta_name.registry() = false;
			Types::meta_name.ordered() = false;
			Types::meta_name.visibility() = "public";
			Types::meta_name.defvalue() = vector<string>();
			TypeStruct::meta_MemberCount.name() = "MemberCount";
			TypeStruct::meta_MemberCount.type() = "Integer";
			TypeStruct::meta_MemberCount.min() = 1;
			TypeStruct::meta_MemberCount.max() = 1;
			TypeStruct::meta_MemberCount.nonpersistent() = false;
			TypeStruct::meta_MemberCount.registry() = false;
			TypeStruct::meta_MemberCount.ordered() = false;
			TypeStruct::meta_MemberCount.visibility() = "public";
			TypeStruct::meta_MemberCount.defvalue() = vector<string>();
			Matrix::meta_rows.name() = "rows";
			Matrix::meta_rows.type() = "Integer";
			Matrix::meta_rows.min() = 1;
			Matrix::meta_rows.max() = 1;
			Matrix::meta_rows.nonpersistent() = false;
			Matrix::meta_rows.registry() = false;
			Matrix::meta_rows.ordered() = false;
			Matrix::meta_rows.visibility() = "public";
			Matrix::meta_rows.defvalue() = vector<string>();
			Matrix::meta_Type.name() = "Type";
			Matrix::meta_Type.type() = "String";
			Matrix::meta_Type.min() = 1;
			Matrix::meta_Type.max() = 1;
			Matrix::meta_Type.nonpersistent() = false;
			Matrix::meta_Type.registry() = false;
			Matrix::meta_Type.ordered() = false;
			Matrix::meta_Type.visibility() = "public";
			Matrix::meta_Type.defvalue() = vector<string>();
			Matrix::meta_columns.name() = "columns";
			Matrix::meta_columns.type() = "Integer";
			Matrix::meta_columns.min() = 1;
			Matrix::meta_columns.max() = 1;
			Matrix::meta_columns.nonpersistent() = false;
			Matrix::meta_columns.registry() = false;
			Matrix::meta_columns.ordered() = false;
			Matrix::meta_columns.visibility() = "public";
			Matrix::meta_columns.defvalue() = vector<string>();
			TypeBaseRef::meta_MemberIndex.name() = "MemberIndex";
			TypeBaseRef::meta_MemberIndex.type() = "Integer";
			TypeBaseRef::meta_MemberIndex.min() = 1;
			TypeBaseRef::meta_MemberIndex.max() = 1;
			TypeBaseRef::meta_MemberIndex.nonpersistent() = false;
			TypeBaseRef::meta_MemberIndex.registry() = false;
			TypeBaseRef::meta_MemberIndex.ordered() = false;
			TypeBaseRef::meta_MemberIndex.visibility() = "public";
			TypeBaseRef::meta_MemberIndex.defvalue() = vector<string>();
			vector<string> TimingConstraint_Latency_dva;
			TimingConstraint_Latency_dva.push_back("1s");
			TimingConstraint::meta_Latency.name() = "Latency";
			TimingConstraint::meta_Latency.type() = "String";
			TimingConstraint::meta_Latency.min() = 1;
			TimingConstraint::meta_Latency.max() = 1;
			TimingConstraint::meta_Latency.nonpersistent() = false;
			TimingConstraint::meta_Latency.registry() = false;
			TimingConstraint::meta_Latency.ordered() = false;
			TimingConstraint::meta_Latency.visibility() = "public";
			TimingConstraint::meta_Latency.defvalue() = TimingConstraint_Latency_dva;
			RequirementsLibrary::meta_name.name() = "name";
			RequirementsLibrary::meta_name.type() = "String";
			RequirementsLibrary::meta_name.min() = 0;
			RequirementsLibrary::meta_name.max() = 1;
			RequirementsLibrary::meta_name.nonpersistent() = false;
			RequirementsLibrary::meta_name.registry() = false;
			RequirementsLibrary::meta_name.ordered() = false;
			RequirementsLibrary::meta_name.visibility() = "public";
			RequirementsLibrary::meta_name.defvalue() = vector<string>();
			Block::meta_Tag.name() = "Tag";
			Block::meta_Tag.type() = "String";
			Block::meta_Tag.min() = 1;
			Block::meta_Tag.max() = 1;
			Block::meta_Tag.nonpersistent() = false;
			Block::meta_Tag.registry() = false;
			Block::meta_Tag.ordered() = false;
			Block::meta_Tag.visibility() = "public";
			Block::meta_Tag.defvalue() = vector<string>();
			Block::meta_BlockType.name() = "BlockType";
			Block::meta_BlockType.type() = "String";
			Block::meta_BlockType.min() = 1;
			Block::meta_BlockType.max() = 1;
			Block::meta_BlockType.nonpersistent() = false;
			Block::meta_BlockType.registry() = false;
			Block::meta_BlockType.ordered() = false;
			Block::meta_BlockType.visibility() = "public";
			Block::meta_BlockType.defvalue() = vector<string>();
			Block::meta_Name.name() = "Name";
			Block::meta_Name.type() = "String";
			Block::meta_Name.min() = 1;
			Block::meta_Name.max() = 1;
			Block::meta_Name.nonpersistent() = false;
			Block::meta_Name.registry() = false;
			Block::meta_Name.ordered() = false;
			Block::meta_Name.visibility() = "public";
			Block::meta_Name.defvalue() = vector<string>();
			Block::meta_Description.name() = "Description";
			Block::meta_Description.type() = "String";
			Block::meta_Description.min() = 1;
			Block::meta_Description.max() = 1;
			Block::meta_Description.nonpersistent() = false;
			Block::meta_Description.registry() = false;
			Block::meta_Description.ordered() = false;
			Block::meta_Description.visibility() = "public";
			Block::meta_Description.defvalue() = vector<string>();
			Block::meta_Priority.name() = "Priority";
			Block::meta_Priority.type() = "Integer";
			Block::meta_Priority.min() = 1;
			Block::meta_Priority.max() = 1;
			Block::meta_Priority.nonpersistent() = false;
			Block::meta_Priority.registry() = false;
			Block::meta_Priority.ordered() = false;
			Block::meta_Priority.visibility() = "public";
			Block::meta_Priority.defvalue() = vector<string>();
			Block::meta_SampleTime.name() = "SampleTime";
			Block::meta_SampleTime.type() = "Real";
			Block::meta_SampleTime.min() = 1;
			Block::meta_SampleTime.max() = 1;
			Block::meta_SampleTime.nonpersistent() = false;
			Block::meta_SampleTime.registry() = false;
			Block::meta_SampleTime.ordered() = false;
			Block::meta_SampleTime.visibility() = "public";
			Block::meta_SampleTime.defvalue() = vector<string>();
			Block::meta_UserData.name() = "UserData";
			Block::meta_UserData.type() = "String";
			Block::meta_UserData.min() = 1;
			Block::meta_UserData.max() = 1;
			Block::meta_UserData.nonpersistent() = false;
			Block::meta_UserData.registry() = false;
			Block::meta_UserData.ordered() = false;
			Block::meta_UserData.visibility() = "public";
			Block::meta_UserData.defvalue() = vector<string>();
			Parameter::meta_Value.name() = "Value";
			Parameter::meta_Value.type() = "String";
			Parameter::meta_Value.min() = 1;
			Parameter::meta_Value.max() = 1;
			Parameter::meta_Value.nonpersistent() = false;
			Parameter::meta_Value.registry() = false;
			Parameter::meta_Value.ordered() = false;
			Parameter::meta_Value.visibility() = "public";
			Parameter::meta_Value.defvalue() = vector<string>();
			Reference::meta_SourceBlock.name() = "SourceBlock";
			Reference::meta_SourceBlock.type() = "String";
			Reference::meta_SourceBlock.min() = 1;
			Reference::meta_SourceBlock.max() = 1;
			Reference::meta_SourceBlock.nonpersistent() = false;
			Reference::meta_SourceBlock.registry() = false;
			Reference::meta_SourceBlock.ordered() = false;
			Reference::meta_SourceBlock.visibility() = "public";
			Reference::meta_SourceBlock.defvalue() = vector<string>();
			Reference::meta_SourceType.name() = "SourceType";
			Reference::meta_SourceType.type() = "String";
			Reference::meta_SourceType.min() = 1;
			Reference::meta_SourceType.max() = 1;
			Reference::meta_SourceType.nonpersistent() = false;
			Reference::meta_SourceType.registry() = false;
			Reference::meta_SourceType.ordered() = false;
			Reference::meta_SourceType.visibility() = "public";
			Reference::meta_SourceType.defvalue() = vector<string>();
			Annotation::meta_Text.name() = "Text";
			Annotation::meta_Text.type() = "String";
			Annotation::meta_Text.min() = 1;
			Annotation::meta_Text.max() = 1;
			Annotation::meta_Text.nonpersistent() = false;
			Annotation::meta_Text.registry() = false;
			Annotation::meta_Text.ordered() = false;
			Annotation::meta_Text.visibility() = "public";
			Annotation::meta_Text.defvalue() = vector<string>();
			Line::meta_Name.name() = "Name";
			Line::meta_Name.type() = "String";
			Line::meta_Name.min() = 1;
			Line::meta_Name.max() = 1;
			Line::meta_Name.nonpersistent() = false;
			Line::meta_Name.registry() = false;
			Line::meta_Name.ordered() = false;
			Line::meta_Name.visibility() = "public";
			Line::meta_Name.defvalue() = vector<string>();
			Dataflow::meta_name.name() = "name";
			Dataflow::meta_name.type() = "String";
			Dataflow::meta_name.min() = 0;
			Dataflow::meta_name.max() = 1;
			Dataflow::meta_name.nonpersistent() = false;
			Dataflow::meta_name.registry() = false;
			Dataflow::meta_name.ordered() = false;
			Dataflow::meta_name.visibility() = "public";
			Dataflow::meta_name.defvalue() = vector<string>();
			OutputPort::meta_Number.name() = "Number";
			OutputPort::meta_Number.type() = "Integer";
			OutputPort::meta_Number.min() = 1;
			OutputPort::meta_Number.max() = 1;
			OutputPort::meta_Number.nonpersistent() = false;
			OutputPort::meta_Number.registry() = false;
			OutputPort::meta_Number.ordered() = false;
			OutputPort::meta_Number.visibility() = "public";
			OutputPort::meta_Number.defvalue() = vector<string>();
			vector<string> EnablePort_StatesWhenEnabling_dva;
			EnablePort_StatesWhenEnabling_dva.push_back("held");
			EnablePort::meta_StatesWhenEnabling.name() = "StatesWhenEnabling";
			EnablePort::meta_StatesWhenEnabling.type() = "String";
			EnablePort::meta_StatesWhenEnabling.min() = 1;
			EnablePort::meta_StatesWhenEnabling.max() = 1;
			EnablePort::meta_StatesWhenEnabling.nonpersistent() = false;
			EnablePort::meta_StatesWhenEnabling.registry() = false;
			EnablePort::meta_StatesWhenEnabling.ordered() = false;
			EnablePort::meta_StatesWhenEnabling.visibility() = "public";
			EnablePort::meta_StatesWhenEnabling.defvalue() = EnablePort_StatesWhenEnabling_dva;
			vector<string> TriggerPort_TriggerType_dva;
			TriggerPort_TriggerType_dva.push_back("rising");
			TriggerPort::meta_TriggerType.name() = "TriggerType";
			TriggerPort::meta_TriggerType.type() = "String";
			TriggerPort::meta_TriggerType.min() = 1;
			TriggerPort::meta_TriggerType.max() = 1;
			TriggerPort::meta_TriggerType.nonpersistent() = false;
			TriggerPort::meta_TriggerType.registry() = false;
			TriggerPort::meta_TriggerType.ordered() = false;
			TriggerPort::meta_TriggerType.visibility() = "public";
			TriggerPort::meta_TriggerType.defvalue() = TriggerPort_TriggerType_dva;
			InputPort::meta_Number.name() = "Number";
			InputPort::meta_Number.type() = "Integer";
			InputPort::meta_Number.min() = 1;
			InputPort::meta_Number.max() = 1;
			InputPort::meta_Number.nonpersistent() = false;
			InputPort::meta_Number.registry() = false;
			InputPort::meta_Number.ordered() = false;
			InputPort::meta_Number.visibility() = "public";
			InputPort::meta_Number.defvalue() = vector<string>();
			State::meta_Name.name() = "Name";
			State::meta_Name.type() = "String";
			State::meta_Name.min() = 1;
			State::meta_Name.max() = 1;
			State::meta_Name.nonpersistent() = false;
			State::meta_Name.registry() = false;
			State::meta_Name.ordered() = false;
			State::meta_Name.visibility() = "public";
			State::meta_Name.defvalue() = vector<string>();
			vector<string> State_Decomposition_dva;
			State_Decomposition_dva.push_back("OR_STATE");
			State::meta_Decomposition.name() = "Decomposition";
			State::meta_Decomposition.type() = "String";
			State::meta_Decomposition.min() = 1;
			State::meta_Decomposition.max() = 1;
			State::meta_Decomposition.nonpersistent() = false;
			State::meta_Decomposition.registry() = false;
			State::meta_Decomposition.ordered() = false;
			State::meta_Decomposition.visibility() = "public";
			State::meta_Decomposition.defvalue() = State_Decomposition_dva;
			State::meta_EnterAction.name() = "EnterAction";
			State::meta_EnterAction.type() = "String";
			State::meta_EnterAction.min() = 1;
			State::meta_EnterAction.max() = 1;
			State::meta_EnterAction.nonpersistent() = false;
			State::meta_EnterAction.registry() = false;
			State::meta_EnterAction.ordered() = false;
			State::meta_EnterAction.visibility() = "public";
			State::meta_EnterAction.defvalue() = vector<string>();
			State::meta_DuringAction.name() = "DuringAction";
			State::meta_DuringAction.type() = "String";
			State::meta_DuringAction.min() = 1;
			State::meta_DuringAction.max() = 1;
			State::meta_DuringAction.nonpersistent() = false;
			State::meta_DuringAction.registry() = false;
			State::meta_DuringAction.ordered() = false;
			State::meta_DuringAction.visibility() = "public";
			State::meta_DuringAction.defvalue() = vector<string>();
			State::meta_ExitAction.name() = "ExitAction";
			State::meta_ExitAction.type() = "String";
			State::meta_ExitAction.min() = 1;
			State::meta_ExitAction.max() = 1;
			State::meta_ExitAction.nonpersistent() = false;
			State::meta_ExitAction.registry() = false;
			State::meta_ExitAction.ordered() = false;
			State::meta_ExitAction.visibility() = "public";
			State::meta_ExitAction.defvalue() = vector<string>();
			State::meta_Order.name() = "Order";
			State::meta_Order.type() = "String";
			State::meta_Order.min() = 1;
			State::meta_Order.max() = 1;
			State::meta_Order.nonpersistent() = false;
			State::meta_Order.registry() = false;
			State::meta_Order.ordered() = false;
			State::meta_Order.visibility() = "public";
			State::meta_Order.defvalue() = vector<string>();
			Transition::meta_Guard.name() = "Guard";
			Transition::meta_Guard.type() = "String";
			Transition::meta_Guard.min() = 1;
			Transition::meta_Guard.max() = 1;
			Transition::meta_Guard.nonpersistent() = false;
			Transition::meta_Guard.registry() = false;
			Transition::meta_Guard.ordered() = false;
			Transition::meta_Guard.visibility() = "public";
			Transition::meta_Guard.defvalue() = vector<string>();
			Transition::meta_Trigger.name() = "Trigger";
			Transition::meta_Trigger.type() = "String";
			Transition::meta_Trigger.min() = 1;
			Transition::meta_Trigger.max() = 1;
			Transition::meta_Trigger.nonpersistent() = false;
			Transition::meta_Trigger.registry() = false;
			Transition::meta_Trigger.ordered() = false;
			Transition::meta_Trigger.visibility() = "public";
			Transition::meta_Trigger.defvalue() = vector<string>();
			Transition::meta_Action.name() = "Action";
			Transition::meta_Action.type() = "String";
			Transition::meta_Action.min() = 1;
			Transition::meta_Action.max() = 1;
			Transition::meta_Action.nonpersistent() = false;
			Transition::meta_Action.registry() = false;
			Transition::meta_Action.ordered() = false;
			Transition::meta_Action.visibility() = "public";
			Transition::meta_Action.defvalue() = vector<string>();
			Transition::meta_ConditionAction.name() = "ConditionAction";
			Transition::meta_ConditionAction.type() = "String";
			Transition::meta_ConditionAction.min() = 1;
			Transition::meta_ConditionAction.max() = 1;
			Transition::meta_ConditionAction.nonpersistent() = false;
			Transition::meta_ConditionAction.registry() = false;
			Transition::meta_ConditionAction.ordered() = false;
			Transition::meta_ConditionAction.visibility() = "public";
			Transition::meta_ConditionAction.defvalue() = vector<string>();
			Transition::meta_Order.name() = "Order";
			Transition::meta_Order.type() = "String";
			Transition::meta_Order.min() = 1;
			Transition::meta_Order.max() = 1;
			Transition::meta_Order.nonpersistent() = false;
			Transition::meta_Order.registry() = false;
			Transition::meta_Order.ordered() = false;
			Transition::meta_Order.visibility() = "public";
			Transition::meta_Order.defvalue() = vector<string>();
			Stateflow::meta_name.name() = "name";
			Stateflow::meta_name.type() = "String";
			Stateflow::meta_name.min() = 0;
			Stateflow::meta_name.max() = 1;
			Stateflow::meta_name.nonpersistent() = false;
			Stateflow::meta_name.registry() = false;
			Stateflow::meta_name.ordered() = false;
			Stateflow::meta_name.visibility() = "public";
			Stateflow::meta_name.defvalue() = vector<string>();
			Data::meta_Name.name() = "Name";
			Data::meta_Name.type() = "String";
			Data::meta_Name.min() = 1;
			Data::meta_Name.max() = 1;
			Data::meta_Name.nonpersistent() = false;
			Data::meta_Name.registry() = false;
			Data::meta_Name.ordered() = false;
			Data::meta_Name.visibility() = "public";
			Data::meta_Name.defvalue() = vector<string>();
			Data::meta_Description.name() = "Description";
			Data::meta_Description.type() = "String";
			Data::meta_Description.min() = 1;
			Data::meta_Description.max() = 1;
			Data::meta_Description.nonpersistent() = false;
			Data::meta_Description.registry() = false;
			Data::meta_Description.ordered() = false;
			Data::meta_Description.visibility() = "public";
			Data::meta_Description.defvalue() = vector<string>();
			Data::meta_DataType.name() = "DataType";
			Data::meta_DataType.type() = "String";
			Data::meta_DataType.min() = 1;
			Data::meta_DataType.max() = 1;
			Data::meta_DataType.nonpersistent() = false;
			Data::meta_DataType.registry() = false;
			Data::meta_DataType.ordered() = false;
			Data::meta_DataType.visibility() = "public";
			Data::meta_DataType.defvalue() = vector<string>();
			Data::meta_Port.name() = "Port";
			Data::meta_Port.type() = "Integer";
			Data::meta_Port.min() = 1;
			Data::meta_Port.max() = 1;
			Data::meta_Port.nonpersistent() = false;
			Data::meta_Port.registry() = false;
			Data::meta_Port.ordered() = false;
			Data::meta_Port.visibility() = "public";
			Data::meta_Port.defvalue() = vector<string>();
			Data::meta_Units.name() = "Units";
			Data::meta_Units.type() = "String";
			Data::meta_Units.min() = 1;
			Data::meta_Units.max() = 1;
			Data::meta_Units.nonpersistent() = false;
			Data::meta_Units.registry() = false;
			Data::meta_Units.ordered() = false;
			Data::meta_Units.visibility() = "public";
			Data::meta_Units.defvalue() = vector<string>();
			Data::meta_InitialValue.name() = "InitialValue";
			Data::meta_InitialValue.type() = "String";
			Data::meta_InitialValue.min() = 1;
			Data::meta_InitialValue.max() = 1;
			Data::meta_InitialValue.nonpersistent() = false;
			Data::meta_InitialValue.registry() = false;
			Data::meta_InitialValue.ordered() = false;
			Data::meta_InitialValue.visibility() = "public";
			Data::meta_InitialValue.defvalue() = vector<string>();
			Data::meta_Min.name() = "Min";
			Data::meta_Min.type() = "String";
			Data::meta_Min.min() = 1;
			Data::meta_Min.max() = 1;
			Data::meta_Min.nonpersistent() = false;
			Data::meta_Min.registry() = false;
			Data::meta_Min.ordered() = false;
			Data::meta_Min.visibility() = "public";
			Data::meta_Min.defvalue() = vector<string>();
			Data::meta_Max.name() = "Max";
			Data::meta_Max.type() = "String";
			Data::meta_Max.min() = 1;
			Data::meta_Max.max() = 1;
			Data::meta_Max.nonpersistent() = false;
			Data::meta_Max.registry() = false;
			Data::meta_Max.ordered() = false;
			Data::meta_Max.visibility() = "public";
			Data::meta_Max.defvalue() = vector<string>();
			Data::meta_ArraySize.name() = "ArraySize";
			Data::meta_ArraySize.type() = "String";
			Data::meta_ArraySize.min() = 1;
			Data::meta_ArraySize.max() = 1;
			Data::meta_ArraySize.nonpersistent() = false;
			Data::meta_ArraySize.registry() = false;
			Data::meta_ArraySize.ordered() = false;
			Data::meta_ArraySize.visibility() = "public";
			Data::meta_ArraySize.defvalue() = vector<string>();
			Data::meta_ArrayFirstIndex.name() = "ArrayFirstIndex";
			Data::meta_ArrayFirstIndex.type() = "String";
			Data::meta_ArrayFirstIndex.min() = 1;
			Data::meta_ArrayFirstIndex.max() = 1;
			Data::meta_ArrayFirstIndex.nonpersistent() = false;
			Data::meta_ArrayFirstIndex.registry() = false;
			Data::meta_ArrayFirstIndex.ordered() = false;
			Data::meta_ArrayFirstIndex.visibility() = "public";
			Data::meta_ArrayFirstIndex.defvalue() = vector<string>();
			vector<string> Data_Scope_dva;
			Data_Scope_dva.push_back("LOCAL_DATA");
			Data::meta_Scope.name() = "Scope";
			Data::meta_Scope.type() = "String";
			Data::meta_Scope.min() = 1;
			Data::meta_Scope.max() = 1;
			Data::meta_Scope.nonpersistent() = false;
			Data::meta_Scope.registry() = false;
			Data::meta_Scope.ordered() = false;
			Data::meta_Scope.visibility() = "public";
			Data::meta_Scope.defvalue() = Data_Scope_dva;
			Event::meta_Name.name() = "Name";
			Event::meta_Name.type() = "String";
			Event::meta_Name.min() = 1;
			Event::meta_Name.max() = 1;
			Event::meta_Name.nonpersistent() = false;
			Event::meta_Name.registry() = false;
			Event::meta_Name.ordered() = false;
			Event::meta_Name.visibility() = "public";
			Event::meta_Name.defvalue() = vector<string>();
			Event::meta_Description.name() = "Description";
			Event::meta_Description.type() = "String";
			Event::meta_Description.min() = 1;
			Event::meta_Description.max() = 1;
			Event::meta_Description.nonpersistent() = false;
			Event::meta_Description.registry() = false;
			Event::meta_Description.ordered() = false;
			Event::meta_Description.visibility() = "public";
			Event::meta_Description.defvalue() = vector<string>();
			vector<string> Event_Scope_dva;
			Event_Scope_dva.push_back("LOCAL_EVENT");
			Event::meta_Scope.name() = "Scope";
			Event::meta_Scope.type() = "String";
			Event::meta_Scope.min() = 1;
			Event::meta_Scope.max() = 1;
			Event::meta_Scope.nonpersistent() = false;
			Event::meta_Scope.registry() = false;
			Event::meta_Scope.ordered() = false;
			Event::meta_Scope.visibility() = "public";
			Event::meta_Scope.defvalue() = Event_Scope_dva;
			vector<string> Event_Trigger_dva;
			Event_Trigger_dva.push_back("EITHER_EDGE_EVENT");
			Event::meta_Trigger.name() = "Trigger";
			Event::meta_Trigger.type() = "String";
			Event::meta_Trigger.min() = 1;
			Event::meta_Trigger.max() = 1;
			Event::meta_Trigger.nonpersistent() = false;
			Event::meta_Trigger.registry() = false;
			Event::meta_Trigger.ordered() = false;
			Event::meta_Trigger.visibility() = "public";
			Event::meta_Trigger.defvalue() = Event_Trigger_dva;
			Event::meta_Port.name() = "Port";
			Event::meta_Port.type() = "Integer";
			Event::meta_Port.min() = 1;
			Event::meta_Port.max() = 1;
			Event::meta_Port.nonpersistent() = false;
			Event::meta_Port.registry() = false;
			Event::meta_Port.ordered() = false;
			Event::meta_Port.visibility() = "public";
			Event::meta_Port.defvalue() = vector<string>();
			vector<string> OS_SendOverheadTime_dva;
			OS_SendOverheadTime_dva.push_back("0s");
			OS::meta_SendOverheadTime.name() = "SendOverheadTime";
			OS::meta_SendOverheadTime.type() = "String";
			OS::meta_SendOverheadTime.min() = 1;
			OS::meta_SendOverheadTime.max() = 1;
			OS::meta_SendOverheadTime.nonpersistent() = false;
			OS::meta_SendOverheadTime.registry() = false;
			OS::meta_SendOverheadTime.ordered() = false;
			OS::meta_SendOverheadTime.visibility() = "public";
			OS::meta_SendOverheadTime.defvalue() = OS_SendOverheadTime_dva;
			vector<string> OS_ContextSwitchTime_dva;
			OS_ContextSwitchTime_dva.push_back("0s");
			OS::meta_ContextSwitchTime.name() = "ContextSwitchTime";
			OS::meta_ContextSwitchTime.type() = "String";
			OS::meta_ContextSwitchTime.min() = 1;
			OS::meta_ContextSwitchTime.max() = 1;
			OS::meta_ContextSwitchTime.nonpersistent() = false;
			OS::meta_ContextSwitchTime.registry() = false;
			OS::meta_ContextSwitchTime.ordered() = false;
			OS::meta_ContextSwitchTime.visibility() = "public";
			OS::meta_ContextSwitchTime.defvalue() = OS_ContextSwitchTime_dva;
			vector<string> OS_RecvOverheadTime_dva;
			OS_RecvOverheadTime_dva.push_back("0s");
			OS::meta_RecvOverheadTime.name() = "RecvOverheadTime";
			OS::meta_RecvOverheadTime.type() = "String";
			OS::meta_RecvOverheadTime.min() = 1;
			OS::meta_RecvOverheadTime.max() = 1;
			OS::meta_RecvOverheadTime.nonpersistent() = false;
			OS::meta_RecvOverheadTime.registry() = false;
			OS::meta_RecvOverheadTime.ordered() = false;
			OS::meta_RecvOverheadTime.visibility() = "public";
			OS::meta_RecvOverheadTime.defvalue() = OS_RecvOverheadTime_dva;
			vector<string> OS_TickResolution_dva;
			OS_TickResolution_dva.push_back("1ms");
			OS::meta_TickResolution.name() = "TickResolution";
			OS::meta_TickResolution.type() = "String";
			OS::meta_TickResolution.min() = 1;
			OS::meta_TickResolution.max() = 1;
			OS::meta_TickResolution.nonpersistent() = false;
			OS::meta_TickResolution.registry() = false;
			OS::meta_TickResolution.ordered() = false;
			OS::meta_TickResolution.visibility() = "public";
			OS::meta_TickResolution.defvalue() = OS_TickResolution_dva;
			PlatformLibrary::meta_name.name() = "name";
			PlatformLibrary::meta_name.type() = "String";
			PlatformLibrary::meta_name.min() = 0;
			PlatformLibrary::meta_name.max() = 1;
			PlatformLibrary::meta_name.nonpersistent() = false;
			PlatformLibrary::meta_name.registry() = false;
			PlatformLibrary::meta_name.ordered() = false;
			PlatformLibrary::meta_name.visibility() = "public";
			PlatformLibrary::meta_name.defvalue() = vector<string>();
			HWElement::meta_MetaData.name() = "MetaData";
			HWElement::meta_MetaData.type() = "String";
			HWElement::meta_MetaData.min() = 1;
			HWElement::meta_MetaData.max() = 1;
			HWElement::meta_MetaData.nonpersistent() = false;
			HWElement::meta_MetaData.registry() = false;
			HWElement::meta_MetaData.ordered() = false;
			HWElement::meta_MetaData.visibility() = "public";
			HWElement::meta_MetaData.defvalue() = vector<string>();
			vector<string> Bus_OverheadTime_dva;
			Bus_OverheadTime_dva.push_back("0s");
			Bus::meta_OverheadTime.name() = "OverheadTime";
			Bus::meta_OverheadTime.type() = "String";
			Bus::meta_OverheadTime.min() = 1;
			Bus::meta_OverheadTime.max() = 1;
			Bus::meta_OverheadTime.nonpersistent() = false;
			Bus::meta_OverheadTime.registry() = false;
			Bus::meta_OverheadTime.ordered() = false;
			Bus::meta_OverheadTime.visibility() = "public";
			Bus::meta_OverheadTime.defvalue() = Bus_OverheadTime_dva;
			vector<string> Bus_DataRate_dva;
			Bus_DataRate_dva.push_back("1b");
			Bus::meta_DataRate.name() = "DataRate";
			Bus::meta_DataRate.type() = "String";
			Bus::meta_DataRate.min() = 1;
			Bus::meta_DataRate.max() = 1;
			Bus::meta_DataRate.nonpersistent() = false;
			Bus::meta_DataRate.registry() = false;
			Bus::meta_DataRate.ordered() = false;
			Bus::meta_DataRate.visibility() = "public";
			Bus::meta_DataRate.defvalue() = Bus_DataRate_dva;
			vector<string> Bus_MinFrameSize_dva;
			Bus_MinFrameSize_dva.push_back("512B");
			Bus::meta_MinFrameSize.name() = "MinFrameSize";
			Bus::meta_MinFrameSize.type() = "String";
			Bus::meta_MinFrameSize.min() = 1;
			Bus::meta_MinFrameSize.max() = 1;
			Bus::meta_MinFrameSize.nonpersistent() = false;
			Bus::meta_MinFrameSize.registry() = false;
			Bus::meta_MinFrameSize.ordered() = false;
			Bus::meta_MinFrameSize.visibility() = "public";
			Bus::meta_MinFrameSize.defvalue() = Bus_MinFrameSize_dva;
			vector<string> Bus_SwitchMemorySize_dva;
			Bus_SwitchMemorySize_dva.push_back("80MB");
			Bus::meta_SwitchMemorySize.name() = "SwitchMemorySize";
			Bus::meta_SwitchMemorySize.type() = "String";
			Bus::meta_SwitchMemorySize.min() = 1;
			Bus::meta_SwitchMemorySize.max() = 1;
			Bus::meta_SwitchMemorySize.nonpersistent() = false;
			Bus::meta_SwitchMemorySize.registry() = false;
			Bus::meta_SwitchMemorySize.ordered() = false;
			Bus::meta_SwitchMemorySize.visibility() = "public";
			Bus::meta_SwitchMemorySize.defvalue() = Bus_SwitchMemorySize_dva;
			Node::meta_ROM.name() = "ROM";
			Node::meta_ROM.type() = "Integer";
			Node::meta_ROM.min() = 1;
			Node::meta_ROM.max() = 1;
			Node::meta_ROM.nonpersistent() = false;
			Node::meta_ROM.registry() = false;
			Node::meta_ROM.ordered() = false;
			Node::meta_ROM.visibility() = "public";
			Node::meta_ROM.defvalue() = vector<string>();
			Node::meta_Simulator.name() = "Simulator";
			Node::meta_Simulator.type() = "String";
			Node::meta_Simulator.min() = 1;
			Node::meta_Simulator.max() = 1;
			Node::meta_Simulator.nonpersistent() = false;
			Node::meta_Simulator.registry() = false;
			Node::meta_Simulator.ordered() = false;
			Node::meta_Simulator.visibility() = "public";
			Node::meta_Simulator.defvalue() = vector<string>();
			Node::meta_RAM.name() = "RAM";
			Node::meta_RAM.type() = "Integer";
			Node::meta_RAM.min() = 1;
			Node::meta_RAM.max() = 1;
			Node::meta_RAM.nonpersistent() = false;
			Node::meta_RAM.registry() = false;
			Node::meta_RAM.ordered() = false;
			Node::meta_RAM.visibility() = "public";
			Node::meta_RAM.defvalue() = vector<string>();
			Node::meta_Speed.name() = "Speed";
			Node::meta_Speed.type() = "Integer";
			Node::meta_Speed.min() = 1;
			Node::meta_Speed.max() = 1;
			Node::meta_Speed.nonpersistent() = false;
			Node::meta_Speed.registry() = false;
			Node::meta_Speed.ordered() = false;
			Node::meta_Speed.visibility() = "public";
			Node::meta_Speed.defvalue() = vector<string>();
			Node::meta_CPU.name() = "CPU";
			Node::meta_CPU.type() = "String";
			Node::meta_CPU.min() = 1;
			Node::meta_CPU.max() = 1;
			Node::meta_CPU.nonpersistent() = false;
			Node::meta_CPU.registry() = false;
			Node::meta_CPU.ordered() = false;
			Node::meta_CPU.visibility() = "public";
			Node::meta_CPU.defvalue() = vector<string>();
			vector<string> Channel_InterruptNum_dva;
			Channel_InterruptNum_dva.push_back("-1");
			Channel::meta_InterruptNum.name() = "InterruptNum";
			Channel::meta_InterruptNum.type() = "String";
			Channel::meta_InterruptNum.min() = 1;
			Channel::meta_InterruptNum.max() = 1;
			Channel::meta_InterruptNum.nonpersistent() = false;
			Channel::meta_InterruptNum.registry() = false;
			Channel::meta_InterruptNum.ordered() = false;
			Channel::meta_InterruptNum.visibility() = "public";
			Channel::meta_InterruptNum.defvalue() = Channel_InterruptNum_dva;
			vector<string> Component_WCET_dva;
			Component_WCET_dva.push_back("Worst Case Exec Time (secs)");
			Component::meta_WCET.name() = "WCET";
			Component::meta_WCET.type() = "String";
			Component::meta_WCET.min() = 1;
			Component::meta_WCET.max() = 1;
			Component::meta_WCET.nonpersistent() = false;
			Component::meta_WCET.registry() = false;
			Component::meta_WCET.ordered() = false;
			Component::meta_WCET.visibility() = "public";
			Component::meta_WCET.defvalue() = Component_WCET_dva;
			vector<string> Message_MsgSize_dva;
			Message_MsgSize_dva.push_back("1B");
			Message::meta_MsgSize.name() = "MsgSize";
			Message::meta_MsgSize.type() = "String";
			Message::meta_MsgSize.min() = 1;
			Message::meta_MsgSize.max() = 1;
			Message::meta_MsgSize.nonpersistent() = false;
			Message::meta_MsgSize.registry() = false;
			Message::meta_MsgSize.ordered() = false;
			Message::meta_MsgSize.visibility() = "public";
			Message::meta_MsgSize.defvalue() = Message_MsgSize_dva;
			Message::meta_MsgMetaData.name() = "MsgMetaData";
			Message::meta_MsgMetaData.type() = "String";
			Message::meta_MsgMetaData.min() = 1;
			Message::meta_MsgMetaData.max() = 1;
			Message::meta_MsgMetaData.nonpersistent() = false;
			Message::meta_MsgMetaData.registry() = false;
			Message::meta_MsgMetaData.ordered() = false;
			Message::meta_MsgMetaData.visibility() = "public";
			Message::meta_MsgMetaData.defvalue() = vector<string>();
			DeploymentLibrary::meta_name.name() = "name";
			DeploymentLibrary::meta_name.type() = "String";
			DeploymentLibrary::meta_name.min() = 0;
			DeploymentLibrary::meta_name.max() = 1;
			DeploymentLibrary::meta_name.nonpersistent() = false;
			DeploymentLibrary::meta_name.registry() = false;
			DeploymentLibrary::meta_name.ordered() = false;
			DeploymentLibrary::meta_name.visibility() = "public";
			DeploymentLibrary::meta_name.defvalue() = vector<string>();
			RootFolder::meta_name.name() = "name";
			RootFolder::meta_name.type() = "String";
			RootFolder::meta_name.min() = 0;
			RootFolder::meta_name.max() = 1;
			RootFolder::meta_name.nonpersistent() = false;
			RootFolder::meta_name.registry() = false;
			RootFolder::meta_name.ordered() = false;
			RootFolder::meta_name.visibility() = "public";
			RootFolder::meta_name.defvalue() = vector<string>();
			MgaObject::meta_position.name() = "position";
			MgaObject::meta_position.type() = "String";
			MgaObject::meta_position.min() = 0;
			MgaObject::meta_position.max() = 1;
			MgaObject::meta_position.nonpersistent() = false;
			MgaObject::meta_position.registry() = false;
			MgaObject::meta_position.ordered() = false;
			MgaObject::meta_position.visibility() = "public";
			MgaObject::meta_position.defvalue() = vector<string>();
			MgaObject::meta_name.name() = "name";
			MgaObject::meta_name.type() = "String";
			MgaObject::meta_name.min() = 0;
			MgaObject::meta_name.max() = 1;
			MgaObject::meta_name.nonpersistent() = false;
			MgaObject::meta_name.registry() = false;
			MgaObject::meta_name.ordered() = false;
			MgaObject::meta_name.visibility() = "public";
			MgaObject::meta_name.defvalue() = vector<string>();
			
		}
		void CreatesNamespaces()
		{
		}
		void InitNamespaces()
		{
		}
		void InitAssociation0()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::Subsystem::meta_referedbySubsystemRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Subsystem::meta_referedbySubsystemRef.name() = "referedbySubsystemRef";
			::ESMoL::Subsystem::meta_referedbySubsystemRef.min() = 0;
			::ESMoL::Subsystem::meta_referedbySubsystemRef.max() = -1;
			::ESMoL::Subsystem::meta_referedbySubsystemRef.isNavigable() = true;
			::ESMoL::Subsystem::meta_referedbySubsystemRef.isPrimary() = false;
			::ESMoL::Subsystem::meta_referedbySubsystemRef.target() = ::ESMoL::SubsystemRef::meta;
			::ESMoL::SubsystemRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::SubsystemRef::meta_ref.name() = "ref";
			::ESMoL::SubsystemRef::meta_ref.min() = 0;
			::ESMoL::SubsystemRef::meta_ref.max() = 1;
			::ESMoL::SubsystemRef::meta_ref.isNavigable() = true;
			::ESMoL::SubsystemRef::meta_ref.isPrimary() = false;
			::ESMoL::SubsystemRef::meta_ref.target() = ::ESMoL::Subsystem::meta;
		};
		void InitAssociation1()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "IOPortAssignment";
			ass.assocClass() = ::ESMoL::IOPortAssignment::meta;
			::ESMoL::IOPortExp::meta_srcIOPortAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.name() = "srcIOPortAssignment";
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.min() = 0;
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.max() = -1;
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.isNavigable() = true;
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.isPrimary() = false;
			::ESMoL::IOPortExp::meta_srcIOPortAssignment.target() = ::ESMoL::IOPortInfoBase::meta;
			::ESMoL::IOPortAssignment::meta_srcIOPortAssignment_end_ = ::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment_rev = ::ESMoL::IOPortExp::meta_srcIOPortAssignment;
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.name() = "dstIOPortAssignment";
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.min() = 0;
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.max() = -1;
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.isNavigable() = true;
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.isPrimary() = false;
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment.target() = ::ESMoL::IOPortExp::meta;
			::ESMoL::IOPortAssignment::meta_dstIOPortAssignment_end_ = ::ESMoL::IOPortExp::meta_srcIOPortAssignment_rev = ::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment;
		};
		void InitAssociation2()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.name() = "referedbyIOPortInfoRef";
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.min() = 0;
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.max() = -1;
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.isNavigable() = true;
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.isPrimary() = false;
			::ESMoL::IOPortInfo::meta_referedbyIOPortInfoRef.target() = ::ESMoL::IOPortInfoRef::meta;
			::ESMoL::IOPortInfoRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::IOPortInfoRef::meta_ref.name() = "ref";
			::ESMoL::IOPortInfoRef::meta_ref.min() = 0;
			::ESMoL::IOPortInfoRef::meta_ref.max() = 1;
			::ESMoL::IOPortInfoRef::meta_ref.isNavigable() = true;
			::ESMoL::IOPortInfoRef::meta_ref.isPrimary() = false;
			::ESMoL::IOPortInfoRef::meta_ref.target() = ::ESMoL::IOPortInfo::meta;
		};
		void InitAssociation3()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::ComponentBase::meta_referedbySystemRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::ComponentBase::meta_referedbySystemRef.name() = "referedbySystemRef";
			::ESMoL::ComponentBase::meta_referedbySystemRef.min() = 0;
			::ESMoL::ComponentBase::meta_referedbySystemRef.max() = -1;
			::ESMoL::ComponentBase::meta_referedbySystemRef.isNavigable() = true;
			::ESMoL::ComponentBase::meta_referedbySystemRef.isPrimary() = false;
			::ESMoL::ComponentBase::meta_referedbySystemRef.target() = ::ESMoL::Component::meta;
			::ESMoL::Component::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Component::meta_ref.name() = "ref";
			::ESMoL::Component::meta_ref.min() = 0;
			::ESMoL::Component::meta_ref.max() = 1;
			::ESMoL::Component::meta_ref.isNavigable() = true;
			::ESMoL::Component::meta_ref.isPrimary() = false;
			::ESMoL::Component::meta_ref.target() = ::ESMoL::ComponentBase::meta;
		};
		void InitAssociation4()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "OutCommMapping";
			ass.assocClass() = ::ESMoL::OutCommMapping::meta;
			::ESMoL::Output::meta_dstOutCommMapping = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Output::meta_dstOutCommMapping.name() = "dstOutCommMapping";
			::ESMoL::Output::meta_dstOutCommMapping.min() = 0;
			::ESMoL::Output::meta_dstOutCommMapping.max() = -1;
			::ESMoL::Output::meta_dstOutCommMapping.isNavigable() = true;
			::ESMoL::Output::meta_dstOutCommMapping.isPrimary() = false;
			::ESMoL::Output::meta_dstOutCommMapping.target() = ::ESMoL::CommDst::meta;
			::ESMoL::OutCommMapping::meta_dstOutCommMapping_end_ = ::ESMoL::CommDst::meta_srcOutCommMapping_rev = ::ESMoL::Output::meta_dstOutCommMapping;
			::ESMoL::CommDst::meta_srcOutCommMapping = ::Uml::AssociationRole::Create(ass);
			::ESMoL::CommDst::meta_srcOutCommMapping.name() = "srcOutCommMapping";
			::ESMoL::CommDst::meta_srcOutCommMapping.min() = 0;
			::ESMoL::CommDst::meta_srcOutCommMapping.max() = -1;
			::ESMoL::CommDst::meta_srcOutCommMapping.isNavigable() = true;
			::ESMoL::CommDst::meta_srcOutCommMapping.isPrimary() = false;
			::ESMoL::CommDst::meta_srcOutCommMapping.target() = ::ESMoL::Output::meta;
			::ESMoL::OutCommMapping::meta_srcOutCommMapping_end_ = ::ESMoL::Output::meta_dstOutCommMapping_rev = ::ESMoL::CommDst::meta_srcOutCommMapping;
		};
		void InitAssociation5()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "Connector";
			ass.assocClass() = ::ESMoL::Connector::meta;
			::ESMoL::Output::meta_dstConnector = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Output::meta_dstConnector.name() = "dstConnector";
			::ESMoL::Output::meta_dstConnector.min() = 0;
			::ESMoL::Output::meta_dstConnector.max() = -1;
			::ESMoL::Output::meta_dstConnector.isNavigable() = true;
			::ESMoL::Output::meta_dstConnector.isPrimary() = false;
			::ESMoL::Output::meta_dstConnector.target() = ::ESMoL::Input::meta;
			::ESMoL::Connector::meta_dstConnector_end_ = ::ESMoL::Input::meta_srcConnector_rev = ::ESMoL::Output::meta_dstConnector;
			::ESMoL::Input::meta_srcConnector = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Input::meta_srcConnector.name() = "srcConnector";
			::ESMoL::Input::meta_srcConnector.min() = 0;
			::ESMoL::Input::meta_srcConnector.max() = -1;
			::ESMoL::Input::meta_srcConnector.isNavigable() = true;
			::ESMoL::Input::meta_srcConnector.isPrimary() = false;
			::ESMoL::Input::meta_srcConnector.target() = ::ESMoL::Output::meta;
			::ESMoL::Connector::meta_srcConnector_end_ = ::ESMoL::Output::meta_dstConnector_rev = ::ESMoL::Input::meta_srcConnector;
		};
		void InitAssociation6()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "InCommMapping";
			ass.assocClass() = ::ESMoL::InCommMapping::meta;
			::ESMoL::Input::meta_srcInCommMapping = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Input::meta_srcInCommMapping.name() = "srcInCommMapping";
			::ESMoL::Input::meta_srcInCommMapping.min() = 0;
			::ESMoL::Input::meta_srcInCommMapping.max() = -1;
			::ESMoL::Input::meta_srcInCommMapping.isNavigable() = true;
			::ESMoL::Input::meta_srcInCommMapping.isPrimary() = false;
			::ESMoL::Input::meta_srcInCommMapping.target() = ::ESMoL::CommDst::meta;
			::ESMoL::InCommMapping::meta_srcInCommMapping_end_ = ::ESMoL::CommDst::meta_dstInCommMapping_rev = ::ESMoL::Input::meta_srcInCommMapping;
			::ESMoL::CommDst::meta_dstInCommMapping = ::Uml::AssociationRole::Create(ass);
			::ESMoL::CommDst::meta_dstInCommMapping.name() = "dstInCommMapping";
			::ESMoL::CommDst::meta_dstInCommMapping.min() = 0;
			::ESMoL::CommDst::meta_dstInCommMapping.max() = -1;
			::ESMoL::CommDst::meta_dstInCommMapping.isNavigable() = true;
			::ESMoL::CommDst::meta_dstInCommMapping.isPrimary() = false;
			::ESMoL::CommDst::meta_dstInCommMapping.target() = ::ESMoL::Input::meta;
			::ESMoL::InCommMapping::meta_dstInCommMapping_end_ = ::ESMoL::Input::meta_srcInCommMapping_rev = ::ESMoL::CommDst::meta_dstInCommMapping;
		};
		void InitAssociation7()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::TypeBase::meta_referedbyTypeStructRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.name() = "referedbyTypeStructRef";
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.min() = 0;
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.max() = -1;
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.isNavigable() = true;
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.isPrimary() = false;
			::ESMoL::TypeBase::meta_referedbyTypeStructRef.target() = ::ESMoL::TypeBaseRef::meta;
			::ESMoL::TypeBaseRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TypeBaseRef::meta_ref.name() = "ref";
			::ESMoL::TypeBaseRef::meta_ref.min() = 0;
			::ESMoL::TypeBaseRef::meta_ref.max() = 1;
			::ESMoL::TypeBaseRef::meta_ref.isNavigable() = true;
			::ESMoL::TypeBaseRef::meta_ref.isPrimary() = false;
			::ESMoL::TypeBaseRef::meta_ref.target() = ::ESMoL::TypeBase::meta;
		};
		void InitAssociation8()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "TimingConstraint";
			ass.assocClass() = ::ESMoL::TimingConstraint::meta;
			::ESMoL::TaskRef::meta_srcTimingConstraint = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TaskRef::meta_srcTimingConstraint.name() = "srcTimingConstraint";
			::ESMoL::TaskRef::meta_srcTimingConstraint.min() = 0;
			::ESMoL::TaskRef::meta_srcTimingConstraint.max() = -1;
			::ESMoL::TaskRef::meta_srcTimingConstraint.isNavigable() = true;
			::ESMoL::TaskRef::meta_srcTimingConstraint.isPrimary() = false;
			::ESMoL::TaskRef::meta_srcTimingConstraint.target() = ::ESMoL::TaskRef::meta;
			::ESMoL::TimingConstraint::meta_srcTimingConstraint_end_ = ::ESMoL::TaskRef::meta_dstTimingConstraint_rev = ::ESMoL::TaskRef::meta_srcTimingConstraint;
			::ESMoL::TaskRef::meta_dstTimingConstraint = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TaskRef::meta_dstTimingConstraint.name() = "dstTimingConstraint";
			::ESMoL::TaskRef::meta_dstTimingConstraint.min() = 0;
			::ESMoL::TaskRef::meta_dstTimingConstraint.max() = -1;
			::ESMoL::TaskRef::meta_dstTimingConstraint.isNavigable() = true;
			::ESMoL::TaskRef::meta_dstTimingConstraint.isPrimary() = false;
			::ESMoL::TaskRef::meta_dstTimingConstraint.target() = ::ESMoL::TaskRef::meta;
			::ESMoL::TimingConstraint::meta_dstTimingConstraint_end_ = ::ESMoL::TaskRef::meta_srcTimingConstraint_rev = ::ESMoL::TaskRef::meta_dstTimingConstraint;
		};
		void InitAssociation9()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::TaskRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TaskRef::meta_ref.name() = "ref";
			::ESMoL::TaskRef::meta_ref.min() = 0;
			::ESMoL::TaskRef::meta_ref.max() = 1;
			::ESMoL::TaskRef::meta_ref.isNavigable() = true;
			::ESMoL::TaskRef::meta_ref.isPrimary() = false;
			::ESMoL::TaskRef::meta_ref.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_referedbyTaskRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Task::meta_referedbyTaskRef.name() = "referedbyTaskRef";
			::ESMoL::Task::meta_referedbyTaskRef.min() = 0;
			::ESMoL::Task::meta_referedbyTaskRef.max() = -1;
			::ESMoL::Task::meta_referedbyTaskRef.isNavigable() = true;
			::ESMoL::Task::meta_referedbyTaskRef.isPrimary() = false;
			::ESMoL::Task::meta_referedbyTaskRef.target() = ::ESMoL::TaskRef::meta;
		};
		void InitAssociation10()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "Line";
			ass.assocClass() = ::ESMoL::Line::meta;
			::ESMoL::Port::meta_srcLine = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Port::meta_srcLine.name() = "srcLine";
			::ESMoL::Port::meta_srcLine.min() = 0;
			::ESMoL::Port::meta_srcLine.max() = -1;
			::ESMoL::Port::meta_srcLine.isNavigable() = true;
			::ESMoL::Port::meta_srcLine.isPrimary() = false;
			::ESMoL::Port::meta_srcLine.target() = ::ESMoL::Port::meta;
			::ESMoL::Line::meta_srcLine_end_ = ::ESMoL::Port::meta_dstLine_rev = ::ESMoL::Port::meta_srcLine;
			::ESMoL::Port::meta_dstLine = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Port::meta_dstLine.name() = "dstLine";
			::ESMoL::Port::meta_dstLine.min() = 0;
			::ESMoL::Port::meta_dstLine.max() = -1;
			::ESMoL::Port::meta_dstLine.isNavigable() = true;
			::ESMoL::Port::meta_dstLine.isPrimary() = false;
			::ESMoL::Port::meta_dstLine.target() = ::ESMoL::Port::meta;
			::ESMoL::Line::meta_dstLine_end_ = ::ESMoL::Port::meta_srcLine_rev = ::ESMoL::Port::meta_dstLine;
		};
		void InitAssociation11()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::TransConnector::meta_referedbyConnectorRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TransConnector::meta_referedbyConnectorRef.name() = "referedbyConnectorRef";
			::ESMoL::TransConnector::meta_referedbyConnectorRef.min() = 0;
			::ESMoL::TransConnector::meta_referedbyConnectorRef.max() = -1;
			::ESMoL::TransConnector::meta_referedbyConnectorRef.isNavigable() = true;
			::ESMoL::TransConnector::meta_referedbyConnectorRef.isPrimary() = false;
			::ESMoL::TransConnector::meta_referedbyConnectorRef.target() = ::ESMoL::ConnectorRef::meta;
			::ESMoL::ConnectorRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::ConnectorRef::meta_ref.name() = "ref";
			::ESMoL::ConnectorRef::meta_ref.min() = 0;
			::ESMoL::ConnectorRef::meta_ref.max() = 1;
			::ESMoL::ConnectorRef::meta_ref.isNavigable() = true;
			::ESMoL::ConnectorRef::meta_ref.isPrimary() = false;
			::ESMoL::ConnectorRef::meta_ref.target() = ::ESMoL::TransConnector::meta;
		};
		void InitAssociation12()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "Transition";
			ass.assocClass() = ::ESMoL::Transition::meta;
			::ESMoL::TransConnector::meta_dstTransition = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TransConnector::meta_dstTransition.name() = "dstTransition";
			::ESMoL::TransConnector::meta_dstTransition.min() = 0;
			::ESMoL::TransConnector::meta_dstTransition.max() = -1;
			::ESMoL::TransConnector::meta_dstTransition.isNavigable() = true;
			::ESMoL::TransConnector::meta_dstTransition.isPrimary() = false;
			::ESMoL::TransConnector::meta_dstTransition.target() = ::ESMoL::TransConnector::meta;
			::ESMoL::Transition::meta_dstTransition_end_ = ::ESMoL::TransConnector::meta_srcTransition_rev = ::ESMoL::TransConnector::meta_dstTransition;
			::ESMoL::TransConnector::meta_srcTransition = ::Uml::AssociationRole::Create(ass);
			::ESMoL::TransConnector::meta_srcTransition.name() = "srcTransition";
			::ESMoL::TransConnector::meta_srcTransition.min() = 0;
			::ESMoL::TransConnector::meta_srcTransition.max() = -1;
			::ESMoL::TransConnector::meta_srcTransition.isNavigable() = true;
			::ESMoL::TransConnector::meta_srcTransition.isPrimary() = false;
			::ESMoL::TransConnector::meta_srcTransition.target() = ::ESMoL::TransConnector::meta;
			::ESMoL::Transition::meta_srcTransition_end_ = ::ESMoL::TransConnector::meta_dstTransition_rev = ::ESMoL::TransConnector::meta_srcTransition;
		};
		void InitAssociation13()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "Wire";
			ass.assocClass() = ::ESMoL::Wire::meta;
			::ESMoL::Connectable::meta_srcWire = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Connectable::meta_srcWire.name() = "srcWire";
			::ESMoL::Connectable::meta_srcWire.min() = 0;
			::ESMoL::Connectable::meta_srcWire.max() = -1;
			::ESMoL::Connectable::meta_srcWire.isNavigable() = true;
			::ESMoL::Connectable::meta_srcWire.isPrimary() = false;
			::ESMoL::Connectable::meta_srcWire.target() = ::ESMoL::Connectable::meta;
			::ESMoL::Wire::meta_srcWire_end_ = ::ESMoL::Connectable::meta_dstWire_rev = ::ESMoL::Connectable::meta_srcWire;
			::ESMoL::Connectable::meta_dstWire = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Connectable::meta_dstWire.name() = "dstWire";
			::ESMoL::Connectable::meta_dstWire.min() = 0;
			::ESMoL::Connectable::meta_dstWire.max() = -1;
			::ESMoL::Connectable::meta_dstWire.isNavigable() = true;
			::ESMoL::Connectable::meta_dstWire.isPrimary() = false;
			::ESMoL::Connectable::meta_dstWire.target() = ::ESMoL::Connectable::meta;
			::ESMoL::Wire::meta_dstWire_end_ = ::ESMoL::Connectable::meta_srcWire_rev = ::ESMoL::Connectable::meta_dstWire;
		};
		void InitAssociation14()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::Node::meta_referedbyNodeRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Node::meta_referedbyNodeRef.name() = "referedbyNodeRef";
			::ESMoL::Node::meta_referedbyNodeRef.min() = 0;
			::ESMoL::Node::meta_referedbyNodeRef.max() = -1;
			::ESMoL::Node::meta_referedbyNodeRef.isNavigable() = true;
			::ESMoL::Node::meta_referedbyNodeRef.isPrimary() = false;
			::ESMoL::Node::meta_referedbyNodeRef.target() = ::ESMoL::NodeRef::meta;
			::ESMoL::NodeRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::NodeRef::meta_ref.name() = "ref";
			::ESMoL::NodeRef::meta_ref.min() = 0;
			::ESMoL::NodeRef::meta_ref.max() = 1;
			::ESMoL::NodeRef::meta_ref.isNavigable() = true;
			::ESMoL::NodeRef::meta_ref.isPrimary() = false;
			::ESMoL::NodeRef::meta_ref.target() = ::ESMoL::Node::meta;
		};
		void InitAssociation15()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::Channel::meta_referedbyChannelRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Channel::meta_referedbyChannelRef.name() = "referedbyChannelRef";
			::ESMoL::Channel::meta_referedbyChannelRef.min() = 0;
			::ESMoL::Channel::meta_referedbyChannelRef.max() = -1;
			::ESMoL::Channel::meta_referedbyChannelRef.isNavigable() = true;
			::ESMoL::Channel::meta_referedbyChannelRef.isPrimary() = false;
			::ESMoL::Channel::meta_referedbyChannelRef.target() = ::ESMoL::ChannelRef::meta;
			::ESMoL::ChannelRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::ChannelRef::meta_ref.name() = "ref";
			::ESMoL::ChannelRef::meta_ref.min() = 0;
			::ESMoL::ChannelRef::meta_ref.max() = 1;
			::ESMoL::ChannelRef::meta_ref.isNavigable() = true;
			::ESMoL::ChannelRef::meta_ref.isPrimary() = false;
			::ESMoL::ChannelRef::meta_ref.target() = ::ESMoL::Channel::meta;
		};
		void InitAssociation16()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "MsgAssignment";
			ass.assocClass() = ::ESMoL::MsgAssignment::meta;
			::ESMoL::CommDst::meta_dstMsgAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::CommDst::meta_dstMsgAssignment.name() = "dstMsgAssignment";
			::ESMoL::CommDst::meta_dstMsgAssignment.min() = 0;
			::ESMoL::CommDst::meta_dstMsgAssignment.max() = -1;
			::ESMoL::CommDst::meta_dstMsgAssignment.isNavigable() = true;
			::ESMoL::CommDst::meta_dstMsgAssignment.isPrimary() = false;
			::ESMoL::CommDst::meta_dstMsgAssignment.target() = ::ESMoL::ChannelRef::meta;
			::ESMoL::MsgAssignment::meta_dstMsgAssignment_end_ = ::ESMoL::ChannelRef::meta_srcMsgAssignment_rev = ::ESMoL::CommDst::meta_dstMsgAssignment;
			::ESMoL::ChannelRef::meta_srcMsgAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::ChannelRef::meta_srcMsgAssignment.name() = "srcMsgAssignment";
			::ESMoL::ChannelRef::meta_srcMsgAssignment.min() = 0;
			::ESMoL::ChannelRef::meta_srcMsgAssignment.max() = -1;
			::ESMoL::ChannelRef::meta_srcMsgAssignment.isNavigable() = true;
			::ESMoL::ChannelRef::meta_srcMsgAssignment.isPrimary() = false;
			::ESMoL::ChannelRef::meta_srcMsgAssignment.target() = ::ESMoL::CommDst::meta;
			::ESMoL::MsgAssignment::meta_srcMsgAssignment_end_ = ::ESMoL::CommDst::meta_dstMsgAssignment_rev = ::ESMoL::ChannelRef::meta_srcMsgAssignment;
		};
		void InitAssociation17()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			::ESMoL::Message::meta_referedbyBusMessageRef = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Message::meta_referedbyBusMessageRef.name() = "referedbyBusMessageRef";
			::ESMoL::Message::meta_referedbyBusMessageRef.min() = 0;
			::ESMoL::Message::meta_referedbyBusMessageRef.max() = -1;
			::ESMoL::Message::meta_referedbyBusMessageRef.isNavigable() = true;
			::ESMoL::Message::meta_referedbyBusMessageRef.isPrimary() = false;
			::ESMoL::Message::meta_referedbyBusMessageRef.target() = ::ESMoL::MessageRef::meta;
			::ESMoL::MessageRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::ESMoL::MessageRef::meta_ref.name() = "ref";
			::ESMoL::MessageRef::meta_ref.min() = 0;
			::ESMoL::MessageRef::meta_ref.max() = 1;
			::ESMoL::MessageRef::meta_ref.isNavigable() = true;
			::ESMoL::MessageRef::meta_ref.isPrimary() = false;
			::ESMoL::MessageRef::meta_ref.target() = ::ESMoL::Message::meta;
		};
		void InitAssociation18()
		{
			::Uml::Association ass = ::Uml::Association::Create(umldiagram);
			ass.name() = "TaskAssignment";
			ass.assocClass() = ::ESMoL::TaskAssignment::meta;
			::ESMoL::Task::meta_dstTaskAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::Task::meta_dstTaskAssignment.name() = "dstTaskAssignment";
			::ESMoL::Task::meta_dstTaskAssignment.min() = 0;
			::ESMoL::Task::meta_dstTaskAssignment.max() = -1;
			::ESMoL::Task::meta_dstTaskAssignment.isNavigable() = true;
			::ESMoL::Task::meta_dstTaskAssignment.isPrimary() = false;
			::ESMoL::Task::meta_dstTaskAssignment.target() = ::ESMoL::NodeRef::meta;
			::ESMoL::TaskAssignment::meta_dstTaskAssignment_end_ = ::ESMoL::NodeRef::meta_srcTaskAssignment_rev = ::ESMoL::Task::meta_dstTaskAssignment;
			::ESMoL::NodeRef::meta_srcTaskAssignment = ::Uml::AssociationRole::Create(ass);
			::ESMoL::NodeRef::meta_srcTaskAssignment.name() = "srcTaskAssignment";
			::ESMoL::NodeRef::meta_srcTaskAssignment.min() = 0;
			::ESMoL::NodeRef::meta_srcTaskAssignment.max() = -1;
			::ESMoL::NodeRef::meta_srcTaskAssignment.isNavigable() = true;
			::ESMoL::NodeRef::meta_srcTaskAssignment.isPrimary() = false;
			::ESMoL::NodeRef::meta_srcTaskAssignment.target() = ::ESMoL::Task::meta;
			::ESMoL::TaskAssignment::meta_srcTaskAssignment_end_ = ::ESMoL::Task::meta_dstTaskAssignment_rev = ::ESMoL::NodeRef::meta_srcTaskAssignment;
		};
		void InitCrossNSAssociations()
		{
		}
		void InitComposition0()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::CInputPort::meta_CCode_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::CInputPort::meta_CCode_parent.name() = "CCode_parent";
			::ESMoL::CInputPort::meta_CCode_parent.isNavigable() = true;
			::ESMoL::CInputPort::meta_CCode_parent.target() = ::ESMoL::CCode::meta;
			::ESMoL::CCode::meta_CInputPort_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::CCode::meta_CInputPort_children.name() = "CInputPort";
			::ESMoL::CCode::meta_CInputPort_children.min() = 0;
			::ESMoL::CCode::meta_CInputPort_children.max() = -1;
			::ESMoL::CCode::meta_CInputPort_children.isNavigable() = true;
			::ESMoL::CCode::meta_CInputPort_children.target() = ::ESMoL::CInputPort::meta;
		}
		void InitComposition1()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::COutputPort::meta_CCode_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::COutputPort::meta_CCode_parent.name() = "CCode_parent";
			::ESMoL::COutputPort::meta_CCode_parent.isNavigable() = true;
			::ESMoL::COutputPort::meta_CCode_parent.target() = ::ESMoL::CCode::meta;
			::ESMoL::CCode::meta_COutputPort_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::CCode::meta_COutputPort_children.name() = "COutputPort";
			::ESMoL::CCode::meta_COutputPort_children.min() = 0;
			::ESMoL::CCode::meta_COutputPort_children.max() = -1;
			::ESMoL::CCode::meta_COutputPort_children.isNavigable() = true;
			::ESMoL::CCode::meta_COutputPort_children.target() = ::ESMoL::COutputPort::meta;
		}
		void InitComposition2()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::System::meta_ArchitectureLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::System::meta_ArchitectureLibrary_parent.name() = "ArchitectureLibrary_parent";
			::ESMoL::System::meta_ArchitectureLibrary_parent.isNavigable() = true;
			::ESMoL::System::meta_ArchitectureLibrary_parent.target() = ::ESMoL::ArchitectureLibrary::meta;
			::ESMoL::ArchitectureLibrary::meta_System_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::ArchitectureLibrary::meta_System_children.name() = "System";
			::ESMoL::ArchitectureLibrary::meta_System_children.min() = 0;
			::ESMoL::ArchitectureLibrary::meta_System_children.max() = -1;
			::ESMoL::ArchitectureLibrary::meta_System_children.isNavigable() = true;
			::ESMoL::ArchitectureLibrary::meta_System_children.target() = ::ESMoL::System::meta;
		}
		void InitComposition3()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::ComponentBase::meta_System_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::ComponentBase::meta_System_parent.name() = "System_parent";
			::ESMoL::ComponentBase::meta_System_parent.isNavigable() = true;
			::ESMoL::ComponentBase::meta_System_parent.target() = ::ESMoL::System::meta;
			::ESMoL::System::meta_ComponentBase_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::System::meta_ComponentBase_children.name() = "ComponentBase";
			::ESMoL::System::meta_ComponentBase_children.min() = 0;
			::ESMoL::System::meta_ComponentBase_children.max() = -1;
			::ESMoL::System::meta_ComponentBase_children.isNavigable() = true;
			::ESMoL::System::meta_ComponentBase_children.target() = ::ESMoL::ComponentBase::meta;
		}
		void InitComposition4()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Connector::meta_System_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Connector::meta_System_parent.name() = "System_parent";
			::ESMoL::Connector::meta_System_parent.isNavigable() = true;
			::ESMoL::Connector::meta_System_parent.target() = ::ESMoL::System::meta;
			::ESMoL::System::meta_Connector_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::System::meta_Connector_children.name() = "Connector";
			::ESMoL::System::meta_Connector_children.min() = 0;
			::ESMoL::System::meta_Connector_children.max() = -1;
			::ESMoL::System::meta_Connector_children.isNavigable() = true;
			::ESMoL::System::meta_Connector_children.target() = ::ESMoL::Connector::meta;
		}
		void InitComposition5()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TimingSheet::meta_DesignFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TimingSheet::meta_DesignFolder_parent.name() = "DesignFolder_parent";
			::ESMoL::TimingSheet::meta_DesignFolder_parent.isNavigable() = true;
			::ESMoL::TimingSheet::meta_DesignFolder_parent.target() = ::ESMoL::DesignFolder::meta;
			::ESMoL::DesignFolder::meta_TimingSheet_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DesignFolder::meta_TimingSheet_children.name() = "TimingSheet";
			::ESMoL::DesignFolder::meta_TimingSheet_children.min() = 0;
			::ESMoL::DesignFolder::meta_TimingSheet_children.max() = -1;
			::ESMoL::DesignFolder::meta_TimingSheet_children.isNavigable() = true;
			::ESMoL::DesignFolder::meta_TimingSheet_children.target() = ::ESMoL::TimingSheet::meta;
		}
		void InitComposition6()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::System::meta_DesignFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::System::meta_DesignFolder_parent.name() = "DesignFolder_parent";
			::ESMoL::System::meta_DesignFolder_parent.isNavigable() = true;
			::ESMoL::System::meta_DesignFolder_parent.target() = ::ESMoL::DesignFolder::meta;
			::ESMoL::DesignFolder::meta_System_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DesignFolder::meta_System_children.name() = "System";
			::ESMoL::DesignFolder::meta_System_children.min() = 0;
			::ESMoL::DesignFolder::meta_System_children.max() = -1;
			::ESMoL::DesignFolder::meta_System_children.isNavigable() = true;
			::ESMoL::DesignFolder::meta_System_children.target() = ::ESMoL::System::meta;
		}
		void InitComposition7()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Subsystem::meta_DesignFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Subsystem::meta_DesignFolder_parent.name() = "DesignFolder_parent";
			::ESMoL::Subsystem::meta_DesignFolder_parent.isNavigable() = true;
			::ESMoL::Subsystem::meta_DesignFolder_parent.target() = ::ESMoL::DesignFolder::meta;
			::ESMoL::DesignFolder::meta_Subsystem_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DesignFolder::meta_Subsystem_children.name() = "Subsystem";
			::ESMoL::DesignFolder::meta_Subsystem_children.min() = 0;
			::ESMoL::DesignFolder::meta_Subsystem_children.max() = -1;
			::ESMoL::DesignFolder::meta_Subsystem_children.isNavigable() = true;
			::ESMoL::DesignFolder::meta_Subsystem_children.target() = ::ESMoL::Subsystem::meta;
		}
		void InitComposition8()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::HardwareUnit::meta_DesignFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::HardwareUnit::meta_DesignFolder_parent.name() = "DesignFolder_parent";
			::ESMoL::HardwareUnit::meta_DesignFolder_parent.isNavigable() = true;
			::ESMoL::HardwareUnit::meta_DesignFolder_parent.target() = ::ESMoL::DesignFolder::meta;
			::ESMoL::DesignFolder::meta_HardwareUnit_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DesignFolder::meta_HardwareUnit_children.name() = "HardwareUnit";
			::ESMoL::DesignFolder::meta_HardwareUnit_children.min() = 0;
			::ESMoL::DesignFolder::meta_HardwareUnit_children.max() = -1;
			::ESMoL::DesignFolder::meta_HardwareUnit_children.isNavigable() = true;
			::ESMoL::DesignFolder::meta_HardwareUnit_children.target() = ::ESMoL::HardwareUnit::meta;
		}
		void InitComposition9()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Deployment::meta_DesignFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Deployment::meta_DesignFolder_parent.name() = "DesignFolder_parent";
			::ESMoL::Deployment::meta_DesignFolder_parent.isNavigable() = true;
			::ESMoL::Deployment::meta_DesignFolder_parent.target() = ::ESMoL::DesignFolder::meta;
			::ESMoL::DesignFolder::meta_Deployment_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DesignFolder::meta_Deployment_children.name() = "Deployment";
			::ESMoL::DesignFolder::meta_Deployment_children.min() = 0;
			::ESMoL::DesignFolder::meta_Deployment_children.max() = -1;
			::ESMoL::DesignFolder::meta_Deployment_children.isNavigable() = true;
			::ESMoL::DesignFolder::meta_Deployment_children.target() = ::ESMoL::Deployment::meta;
		}
		void InitComposition10()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TypeBase::meta_Types_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TypeBase::meta_Types_parent.name() = "Types_parent";
			::ESMoL::TypeBase::meta_Types_parent.isNavigable() = true;
			::ESMoL::TypeBase::meta_Types_parent.target() = ::ESMoL::Types::meta;
			::ESMoL::Types::meta_TypeBase_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Types::meta_TypeBase_children.name() = "TypeBase";
			::ESMoL::Types::meta_TypeBase_children.min() = 0;
			::ESMoL::Types::meta_TypeBase_children.max() = -1;
			::ESMoL::Types::meta_TypeBase_children.isNavigable() = true;
			::ESMoL::Types::meta_TypeBase_children.target() = ::ESMoL::TypeBase::meta;
		}
		void InitComposition11()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TypeBaseRef::meta_TypeStruct_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TypeBaseRef::meta_TypeStruct_parent.name() = "TypeStruct_parent";
			::ESMoL::TypeBaseRef::meta_TypeStruct_parent.isNavigable() = true;
			::ESMoL::TypeBaseRef::meta_TypeStruct_parent.target() = ::ESMoL::TypeStruct::meta;
			::ESMoL::TypeStruct::meta_TypeBaseRef_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::TypeStruct::meta_TypeBaseRef_children.name() = "TypeBaseRef";
			::ESMoL::TypeStruct::meta_TypeBaseRef_children.min() = 0;
			::ESMoL::TypeStruct::meta_TypeBaseRef_children.max() = -1;
			::ESMoL::TypeStruct::meta_TypeBaseRef_children.isNavigable() = true;
			::ESMoL::TypeStruct::meta_TypeBaseRef_children.target() = ::ESMoL::TypeBaseRef::meta;
		}
		void InitComposition12()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TimingSheet::meta_RequirementsLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TimingSheet::meta_RequirementsLibrary_parent.name() = "RequirementsLibrary_parent";
			::ESMoL::TimingSheet::meta_RequirementsLibrary_parent.isNavigable() = true;
			::ESMoL::TimingSheet::meta_RequirementsLibrary_parent.target() = ::ESMoL::RequirementsLibrary::meta;
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children.name() = "TimingSheet";
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children.min() = 0;
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children.max() = -1;
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children.isNavigable() = true;
			::ESMoL::RequirementsLibrary::meta_TimingSheet_children.target() = ::ESMoL::TimingSheet::meta;
		}
		void InitComposition13()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TimingConstraint::meta_TimingSheet_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TimingConstraint::meta_TimingSheet_parent.name() = "TimingSheet_parent";
			::ESMoL::TimingConstraint::meta_TimingSheet_parent.isNavigable() = true;
			::ESMoL::TimingConstraint::meta_TimingSheet_parent.target() = ::ESMoL::TimingSheet::meta;
			::ESMoL::TimingSheet::meta_TimingConstraint_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::TimingSheet::meta_TimingConstraint_children.name() = "TimingConstraint";
			::ESMoL::TimingSheet::meta_TimingConstraint_children.min() = 0;
			::ESMoL::TimingSheet::meta_TimingConstraint_children.max() = -1;
			::ESMoL::TimingSheet::meta_TimingConstraint_children.isNavigable() = true;
			::ESMoL::TimingSheet::meta_TimingConstraint_children.target() = ::ESMoL::TimingConstraint::meta;
		}
		void InitComposition14()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TaskRef::meta_TimingSheet_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TaskRef::meta_TimingSheet_parent.name() = "TimingSheet_parent";
			::ESMoL::TaskRef::meta_TimingSheet_parent.isNavigable() = true;
			::ESMoL::TaskRef::meta_TimingSheet_parent.target() = ::ESMoL::TimingSheet::meta;
			::ESMoL::TimingSheet::meta_TaskRef_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::TimingSheet::meta_TaskRef_children.name() = "TaskRef";
			::ESMoL::TimingSheet::meta_TaskRef_children.min() = 0;
			::ESMoL::TimingSheet::meta_TaskRef_children.max() = -1;
			::ESMoL::TimingSheet::meta_TaskRef_children.isNavigable() = true;
			::ESMoL::TimingSheet::meta_TaskRef_children.target() = ::ESMoL::TaskRef::meta;
		}
		void InitComposition15()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Line::meta_Line_Block_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Line::meta_Line_Block_parent.name() = "Line_Block_parent";
			::ESMoL::Line::meta_Line_Block_parent.isNavigable() = true;
			::ESMoL::Line::meta_Line_Block_parent.target() = ::ESMoL::Block::meta;
			::ESMoL::Block::meta_Line = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Block::meta_Line.name() = "Line";
			::ESMoL::Block::meta_Line.min() = 0;
			::ESMoL::Block::meta_Line.max() = -1;
			::ESMoL::Block::meta_Line.isNavigable() = true;
			::ESMoL::Block::meta_Line.target() = ::ESMoL::Line::meta;
		}
		void InitComposition16()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Parameter::meta_Parameter_Block_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Parameter::meta_Parameter_Block_parent.name() = "Parameter_Block_parent";
			::ESMoL::Parameter::meta_Parameter_Block_parent.isNavigable() = true;
			::ESMoL::Parameter::meta_Parameter_Block_parent.target() = ::ESMoL::Block::meta;
			::ESMoL::Block::meta_Parameter = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Block::meta_Parameter.name() = "Parameter";
			::ESMoL::Block::meta_Parameter.min() = 0;
			::ESMoL::Block::meta_Parameter.max() = -1;
			::ESMoL::Block::meta_Parameter.isNavigable() = true;
			::ESMoL::Block::meta_Parameter.target() = ::ESMoL::Parameter::meta;
		}
		void InitComposition17()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Annotation::meta_Block_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Annotation::meta_Block_parent.name() = "Block_parent";
			::ESMoL::Annotation::meta_Block_parent.isNavigable() = true;
			::ESMoL::Annotation::meta_Block_parent.target() = ::ESMoL::Block::meta;
			::ESMoL::Block::meta_Annotation_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Block::meta_Annotation_children.name() = "Annotation";
			::ESMoL::Block::meta_Annotation_children.min() = 0;
			::ESMoL::Block::meta_Annotation_children.max() = -1;
			::ESMoL::Block::meta_Annotation_children.isNavigable() = true;
			::ESMoL::Block::meta_Annotation_children.target() = ::ESMoL::Annotation::meta;
		}
		void InitComposition18()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::ConnectorRef::meta_Block_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::ConnectorRef::meta_Block_parent.name() = "Block_parent";
			::ESMoL::ConnectorRef::meta_Block_parent.isNavigable() = true;
			::ESMoL::ConnectorRef::meta_Block_parent.target() = ::ESMoL::Block::meta;
			::ESMoL::Block::meta_ConnectorRef_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Block::meta_ConnectorRef_children.name() = "ConnectorRef";
			::ESMoL::Block::meta_ConnectorRef_children.min() = 0;
			::ESMoL::Block::meta_ConnectorRef_children.max() = -1;
			::ESMoL::Block::meta_ConnectorRef_children.isNavigable() = true;
			::ESMoL::Block::meta_ConnectorRef_children.target() = ::ESMoL::ConnectorRef::meta;
		}
		void InitComposition19()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Port::meta_Block_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Port::meta_Block_parent.name() = "Block_parent";
			::ESMoL::Port::meta_Block_parent.isNavigable() = true;
			::ESMoL::Port::meta_Block_parent.target() = ::ESMoL::Block::meta;
			::ESMoL::Block::meta_Port_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Block::meta_Port_children.name() = "Port";
			::ESMoL::Block::meta_Port_children.min() = 0;
			::ESMoL::Block::meta_Port_children.max() = -1;
			::ESMoL::Block::meta_Port_children.isNavigable() = true;
			::ESMoL::Block::meta_Port_children.target() = ::ESMoL::Port::meta;
		}
		void InitComposition20()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Subsystem::meta_Dataflow_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Subsystem::meta_Dataflow_parent.name() = "Dataflow_parent";
			::ESMoL::Subsystem::meta_Dataflow_parent.isNavigable() = true;
			::ESMoL::Subsystem::meta_Dataflow_parent.target() = ::ESMoL::Dataflow::meta;
			::ESMoL::Dataflow::meta_Subsystem_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Dataflow::meta_Subsystem_children.name() = "Subsystem";
			::ESMoL::Dataflow::meta_Subsystem_children.min() = 0;
			::ESMoL::Dataflow::meta_Subsystem_children.max() = -1;
			::ESMoL::Dataflow::meta_Subsystem_children.isNavigable() = true;
			::ESMoL::Dataflow::meta_Subsystem_children.target() = ::ESMoL::Subsystem::meta;
		}
		void InitComposition21()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Block::meta_Subsystem_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Block::meta_Subsystem_parent.name() = "Subsystem_parent";
			::ESMoL::Block::meta_Subsystem_parent.isNavigable() = true;
			::ESMoL::Block::meta_Subsystem_parent.target() = ::ESMoL::Subsystem::meta;
			::ESMoL::Subsystem::meta_Block_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Subsystem::meta_Block_children.name() = "Block";
			::ESMoL::Subsystem::meta_Block_children.min() = 0;
			::ESMoL::Subsystem::meta_Block_children.max() = -1;
			::ESMoL::Subsystem::meta_Block_children.isNavigable() = true;
			::ESMoL::Subsystem::meta_Block_children.target() = ::ESMoL::Block::meta;
		}
		void InitComposition22()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TypeBaseRef::meta_Port_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TypeBaseRef::meta_Port_parent.name() = "Port_parent";
			::ESMoL::TypeBaseRef::meta_Port_parent.isNavigable() = true;
			::ESMoL::TypeBaseRef::meta_Port_parent.target() = ::ESMoL::Port::meta;
			::ESMoL::Port::meta_TypeBaseRef_child = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Port::meta_TypeBaseRef_child.name() = "TypeBaseRef";
			::ESMoL::Port::meta_TypeBaseRef_child.min() = 0;
			::ESMoL::Port::meta_TypeBaseRef_child.max() = 1;
			::ESMoL::Port::meta_TypeBaseRef_child.isNavigable() = true;
			::ESMoL::Port::meta_TypeBaseRef_child.target() = ::ESMoL::TypeBaseRef::meta;
		}
		void InitComposition23()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TransConnector::meta_State_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TransConnector::meta_State_parent.name() = "State_parent";
			::ESMoL::TransConnector::meta_State_parent.isNavigable() = true;
			::ESMoL::TransConnector::meta_State_parent.target() = ::ESMoL::State::meta;
			::ESMoL::State::meta_TransConnector_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::State::meta_TransConnector_children.name() = "TransConnector";
			::ESMoL::State::meta_TransConnector_children.min() = 0;
			::ESMoL::State::meta_TransConnector_children.max() = -1;
			::ESMoL::State::meta_TransConnector_children.isNavigable() = true;
			::ESMoL::State::meta_TransConnector_children.target() = ::ESMoL::TransConnector::meta;
		}
		void InitComposition24()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Transition::meta_Transition_State_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Transition::meta_Transition_State_parent.name() = "Transition_State_parent";
			::ESMoL::Transition::meta_Transition_State_parent.isNavigable() = true;
			::ESMoL::Transition::meta_Transition_State_parent.target() = ::ESMoL::State::meta;
			::ESMoL::State::meta_Transition = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::State::meta_Transition.name() = "Transition";
			::ESMoL::State::meta_Transition.min() = 0;
			::ESMoL::State::meta_Transition.max() = -1;
			::ESMoL::State::meta_Transition.isNavigable() = true;
			::ESMoL::State::meta_Transition.target() = ::ESMoL::Transition::meta;
		}
		void InitComposition25()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::StateDE::meta_State_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::StateDE::meta_State_parent.name() = "State_parent";
			::ESMoL::StateDE::meta_State_parent.isNavigable() = true;
			::ESMoL::StateDE::meta_State_parent.target() = ::ESMoL::State::meta;
			::ESMoL::State::meta_StateDE_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::State::meta_StateDE_children.name() = "StateDE";
			::ESMoL::State::meta_StateDE_children.min() = 0;
			::ESMoL::State::meta_StateDE_children.max() = -1;
			::ESMoL::State::meta_StateDE_children.isNavigable() = true;
			::ESMoL::State::meta_StateDE_children.target() = ::ESMoL::StateDE::meta;
		}
		void InitComposition26()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::State::meta_Stateflow_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::State::meta_Stateflow_parent.name() = "Stateflow_parent";
			::ESMoL::State::meta_Stateflow_parent.isNavigable() = true;
			::ESMoL::State::meta_Stateflow_parent.target() = ::ESMoL::Stateflow::meta;
			::ESMoL::Stateflow::meta_State_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Stateflow::meta_State_children.name() = "State";
			::ESMoL::Stateflow::meta_State_children.min() = 0;
			::ESMoL::Stateflow::meta_State_children.max() = -1;
			::ESMoL::Stateflow::meta_State_children.isNavigable() = true;
			::ESMoL::Stateflow::meta_State_children.target() = ::ESMoL::State::meta;
		}
		void InitComposition27()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TypeBaseRef::meta_StateDE_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TypeBaseRef::meta_StateDE_parent.name() = "StateDE_parent";
			::ESMoL::TypeBaseRef::meta_StateDE_parent.isNavigable() = true;
			::ESMoL::TypeBaseRef::meta_StateDE_parent.target() = ::ESMoL::StateDE::meta;
			::ESMoL::StateDE::meta_TypeBaseRef_child = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::StateDE::meta_TypeBaseRef_child.name() = "TypeBaseRef";
			::ESMoL::StateDE::meta_TypeBaseRef_child.min() = 0;
			::ESMoL::StateDE::meta_TypeBaseRef_child.max() = 1;
			::ESMoL::StateDE::meta_TypeBaseRef_child.isNavigable() = true;
			::ESMoL::StateDE::meta_TypeBaseRef_child.target() = ::ESMoL::TypeBaseRef::meta;
		}
		void InitComposition28()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::HWElement::meta_HardwareUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::HWElement::meta_HardwareUnit_parent.name() = "HardwareUnit_parent";
			::ESMoL::HWElement::meta_HardwareUnit_parent.isNavigable() = true;
			::ESMoL::HWElement::meta_HardwareUnit_parent.target() = ::ESMoL::HardwareUnit::meta;
			::ESMoL::HardwareUnit::meta_HWElement_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::HardwareUnit::meta_HWElement_children.name() = "HWElement";
			::ESMoL::HardwareUnit::meta_HWElement_children.min() = 0;
			::ESMoL::HardwareUnit::meta_HWElement_children.max() = -1;
			::ESMoL::HardwareUnit::meta_HWElement_children.isNavigable() = true;
			::ESMoL::HardwareUnit::meta_HWElement_children.target() = ::ESMoL::HWElement::meta;
		}
		void InitComposition29()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Wire::meta_HardwareUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Wire::meta_HardwareUnit_parent.name() = "HardwareUnit_parent";
			::ESMoL::Wire::meta_HardwareUnit_parent.isNavigable() = true;
			::ESMoL::Wire::meta_HardwareUnit_parent.target() = ::ESMoL::HardwareUnit::meta;
			::ESMoL::HardwareUnit::meta_Wire_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::HardwareUnit::meta_Wire_children.name() = "Wire";
			::ESMoL::HardwareUnit::meta_Wire_children.min() = 0;
			::ESMoL::HardwareUnit::meta_Wire_children.max() = -1;
			::ESMoL::HardwareUnit::meta_Wire_children.isNavigable() = true;
			::ESMoL::HardwareUnit::meta_Wire_children.target() = ::ESMoL::Wire::meta;
		}
		void InitComposition30()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Channel::meta_HardwareUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Channel::meta_HardwareUnit_parent.name() = "HardwareUnit_parent";
			::ESMoL::Channel::meta_HardwareUnit_parent.isNavigable() = true;
			::ESMoL::Channel::meta_HardwareUnit_parent.target() = ::ESMoL::HardwareUnit::meta;
			::ESMoL::HardwareUnit::meta_Channel_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::HardwareUnit::meta_Channel_children.name() = "Channel";
			::ESMoL::HardwareUnit::meta_Channel_children.min() = 0;
			::ESMoL::HardwareUnit::meta_Channel_children.max() = -1;
			::ESMoL::HardwareUnit::meta_Channel_children.isNavigable() = true;
			::ESMoL::HardwareUnit::meta_Channel_children.target() = ::ESMoL::Channel::meta;
		}
		void InitComposition31()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::HardwareUnit::meta_PlatformLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::HardwareUnit::meta_PlatformLibrary_parent.name() = "PlatformLibrary_parent";
			::ESMoL::HardwareUnit::meta_PlatformLibrary_parent.isNavigable() = true;
			::ESMoL::HardwareUnit::meta_PlatformLibrary_parent.target() = ::ESMoL::PlatformLibrary::meta;
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children.name() = "HardwareUnit";
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children.min() = 0;
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children.max() = -1;
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children.isNavigable() = true;
			::ESMoL::PlatformLibrary::meta_HardwareUnit_children.target() = ::ESMoL::HardwareUnit::meta;
		}
		void InitComposition32()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::BChan::meta_Router_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::BChan::meta_Router_parent.name() = "Router_parent";
			::ESMoL::BChan::meta_Router_parent.isNavigable() = true;
			::ESMoL::BChan::meta_Router_parent.target() = ::ESMoL::Router::meta;
			::ESMoL::Router::meta_BChan_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Router::meta_BChan_children.name() = "BChan";
			::ESMoL::Router::meta_BChan_children.min() = 0;
			::ESMoL::Router::meta_BChan_children.max() = -1;
			::ESMoL::Router::meta_BChan_children.isNavigable() = true;
			::ESMoL::Router::meta_BChan_children.target() = ::ESMoL::BChan::meta;
		}
		void InitComposition33()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Capability::meta_HWElement_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Capability::meta_HWElement_parent.name() = "HWElement_parent";
			::ESMoL::Capability::meta_HWElement_parent.isNavigable() = true;
			::ESMoL::Capability::meta_HWElement_parent.target() = ::ESMoL::HWElement::meta;
			::ESMoL::HWElement::meta_Capability_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::HWElement::meta_Capability_children.name() = "Capability";
			::ESMoL::HWElement::meta_Capability_children.min() = 0;
			::ESMoL::HWElement::meta_Capability_children.max() = -1;
			::ESMoL::HWElement::meta_Capability_children.isNavigable() = true;
			::ESMoL::HWElement::meta_Capability_children.target() = ::ESMoL::Capability::meta;
		}
		void InitComposition34()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Channel::meta_Node_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Channel::meta_Node_parent.name() = "Node_parent";
			::ESMoL::Channel::meta_Node_parent.isNavigable() = true;
			::ESMoL::Channel::meta_Node_parent.target() = ::ESMoL::Node::meta;
			::ESMoL::Node::meta_Channel_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Node::meta_Channel_children.name() = "Channel";
			::ESMoL::Node::meta_Channel_children.min() = 0;
			::ESMoL::Node::meta_Channel_children.max() = -1;
			::ESMoL::Node::meta_Channel_children.isNavigable() = true;
			::ESMoL::Node::meta_Channel_children.target() = ::ESMoL::Channel::meta;
		}
		void InitComposition35()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::OS::meta_Node_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::OS::meta_Node_parent.name() = "Node_parent";
			::ESMoL::OS::meta_Node_parent.isNavigable() = true;
			::ESMoL::OS::meta_Node_parent.target() = ::ESMoL::Node::meta;
			::ESMoL::Node::meta_OS_child = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Node::meta_OS_child.name() = "OS";
			::ESMoL::Node::meta_OS_child.min() = 0;
			::ESMoL::Node::meta_OS_child.max() = 1;
			::ESMoL::Node::meta_OS_child.isNavigable() = true;
			::ESMoL::Node::meta_OS_child.target() = ::ESMoL::OS::meta;
		}
		void InitComposition36()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Deployment::meta_DeploymentLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Deployment::meta_DeploymentLibrary_parent.name() = "DeploymentLibrary_parent";
			::ESMoL::Deployment::meta_DeploymentLibrary_parent.isNavigable() = true;
			::ESMoL::Deployment::meta_DeploymentLibrary_parent.target() = ::ESMoL::DeploymentLibrary::meta;
			::ESMoL::DeploymentLibrary::meta_Deployment_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::DeploymentLibrary::meta_Deployment_children.name() = "Deployment";
			::ESMoL::DeploymentLibrary::meta_Deployment_children.min() = 0;
			::ESMoL::DeploymentLibrary::meta_Deployment_children.max() = -1;
			::ESMoL::DeploymentLibrary::meta_Deployment_children.isNavigable() = true;
			::ESMoL::DeploymentLibrary::meta_Deployment_children.target() = ::ESMoL::Deployment::meta;
		}
		void InitComposition37()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Task::meta_Deployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Task::meta_Deployment_parent.name() = "Deployment_parent";
			::ESMoL::Task::meta_Deployment_parent.isNavigable() = true;
			::ESMoL::Task::meta_Deployment_parent.target() = ::ESMoL::Deployment::meta;
			::ESMoL::Deployment::meta_Task_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Deployment::meta_Task_children.name() = "Task";
			::ESMoL::Deployment::meta_Task_children.min() = 0;
			::ESMoL::Deployment::meta_Task_children.max() = -1;
			::ESMoL::Deployment::meta_Task_children.isNavigable() = true;
			::ESMoL::Deployment::meta_Task_children.target() = ::ESMoL::Task::meta;
		}
		void InitComposition38()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::TaskAssignment::meta_Deployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::TaskAssignment::meta_Deployment_parent.name() = "Deployment_parent";
			::ESMoL::TaskAssignment::meta_Deployment_parent.isNavigable() = true;
			::ESMoL::TaskAssignment::meta_Deployment_parent.target() = ::ESMoL::Deployment::meta;
			::ESMoL::Deployment::meta_TaskAssignment_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Deployment::meta_TaskAssignment_children.name() = "TaskAssignment";
			::ESMoL::Deployment::meta_TaskAssignment_children.min() = 0;
			::ESMoL::Deployment::meta_TaskAssignment_children.max() = -1;
			::ESMoL::Deployment::meta_TaskAssignment_children.isNavigable() = true;
			::ESMoL::Deployment::meta_TaskAssignment_children.target() = ::ESMoL::TaskAssignment::meta;
		}
		void InitComposition39()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::NodeRef::meta_Deployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::NodeRef::meta_Deployment_parent.name() = "Deployment_parent";
			::ESMoL::NodeRef::meta_Deployment_parent.isNavigable() = true;
			::ESMoL::NodeRef::meta_Deployment_parent.target() = ::ESMoL::Deployment::meta;
			::ESMoL::Deployment::meta_NodeRef_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Deployment::meta_NodeRef_children.name() = "NodeRef";
			::ESMoL::Deployment::meta_NodeRef_children.min() = 0;
			::ESMoL::Deployment::meta_NodeRef_children.max() = -1;
			::ESMoL::Deployment::meta_NodeRef_children.isNavigable() = true;
			::ESMoL::Deployment::meta_NodeRef_children.target() = ::ESMoL::NodeRef::meta;
		}
		void InitComposition40()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Connector::meta_Task_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Connector::meta_Task_parent.name() = "Task_parent";
			::ESMoL::Connector::meta_Task_parent.isNavigable() = true;
			::ESMoL::Connector::meta_Task_parent.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_Connector_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Task::meta_Connector_children.name() = "Connector";
			::ESMoL::Task::meta_Connector_children.min() = 0;
			::ESMoL::Task::meta_Connector_children.max() = -1;
			::ESMoL::Task::meta_Connector_children.isNavigable() = true;
			::ESMoL::Task::meta_Connector_children.target() = ::ESMoL::Connector::meta;
		}
		void InitComposition41()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Component::meta_Task_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Component::meta_Task_parent.name() = "Task_parent";
			::ESMoL::Component::meta_Task_parent.isNavigable() = true;
			::ESMoL::Component::meta_Task_parent.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_Component_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Task::meta_Component_children.name() = "Component";
			::ESMoL::Task::meta_Component_children.min() = 0;
			::ESMoL::Task::meta_Component_children.max() = -1;
			::ESMoL::Task::meta_Component_children.isNavigable() = true;
			::ESMoL::Task::meta_Component_children.target() = ::ESMoL::Component::meta;
		}
		void InitComposition42()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::CommDst::meta_Task_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::CommDst::meta_Task_parent.name() = "Task_parent";
			::ESMoL::CommDst::meta_Task_parent.isNavigable() = true;
			::ESMoL::CommDst::meta_Task_parent.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_CommDst_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Task::meta_CommDst_children.name() = "CommDst";
			::ESMoL::Task::meta_CommDst_children.min() = 0;
			::ESMoL::Task::meta_CommDst_children.max() = -1;
			::ESMoL::Task::meta_CommDst_children.isNavigable() = true;
			::ESMoL::Task::meta_CommDst_children.target() = ::ESMoL::CommDst::meta;
		}
		void InitComposition43()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::CommMapping::meta_Task_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::CommMapping::meta_Task_parent.name() = "Task_parent";
			::ESMoL::CommMapping::meta_Task_parent.isNavigable() = true;
			::ESMoL::CommMapping::meta_Task_parent.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_CommMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Task::meta_CommMapping_children.name() = "CommMapping";
			::ESMoL::Task::meta_CommMapping_children.min() = 0;
			::ESMoL::Task::meta_CommMapping_children.max() = -1;
			::ESMoL::Task::meta_CommMapping_children.isNavigable() = true;
			::ESMoL::Task::meta_CommMapping_children.target() = ::ESMoL::CommMapping::meta;
		}
		void InitComposition44()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::MsgAssignment::meta_Task_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::MsgAssignment::meta_Task_parent.name() = "Task_parent";
			::ESMoL::MsgAssignment::meta_Task_parent.isNavigable() = true;
			::ESMoL::MsgAssignment::meta_Task_parent.target() = ::ESMoL::Task::meta;
			::ESMoL::Task::meta_MsgAssignment_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::Task::meta_MsgAssignment_children.name() = "MsgAssignment";
			::ESMoL::Task::meta_MsgAssignment_children.min() = 0;
			::ESMoL::Task::meta_MsgAssignment_children.max() = -1;
			::ESMoL::Task::meta_MsgAssignment_children.isNavigable() = true;
			::ESMoL::Task::meta_MsgAssignment_children.target() = ::ESMoL::MsgAssignment::meta;
		}
		void InitComposition45()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::DesignFolder::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::DesignFolder::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::DesignFolder::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::DesignFolder::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_DesignFolder_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_DesignFolder_children.name() = "DesignFolder";
			::ESMoL::RootFolder::meta_DesignFolder_children.min() = 0;
			::ESMoL::RootFolder::meta_DesignFolder_children.max() = -1;
			::ESMoL::RootFolder::meta_DesignFolder_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_DesignFolder_children.target() = ::ESMoL::DesignFolder::meta;
		}
		void InitComposition46()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::ArchitectureLibrary::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::ArchitectureLibrary::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::ArchitectureLibrary::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::ArchitectureLibrary::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children.name() = "ArchitectureLibrary";
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children.min() = 0;
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children.max() = -1;
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_ArchitectureLibrary_children.target() = ::ESMoL::ArchitectureLibrary::meta;
		}
		void InitComposition47()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Types::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Types::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::Types::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::Types::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_Types_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_Types_children.name() = "Types";
			::ESMoL::RootFolder::meta_Types_children.min() = 0;
			::ESMoL::RootFolder::meta_Types_children.max() = -1;
			::ESMoL::RootFolder::meta_Types_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_Types_children.target() = ::ESMoL::Types::meta;
		}
		void InitComposition48()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::RequirementsLibrary::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::RequirementsLibrary::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::RequirementsLibrary::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::RequirementsLibrary::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_RequirementsLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_RequirementsLibrary_children.name() = "RequirementsLibrary";
			::ESMoL::RootFolder::meta_RequirementsLibrary_children.min() = 0;
			::ESMoL::RootFolder::meta_RequirementsLibrary_children.max() = -1;
			::ESMoL::RootFolder::meta_RequirementsLibrary_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_RequirementsLibrary_children.target() = ::ESMoL::RequirementsLibrary::meta;
		}
		void InitComposition49()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Dataflow::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Dataflow::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::Dataflow::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::Dataflow::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_Dataflow_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_Dataflow_children.name() = "Dataflow";
			::ESMoL::RootFolder::meta_Dataflow_children.min() = 0;
			::ESMoL::RootFolder::meta_Dataflow_children.max() = -1;
			::ESMoL::RootFolder::meta_Dataflow_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_Dataflow_children.target() = ::ESMoL::Dataflow::meta;
		}
		void InitComposition50()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::Stateflow::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::Stateflow::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::Stateflow::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::Stateflow::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_Stateflow_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_Stateflow_children.name() = "Stateflow";
			::ESMoL::RootFolder::meta_Stateflow_children.min() = 0;
			::ESMoL::RootFolder::meta_Stateflow_children.max() = -1;
			::ESMoL::RootFolder::meta_Stateflow_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_Stateflow_children.target() = ::ESMoL::Stateflow::meta;
		}
		void InitComposition51()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::PlatformLibrary::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::PlatformLibrary::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::PlatformLibrary::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::PlatformLibrary::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_PlatformLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_PlatformLibrary_children.name() = "PlatformLibrary";
			::ESMoL::RootFolder::meta_PlatformLibrary_children.min() = 0;
			::ESMoL::RootFolder::meta_PlatformLibrary_children.max() = -1;
			::ESMoL::RootFolder::meta_PlatformLibrary_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_PlatformLibrary_children.target() = ::ESMoL::PlatformLibrary::meta;
		}
		void InitComposition52()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::DeploymentLibrary::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::DeploymentLibrary::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::DeploymentLibrary::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::DeploymentLibrary::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_DeploymentLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_DeploymentLibrary_children.name() = "DeploymentLibrary";
			::ESMoL::RootFolder::meta_DeploymentLibrary_children.min() = 0;
			::ESMoL::RootFolder::meta_DeploymentLibrary_children.max() = -1;
			::ESMoL::RootFolder::meta_DeploymentLibrary_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_DeploymentLibrary_children.target() = ::ESMoL::DeploymentLibrary::meta;
		}
		void InitComposition53()
		{
			::Uml::Composition comp = ::Uml::Composition::Create(umldiagram);
			comp.nonpersistent() =false;
			::ESMoL::RootFolder::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::ESMoL::RootFolder::meta_RootFolder_parent.name() = "RootFolder_parent";
			::ESMoL::RootFolder::meta_RootFolder_parent.isNavigable() = true;
			::ESMoL::RootFolder::meta_RootFolder_parent.target() = ::ESMoL::RootFolder::meta;
			::ESMoL::RootFolder::meta_RootFolder_children = ::Uml::CompositionChildRole::Create(comp);
			::ESMoL::RootFolder::meta_RootFolder_children.name() = "RootFolder";
			::ESMoL::RootFolder::meta_RootFolder_children.min() = 0;
			::ESMoL::RootFolder::meta_RootFolder_children.max() = -1;
			::ESMoL::RootFolder::meta_RootFolder_children.isNavigable() = true;
			::ESMoL::RootFolder::meta_RootFolder_children.target() = ::ESMoL::RootFolder::meta;
		}
		void InitCrossNSCompositions()
		{
		}
		void InitInheritence()
		{
			IOPortExp::meta.subTypes() +=  ::ESMoL::Output::meta;
			IOPortExp::meta.subTypes() +=  ::ESMoL::Input::meta;
			IOPortInfoBase::meta.subTypes() +=  ::ESMoL::IOPortInfo::meta;
			IOPortInfoBase::meta.subTypes() +=  ::ESMoL::IOPortInfoRef::meta;
			ComponentBase::meta.subTypes() +=  ::ESMoL::CCode::meta;
			ComponentBase::meta.subTypes() +=  ::ESMoL::SubsystemRef::meta;
			ComponentBase::meta.subTypes() +=  ::ESMoL::Subsystem::meta;
			Output::meta.subTypes() +=  ::ESMoL::COutputPort::meta;
			Output::meta.subTypes() +=  ::ESMoL::OutputPort::meta;
			Input::meta.subTypes() +=  ::ESMoL::CInputPort::meta;
			Input::meta.subTypes() +=  ::ESMoL::InputPort::meta;
			TypeBase::meta.subTypes() +=  ::ESMoL::TypeStruct::meta;
			TypeBase::meta.subTypes() +=  ::ESMoL::Matrix::meta;
			Block::meta.subTypes() +=  ::ESMoL::Primitive::meta;
			Block::meta.subTypes() +=  ::ESMoL::Reference::meta;
			Block::meta.subTypes() +=  ::ESMoL::Subsystem::meta;
			OutPort::meta.subTypes() +=  ::ESMoL::OutputPort::meta;
			OutPort::meta.subTypes() +=  ::ESMoL::StatePort::meta;
			Port::meta.subTypes() +=  ::ESMoL::OutPort::meta;
			Port::meta.subTypes() +=  ::ESMoL::InPort::meta;
			InPort::meta.subTypes() +=  ::ESMoL::EnablePort::meta;
			InPort::meta.subTypes() +=  ::ESMoL::TriggerPort::meta;
			InPort::meta.subTypes() +=  ::ESMoL::InputPort::meta;
			InPort::meta.subTypes() +=  ::ESMoL::ActionPort::meta;
			TransConnector::meta.subTypes() +=  ::ESMoL::State::meta;
			TransConnector::meta.subTypes() +=  ::ESMoL::History::meta;
			TransConnector::meta.subTypes() +=  ::ESMoL::TransStart::meta;
			TransConnector::meta.subTypes() +=  ::ESMoL::Junction::meta;
			TransConnector::meta.subTypes() +=  ::ESMoL::ConnectorRef::meta;
			StateDE::meta.subTypes() +=  ::ESMoL::Data::meta;
			StateDE::meta.subTypes() +=  ::ESMoL::Event::meta;
			Connectable::meta.subTypes() +=  ::ESMoL::Bus::meta;
			Connectable::meta.subTypes() +=  ::ESMoL::Channel::meta;
			HWElement::meta.subTypes() +=  ::ESMoL::HardwareUnit::meta;
			HWElement::meta.subTypes() +=  ::ESMoL::Router::meta;
			HWElement::meta.subTypes() +=  ::ESMoL::Bus::meta;
			HWElement::meta.subTypes() +=  ::ESMoL::Node::meta;
			Bus::meta.subTypes() +=  ::ESMoL::TTBus::meta;
			Bus::meta.subTypes() +=  ::ESMoL::OldBus::meta;
			Channel::meta.subTypes() +=  ::ESMoL::IChan::meta;
			Channel::meta.subTypes() +=  ::ESMoL::OChan::meta;
			Channel::meta.subTypes() +=  ::ESMoL::BChan::meta;
			CommDst::meta.subTypes() +=  ::ESMoL::Message::meta;
			CommDst::meta.subTypes() +=  ::ESMoL::MessageRef::meta;
			CommDst::meta.subTypes() +=  ::ESMoL::ChannelRef::meta;
			CommMapping::meta.subTypes() +=  ::ESMoL::OutCommMapping::meta;
			CommMapping::meta.subTypes() +=  ::ESMoL::InCommMapping::meta;
			Message::meta.subTypes() +=  ::ESMoL::TTMessage::meta;
			IOPort::meta.subTypes() +=  ::ESMoL::Output::meta;
			IOPort::meta.subTypes() +=  ::ESMoL::Input::meta;
			Task::meta.subTypes() +=  ::ESMoL::TTTask::meta;
			Task::meta.subTypes() +=  ::ESMoL::OldTask::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::IOPortExp::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::IOPortAssignment::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::IOPortInfoBase::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::System::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Connector::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::ComponentBase::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TypeBase::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TypeBaseRef::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TimingConstraint::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TimingSheet::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TaskRef::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Block::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Parameter::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Annotation::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Line::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Port::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Transition::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TransConnector::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::StateDE::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::OS::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Wire::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Connectable::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Capability::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::HWElement::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::CommDst::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::CommMapping::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Component::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::IOPort::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::MsgAssignment::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::TaskAssignment::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Deployment::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::Task::meta;
			MgaObject::meta.subTypes() +=  ::ESMoL::NodeRef::meta;
		}
		void InitCrossNSInheritence()
		{
		}
		void InitializeDgr()
		{
			Creates();
			InitClassesAttributes();
			CreatesNamespaces();
			InitNamespaces();
			InitAssociation0();
			InitAssociation1();
			InitAssociation2();
			InitAssociation3();
			InitAssociation4();
			InitAssociation5();
			InitAssociation6();
			InitAssociation7();
			InitAssociation8();
			InitAssociation9();
			InitAssociation10();
			InitAssociation11();
			InitAssociation12();
			InitAssociation13();
			InitAssociation14();
			InitAssociation15();
			InitAssociation16();
			InitAssociation17();
			InitAssociation18();
			InitComposition0();
			InitComposition1();
			InitComposition2();
			InitComposition3();
			InitComposition4();
			InitComposition5();
			InitComposition6();
			InitComposition7();
			InitComposition8();
			InitComposition9();
			InitComposition10();
			InitComposition11();
			InitComposition12();
			InitComposition13();
			InitComposition14();
			InitComposition15();
			InitComposition16();
			InitComposition17();
			InitComposition18();
			InitComposition19();
			InitComposition20();
			InitComposition21();
			InitComposition22();
			InitComposition23();
			InitComposition24();
			InitComposition25();
			InitComposition26();
			InitComposition27();
			InitComposition28();
			InitComposition29();
			InitComposition30();
			InitComposition31();
			InitComposition32();
			InitComposition33();
			InitComposition34();
			InitComposition35();
			InitComposition36();
			InitComposition37();
			InitComposition38();
			InitComposition39();
			InitComposition40();
			InitComposition41();
			InitComposition42();
			InitComposition43();
			InitComposition44();
			InitComposition45();
			InitComposition46();
			InitComposition47();
			InitComposition48();
			InitComposition49();
			InitComposition50();
			InitComposition51();
			InitComposition52();
			InitComposition53();
			InitInheritence();
		}

		// initialize from another diagram
		void Creates2(const ::Uml::Diagram &dgr)
		{
			::Uml::SetClass(TTTask::meta, dgr, "TTTask");
			::Uml::SetAttribute(TTTask::meta_TTFreq, TTTask::meta, "TTFreq");
			::Uml::SetAttribute(TTTask::meta_TTSchedule, TTTask::meta, "TTSchedule");
			::Uml::SetAttribute(TTTask::meta_TTExecTime, TTTask::meta, "TTExecTime");
			::Uml::SetClass(TTBus::meta, dgr, "TTBus");
			::Uml::SetAttribute(TTBus::meta_TTSetupTime, TTBus::meta, "TTSetupTime");
			::Uml::SetAttribute(TTBus::meta_Hyperperiod, TTBus::meta, "Hyperperiod");
			::Uml::SetAttribute(TTBus::meta_SlotSize, TTBus::meta, "SlotSize");
			::Uml::SetClass(TTMessage::meta, dgr, "TTMessage");
			::Uml::SetAttribute(TTMessage::meta_TTSchedule, TTMessage::meta, "TTSchedule");
			::Uml::SetClass(OldBus::meta, dgr, "OldBus");
			::Uml::SetAttribute(OldBus::meta_FrameSize, OldBus::meta, "FrameSize");
			::Uml::SetAttribute(OldBus::meta_Medium, OldBus::meta, "Medium");
			::Uml::SetClass(OldTask::meta, dgr, "OldTask");
			::Uml::SetAttribute(OldTask::meta_Priority, OldTask::meta, "Priority");
			::Uml::SetAttribute(OldTask::meta_TaskType, OldTask::meta, "TaskType");
			::Uml::SetAttribute(OldTask::meta_Activation, OldTask::meta, "Activation");
			::Uml::SetAttribute(OldTask::meta_AutoStart, OldTask::meta, "AutoStart");
			::Uml::SetAttribute(OldTask::meta_Preemption, OldTask::meta, "Preemption");
			::Uml::SetAttribute(OldTask::meta_Cyclic, OldTask::meta, "Cyclic");
			::Uml::SetAttribute(OldTask::meta_CycleTime, OldTask::meta, "CycleTime");
			::Uml::SetClass(CCode::meta, dgr, "CCode");
			::Uml::SetClass(SubsystemRef::meta, dgr, "SubsystemRef");
			::Uml::SetClass(COutputPort::meta, dgr, "COutputPort");
			::Uml::SetClass(CInputPort::meta, dgr, "CInputPort");
			::Uml::SetClass(IOPortExp::meta, dgr, "IOPortExp");
			::Uml::SetClass(IOPortInfo::meta, dgr, "IOPortInfo");
			::Uml::SetAttribute(IOPortInfo::meta_DataInit, IOPortInfo::meta, "DataInit");
			::Uml::SetAttribute(IOPortInfo::meta_DataSize, IOPortInfo::meta, "DataSize");
			::Uml::SetAttribute(IOPortInfo::meta_DataMin, IOPortInfo::meta, "DataMin");
			::Uml::SetAttribute(IOPortInfo::meta_DataMax, IOPortInfo::meta, "DataMax");
			::Uml::SetAttribute(IOPortInfo::meta_Scale, IOPortInfo::meta, "Scale");
			::Uml::SetAttribute(IOPortInfo::meta_Offset, IOPortInfo::meta, "Offset");
			::Uml::SetClass(IOPortInfoRef::meta, dgr, "IOPortInfoRef");
			::Uml::SetClass(IOPortAssignment::meta, dgr, "IOPortAssignment");
			::Uml::SetClass(IOPortInfoBase::meta, dgr, "IOPortInfoBase");
			::Uml::SetClass(ArchitectureLibrary::meta, dgr, "ArchitectureLibrary");
			::Uml::SetAttribute(ArchitectureLibrary::meta_name, ArchitectureLibrary::meta, "name");
			::Uml::SetClass(System::meta, dgr, "System");
			::Uml::SetClass(DesignFolder::meta, dgr, "DesignFolder");
			::Uml::SetAttribute(DesignFolder::meta_name, DesignFolder::meta, "name");
			::Uml::SetClass(Connector::meta, dgr, "Connector");
			::Uml::SetAttribute(Connector::meta_ConnectionType, Connector::meta, "ConnectionType");
			::Uml::SetClass(ComponentBase::meta, dgr, "ComponentBase");
			::Uml::SetAttribute(ComponentBase::meta_Deadline, ComponentBase::meta, "Deadline");
			::Uml::SetAttribute(ComponentBase::meta_Period, ComponentBase::meta, "Period");
			::Uml::SetClass(Output::meta, dgr, "Output");
			::Uml::SetClass(Input::meta, dgr, "Input");
			::Uml::SetClass(Types::meta, dgr, "Types");
			::Uml::SetAttribute(Types::meta_name, Types::meta, "name");
			::Uml::SetClass(TypeStruct::meta, dgr, "TypeStruct");
			::Uml::SetAttribute(TypeStruct::meta_MemberCount, TypeStruct::meta, "MemberCount");
			::Uml::SetClass(Matrix::meta, dgr, "Matrix");
			::Uml::SetAttribute(Matrix::meta_rows, Matrix::meta, "rows");
			::Uml::SetAttribute(Matrix::meta_Type, Matrix::meta, "Type");
			::Uml::SetAttribute(Matrix::meta_columns, Matrix::meta, "columns");
			::Uml::SetClass(TypeBase::meta, dgr, "TypeBase");
			::Uml::SetClass(TypeBaseRef::meta, dgr, "TypeBaseRef");
			::Uml::SetAttribute(TypeBaseRef::meta_MemberIndex, TypeBaseRef::meta, "MemberIndex");
			::Uml::SetClass(TimingConstraint::meta, dgr, "TimingConstraint");
			::Uml::SetAttribute(TimingConstraint::meta_Latency, TimingConstraint::meta, "Latency");
			::Uml::SetClass(RequirementsLibrary::meta, dgr, "RequirementsLibrary");
			::Uml::SetAttribute(RequirementsLibrary::meta_name, RequirementsLibrary::meta, "name");
			::Uml::SetClass(TimingSheet::meta, dgr, "TimingSheet");
			::Uml::SetClass(TaskRef::meta, dgr, "TaskRef");
			::Uml::SetClass(Primitive::meta, dgr, "Primitive");
			::Uml::SetClass(Block::meta, dgr, "Block");
			::Uml::SetAttribute(Block::meta_Tag, Block::meta, "Tag");
			::Uml::SetAttribute(Block::meta_BlockType, Block::meta, "BlockType");
			::Uml::SetAttribute(Block::meta_Name, Block::meta, "Name");
			::Uml::SetAttribute(Block::meta_Description, Block::meta, "Description");
			::Uml::SetAttribute(Block::meta_Priority, Block::meta, "Priority");
			::Uml::SetAttribute(Block::meta_SampleTime, Block::meta, "SampleTime");
			::Uml::SetAttribute(Block::meta_UserData, Block::meta, "UserData");
			::Uml::SetClass(Parameter::meta, dgr, "Parameter");
			::Uml::SetAttribute(Parameter::meta_Value, Parameter::meta, "Value");
			::Uml::SetClass(Reference::meta, dgr, "Reference");
			::Uml::SetAttribute(Reference::meta_SourceBlock, Reference::meta, "SourceBlock");
			::Uml::SetAttribute(Reference::meta_SourceType, Reference::meta, "SourceType");
			::Uml::SetClass(Annotation::meta, dgr, "Annotation");
			::Uml::SetAttribute(Annotation::meta_Text, Annotation::meta, "Text");
			::Uml::SetClass(Line::meta, dgr, "Line");
			::Uml::SetAttribute(Line::meta_Name, Line::meta, "Name");
			::Uml::SetClass(Dataflow::meta, dgr, "Dataflow");
			::Uml::SetAttribute(Dataflow::meta_name, Dataflow::meta, "name");
			::Uml::SetClass(Subsystem::meta, dgr, "Subsystem");
			::Uml::SetClass(OutputPort::meta, dgr, "OutputPort");
			::Uml::SetAttribute(OutputPort::meta_Number, OutputPort::meta, "Number");
			::Uml::SetClass(OutPort::meta, dgr, "OutPort");
			::Uml::SetClass(StatePort::meta, dgr, "StatePort");
			::Uml::SetClass(Port::meta, dgr, "Port");
			::Uml::SetClass(EnablePort::meta, dgr, "EnablePort");
			::Uml::SetAttribute(EnablePort::meta_StatesWhenEnabling, EnablePort::meta, "StatesWhenEnabling");
			::Uml::SetClass(TriggerPort::meta, dgr, "TriggerPort");
			::Uml::SetAttribute(TriggerPort::meta_TriggerType, TriggerPort::meta, "TriggerType");
			::Uml::SetClass(InputPort::meta, dgr, "InputPort");
			::Uml::SetAttribute(InputPort::meta_Number, InputPort::meta, "Number");
			::Uml::SetClass(InPort::meta, dgr, "InPort");
			::Uml::SetClass(ActionPort::meta, dgr, "ActionPort");
			::Uml::SetClass(State::meta, dgr, "State");
			::Uml::SetAttribute(State::meta_Name, State::meta, "Name");
			::Uml::SetAttribute(State::meta_Decomposition, State::meta, "Decomposition");
			::Uml::SetAttribute(State::meta_EnterAction, State::meta, "EnterAction");
			::Uml::SetAttribute(State::meta_DuringAction, State::meta, "DuringAction");
			::Uml::SetAttribute(State::meta_ExitAction, State::meta, "ExitAction");
			::Uml::SetAttribute(State::meta_Order, State::meta, "Order");
			::Uml::SetClass(Transition::meta, dgr, "Transition");
			::Uml::SetAttribute(Transition::meta_Guard, Transition::meta, "Guard");
			::Uml::SetAttribute(Transition::meta_Trigger, Transition::meta, "Trigger");
			::Uml::SetAttribute(Transition::meta_Action, Transition::meta, "Action");
			::Uml::SetAttribute(Transition::meta_ConditionAction, Transition::meta, "ConditionAction");
			::Uml::SetAttribute(Transition::meta_Order, Transition::meta, "Order");
			::Uml::SetClass(History::meta, dgr, "History");
			::Uml::SetClass(TransStart::meta, dgr, "TransStart");
			::Uml::SetClass(Junction::meta, dgr, "Junction");
			::Uml::SetClass(ConnectorRef::meta, dgr, "ConnectorRef");
			::Uml::SetClass(Stateflow::meta, dgr, "Stateflow");
			::Uml::SetAttribute(Stateflow::meta_name, Stateflow::meta, "name");
			::Uml::SetClass(TransConnector::meta, dgr, "TransConnector");
			::Uml::SetClass(Data::meta, dgr, "Data");
			::Uml::SetAttribute(Data::meta_Name, Data::meta, "Name");
			::Uml::SetAttribute(Data::meta_Description, Data::meta, "Description");
			::Uml::SetAttribute(Data::meta_DataType, Data::meta, "DataType");
			::Uml::SetAttribute(Data::meta_Port, Data::meta, "Port");
			::Uml::SetAttribute(Data::meta_Units, Data::meta, "Units");
			::Uml::SetAttribute(Data::meta_InitialValue, Data::meta, "InitialValue");
			::Uml::SetAttribute(Data::meta_Min, Data::meta, "Min");
			::Uml::SetAttribute(Data::meta_Max, Data::meta, "Max");
			::Uml::SetAttribute(Data::meta_ArraySize, Data::meta, "ArraySize");
			::Uml::SetAttribute(Data::meta_ArrayFirstIndex, Data::meta, "ArrayFirstIndex");
			::Uml::SetAttribute(Data::meta_Scope, Data::meta, "Scope");
			::Uml::SetClass(Event::meta, dgr, "Event");
			::Uml::SetAttribute(Event::meta_Name, Event::meta, "Name");
			::Uml::SetAttribute(Event::meta_Description, Event::meta, "Description");
			::Uml::SetAttribute(Event::meta_Scope, Event::meta, "Scope");
			::Uml::SetAttribute(Event::meta_Trigger, Event::meta, "Trigger");
			::Uml::SetAttribute(Event::meta_Port, Event::meta, "Port");
			::Uml::SetClass(StateDE::meta, dgr, "StateDE");
			::Uml::SetClass(OS::meta, dgr, "OS");
			::Uml::SetAttribute(OS::meta_SendOverheadTime, OS::meta, "SendOverheadTime");
			::Uml::SetAttribute(OS::meta_ContextSwitchTime, OS::meta, "ContextSwitchTime");
			::Uml::SetAttribute(OS::meta_RecvOverheadTime, OS::meta, "RecvOverheadTime");
			::Uml::SetAttribute(OS::meta_TickResolution, OS::meta, "TickResolution");
			::Uml::SetClass(Wire::meta, dgr, "Wire");
			::Uml::SetClass(HardwareUnit::meta, dgr, "HardwareUnit");
			::Uml::SetClass(PlatformLibrary::meta, dgr, "PlatformLibrary");
			::Uml::SetAttribute(PlatformLibrary::meta_name, PlatformLibrary::meta, "name");
			::Uml::SetClass(Router::meta, dgr, "Router");
			::Uml::SetClass(Connectable::meta, dgr, "Connectable");
			::Uml::SetClass(Capability::meta, dgr, "Capability");
			::Uml::SetClass(HWElement::meta, dgr, "HWElement");
			::Uml::SetAttribute(HWElement::meta_MetaData, HWElement::meta, "MetaData");
			::Uml::SetClass(IChan::meta, dgr, "IChan");
			::Uml::SetClass(OChan::meta, dgr, "OChan");
			::Uml::SetClass(BChan::meta, dgr, "BChan");
			::Uml::SetClass(Bus::meta, dgr, "Bus");
			::Uml::SetAttribute(Bus::meta_OverheadTime, Bus::meta, "OverheadTime");
			::Uml::SetAttribute(Bus::meta_DataRate, Bus::meta, "DataRate");
			::Uml::SetAttribute(Bus::meta_MinFrameSize, Bus::meta, "MinFrameSize");
			::Uml::SetAttribute(Bus::meta_SwitchMemorySize, Bus::meta, "SwitchMemorySize");
			::Uml::SetClass(Node::meta, dgr, "Node");
			::Uml::SetAttribute(Node::meta_ROM, Node::meta, "ROM");
			::Uml::SetAttribute(Node::meta_Simulator, Node::meta, "Simulator");
			::Uml::SetAttribute(Node::meta_RAM, Node::meta, "RAM");
			::Uml::SetAttribute(Node::meta_Speed, Node::meta, "Speed");
			::Uml::SetAttribute(Node::meta_CPU, Node::meta, "CPU");
			::Uml::SetClass(Channel::meta, dgr, "Channel");
			::Uml::SetAttribute(Channel::meta_InterruptNum, Channel::meta, "InterruptNum");
			::Uml::SetClass(OutCommMapping::meta, dgr, "OutCommMapping");
			::Uml::SetClass(CommDst::meta, dgr, "CommDst");
			::Uml::SetClass(CommMapping::meta, dgr, "CommMapping");
			::Uml::SetClass(InCommMapping::meta, dgr, "InCommMapping");
			::Uml::SetClass(Component::meta, dgr, "Component");
			::Uml::SetAttribute(Component::meta_WCET, Component::meta, "WCET");
			::Uml::SetClass(Message::meta, dgr, "Message");
			::Uml::SetAttribute(Message::meta_MsgSize, Message::meta, "MsgSize");
			::Uml::SetAttribute(Message::meta_MsgMetaData, Message::meta, "MsgMetaData");
			::Uml::SetClass(MessageRef::meta, dgr, "MessageRef");
			::Uml::SetClass(IOPort::meta, dgr, "IOPort");
			::Uml::SetClass(MsgAssignment::meta, dgr, "MsgAssignment");
			::Uml::SetClass(TaskAssignment::meta, dgr, "TaskAssignment");
			::Uml::SetClass(DeploymentLibrary::meta, dgr, "DeploymentLibrary");
			::Uml::SetAttribute(DeploymentLibrary::meta_name, DeploymentLibrary::meta, "name");
			::Uml::SetClass(Deployment::meta, dgr, "Deployment");
			::Uml::SetClass(Task::meta, dgr, "Task");
			::Uml::SetClass(NodeRef::meta, dgr, "NodeRef");
			::Uml::SetClass(ChannelRef::meta, dgr, "ChannelRef");
			::Uml::SetClass(RootFolder::meta, dgr, "RootFolder");
			::Uml::SetAttribute(RootFolder::meta_name, RootFolder::meta, "name");
			::Uml::SetClass(MgaObject::meta, dgr, "MgaObject");
			::Uml::SetAttribute(MgaObject::meta_position, MgaObject::meta, "position");
			::Uml::SetAttribute(MgaObject::meta_name, MgaObject::meta, "name");
		}
		void CreatesNamespaces2(const ::Uml::Diagram &dgr)
		{
		}
		void InitializeDgrSetupMeta(const ::Uml::Diagram & dgr)
		{
			Creates2(dgr);
			CreatesNamespaces2(dgr);
		}
		void InitializeDgr2()
		{
			//composition child roles 
			::Uml::SetParentRole(COutputPort::meta_CCode_parent, COutputPort::meta, ::ESMoL::CCode::meta, "", "");
			::Uml::SetParentRole(CInputPort::meta_CCode_parent, CInputPort::meta, ::ESMoL::CCode::meta, "", "");
			::Uml::SetParentRole(ArchitectureLibrary::meta_RootFolder_parent, ArchitectureLibrary::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(System::meta_ArchitectureLibrary_parent, System::meta, ::ESMoL::ArchitectureLibrary::meta, "", "");
			::Uml::SetParentRole(System::meta_DesignFolder_parent, System::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetParentRole(DesignFolder::meta_RootFolder_parent, DesignFolder::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(Connector::meta_System_parent, Connector::meta, ::ESMoL::System::meta, "", "");
			::Uml::SetParentRole(Connector::meta_Task_parent, Connector::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetParentRole(ComponentBase::meta_System_parent, ComponentBase::meta, ::ESMoL::System::meta, "", "");
			::Uml::SetParentRole(Types::meta_RootFolder_parent, Types::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(TypeBase::meta_Types_parent, TypeBase::meta, ::ESMoL::Types::meta, "", "");
			::Uml::SetParentRole(TypeBaseRef::meta_TypeStruct_parent, TypeBaseRef::meta, ::ESMoL::TypeStruct::meta, "", "");
			::Uml::SetParentRole(TypeBaseRef::meta_Port_parent, TypeBaseRef::meta, ::ESMoL::Port::meta, "", "");
			::Uml::SetParentRole(TypeBaseRef::meta_StateDE_parent, TypeBaseRef::meta, ::ESMoL::StateDE::meta, "", "");
			::Uml::SetParentRole(TimingConstraint::meta_TimingSheet_parent, TimingConstraint::meta, ::ESMoL::TimingSheet::meta, "", "");
			::Uml::SetParentRole(RequirementsLibrary::meta_RootFolder_parent, RequirementsLibrary::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(TimingSheet::meta_DesignFolder_parent, TimingSheet::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetParentRole(TimingSheet::meta_RequirementsLibrary_parent, TimingSheet::meta, ::ESMoL::RequirementsLibrary::meta, "", "");
			::Uml::SetParentRole(TaskRef::meta_TimingSheet_parent, TaskRef::meta, ::ESMoL::TimingSheet::meta, "", "");
			::Uml::SetParentRole(Block::meta_Subsystem_parent, Block::meta, ::ESMoL::Subsystem::meta, "", "");
			::Uml::SetParentRole(Parameter::meta_Parameter_Block_parent, Parameter::meta, ::ESMoL::Block::meta, "Parameter", "");
			::Uml::SetParentRole(Annotation::meta_Block_parent, Annotation::meta, ::ESMoL::Block::meta, "", "");
			::Uml::SetParentRole(Line::meta_Line_Block_parent, Line::meta, ::ESMoL::Block::meta, "Line", "");
			::Uml::SetParentRole(Dataflow::meta_RootFolder_parent, Dataflow::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(Subsystem::meta_DesignFolder_parent, Subsystem::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetParentRole(Subsystem::meta_Dataflow_parent, Subsystem::meta, ::ESMoL::Dataflow::meta, "", "");
			::Uml::SetParentRole(Port::meta_Block_parent, Port::meta, ::ESMoL::Block::meta, "", "");
			::Uml::SetParentRole(State::meta_Stateflow_parent, State::meta, ::ESMoL::Stateflow::meta, "", "");
			::Uml::SetParentRole(Transition::meta_Transition_State_parent, Transition::meta, ::ESMoL::State::meta, "Transition", "");
			::Uml::SetParentRole(ConnectorRef::meta_Block_parent, ConnectorRef::meta, ::ESMoL::Block::meta, "", "");
			::Uml::SetParentRole(Stateflow::meta_RootFolder_parent, Stateflow::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(TransConnector::meta_State_parent, TransConnector::meta, ::ESMoL::State::meta, "", "");
			::Uml::SetParentRole(StateDE::meta_State_parent, StateDE::meta, ::ESMoL::State::meta, "", "");
			::Uml::SetParentRole(OS::meta_Node_parent, OS::meta, ::ESMoL::Node::meta, "", "");
			::Uml::SetParentRole(Wire::meta_HardwareUnit_parent, Wire::meta, ::ESMoL::HardwareUnit::meta, "", "");
			::Uml::SetParentRole(HardwareUnit::meta_DesignFolder_parent, HardwareUnit::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetParentRole(HardwareUnit::meta_PlatformLibrary_parent, HardwareUnit::meta, ::ESMoL::PlatformLibrary::meta, "", "");
			::Uml::SetParentRole(PlatformLibrary::meta_RootFolder_parent, PlatformLibrary::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(Capability::meta_HWElement_parent, Capability::meta, ::ESMoL::HWElement::meta, "", "");
			::Uml::SetParentRole(HWElement::meta_HardwareUnit_parent, HWElement::meta, ::ESMoL::HardwareUnit::meta, "", "");
			::Uml::SetParentRole(BChan::meta_Router_parent, BChan::meta, ::ESMoL::Router::meta, "", "");
			::Uml::SetParentRole(Channel::meta_HardwareUnit_parent, Channel::meta, ::ESMoL::HardwareUnit::meta, "", "");
			::Uml::SetParentRole(Channel::meta_Node_parent, Channel::meta, ::ESMoL::Node::meta, "", "");
			::Uml::SetParentRole(CommDst::meta_Task_parent, CommDst::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetParentRole(CommMapping::meta_Task_parent, CommMapping::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetParentRole(Component::meta_Task_parent, Component::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetParentRole(MsgAssignment::meta_Task_parent, MsgAssignment::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetParentRole(TaskAssignment::meta_Deployment_parent, TaskAssignment::meta, ::ESMoL::Deployment::meta, "", "");
			::Uml::SetParentRole(DeploymentLibrary::meta_RootFolder_parent, DeploymentLibrary::meta, ::ESMoL::RootFolder::meta, "", "");
			::Uml::SetParentRole(Deployment::meta_DesignFolder_parent, Deployment::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetParentRole(Deployment::meta_DeploymentLibrary_parent, Deployment::meta, ::ESMoL::DeploymentLibrary::meta, "", "");
			::Uml::SetParentRole(Task::meta_Deployment_parent, Task::meta, ::ESMoL::Deployment::meta, "", "");
			::Uml::SetParentRole(NodeRef::meta_Deployment_parent, NodeRef::meta, ::ESMoL::Deployment::meta, "", "");
			::Uml::SetParentRole(RootFolder::meta_RootFolder_parent, RootFolder::meta, ::ESMoL::RootFolder::meta, "", "");

			// composition parentroles 
			::Uml::SetChildRole(CCode::meta_CInputPort_children, CCode::meta, ::ESMoL::CInputPort::meta, "", "");
			::Uml::SetChildRole(CCode::meta_COutputPort_children, CCode::meta, ::ESMoL::COutputPort::meta, "", "");
			::Uml::SetChildRole(ArchitectureLibrary::meta_System_children, ArchitectureLibrary::meta, ::ESMoL::System::meta, "", "");
			::Uml::SetChildRole(System::meta_ComponentBase_children, System::meta, ::ESMoL::ComponentBase::meta, "", "");
			::Uml::SetChildRole(System::meta_Connector_children, System::meta, ::ESMoL::Connector::meta, "", "");
			::Uml::SetChildRole(DesignFolder::meta_TimingSheet_children, DesignFolder::meta, ::ESMoL::TimingSheet::meta, "", "");
			::Uml::SetChildRole(DesignFolder::meta_System_children, DesignFolder::meta, ::ESMoL::System::meta, "", "");
			::Uml::SetChildRole(DesignFolder::meta_Subsystem_children, DesignFolder::meta, ::ESMoL::Subsystem::meta, "", "");
			::Uml::SetChildRole(DesignFolder::meta_HardwareUnit_children, DesignFolder::meta, ::ESMoL::HardwareUnit::meta, "", "");
			::Uml::SetChildRole(DesignFolder::meta_Deployment_children, DesignFolder::meta, ::ESMoL::Deployment::meta, "", "");
			::Uml::SetChildRole(Types::meta_TypeBase_children, Types::meta, ::ESMoL::TypeBase::meta, "", "");
			::Uml::SetChildRole(TypeStruct::meta_TypeBaseRef_children, TypeStruct::meta, ::ESMoL::TypeBaseRef::meta, "", "");
			::Uml::SetChildRole(RequirementsLibrary::meta_TimingSheet_children, RequirementsLibrary::meta, ::ESMoL::TimingSheet::meta, "", "");
			::Uml::SetChildRole(TimingSheet::meta_TimingConstraint_children, TimingSheet::meta, ::ESMoL::TimingConstraint::meta, "", "");
			::Uml::SetChildRole(TimingSheet::meta_TaskRef_children, TimingSheet::meta, ::ESMoL::TaskRef::meta, "", "");
			::Uml::SetChildRole(Block::meta_Line, Block::meta, ::ESMoL::Line::meta, "", "Line");
			::Uml::SetChildRole(Block::meta_Parameter, Block::meta, ::ESMoL::Parameter::meta, "", "Parameter");
			::Uml::SetChildRole(Block::meta_Annotation_children, Block::meta, ::ESMoL::Annotation::meta, "", "");
			::Uml::SetChildRole(Block::meta_ConnectorRef_children, Block::meta, ::ESMoL::ConnectorRef::meta, "", "");
			::Uml::SetChildRole(Block::meta_Port_children, Block::meta, ::ESMoL::Port::meta, "", "");
			::Uml::SetChildRole(Dataflow::meta_Subsystem_children, Dataflow::meta, ::ESMoL::Subsystem::meta, "", "");
			::Uml::SetChildRole(Subsystem::meta_Block_children, Subsystem::meta, ::ESMoL::Block::meta, "", "");
			::Uml::SetChildRole(Port::meta_TypeBaseRef_child, Port::meta, ::ESMoL::TypeBaseRef::meta, "", "");
			::Uml::SetChildRole(State::meta_TransConnector_children, State::meta, ::ESMoL::TransConnector::meta, "", "");
			::Uml::SetChildRole(State::meta_Transition, State::meta, ::ESMoL::Transition::meta, "", "Transition");
			::Uml::SetChildRole(State::meta_StateDE_children, State::meta, ::ESMoL::StateDE::meta, "", "");
			::Uml::SetChildRole(Stateflow::meta_State_children, Stateflow::meta, ::ESMoL::State::meta, "", "");
			::Uml::SetChildRole(StateDE::meta_TypeBaseRef_child, StateDE::meta, ::ESMoL::TypeBaseRef::meta, "", "");
			::Uml::SetChildRole(HardwareUnit::meta_HWElement_children, HardwareUnit::meta, ::ESMoL::HWElement::meta, "", "");
			::Uml::SetChildRole(HardwareUnit::meta_Wire_children, HardwareUnit::meta, ::ESMoL::Wire::meta, "", "");
			::Uml::SetChildRole(HardwareUnit::meta_Channel_children, HardwareUnit::meta, ::ESMoL::Channel::meta, "", "");
			::Uml::SetChildRole(PlatformLibrary::meta_HardwareUnit_children, PlatformLibrary::meta, ::ESMoL::HardwareUnit::meta, "", "");
			::Uml::SetChildRole(Router::meta_BChan_children, Router::meta, ::ESMoL::BChan::meta, "", "");
			::Uml::SetChildRole(HWElement::meta_Capability_children, HWElement::meta, ::ESMoL::Capability::meta, "", "");
			::Uml::SetChildRole(Node::meta_Channel_children, Node::meta, ::ESMoL::Channel::meta, "", "");
			::Uml::SetChildRole(Node::meta_OS_child, Node::meta, ::ESMoL::OS::meta, "", "");
			::Uml::SetChildRole(DeploymentLibrary::meta_Deployment_children, DeploymentLibrary::meta, ::ESMoL::Deployment::meta, "", "");
			::Uml::SetChildRole(Deployment::meta_Task_children, Deployment::meta, ::ESMoL::Task::meta, "", "");
			::Uml::SetChildRole(Deployment::meta_TaskAssignment_children, Deployment::meta, ::ESMoL::TaskAssignment::meta, "", "");
			::Uml::SetChildRole(Deployment::meta_NodeRef_children, Deployment::meta, ::ESMoL::NodeRef::meta, "", "");
			::Uml::SetChildRole(Task::meta_Connector_children, Task::meta, ::ESMoL::Connector::meta, "", "");
			::Uml::SetChildRole(Task::meta_Component_children, Task::meta, ::ESMoL::Component::meta, "", "");
			::Uml::SetChildRole(Task::meta_CommDst_children, Task::meta, ::ESMoL::CommDst::meta, "", "");
			::Uml::SetChildRole(Task::meta_CommMapping_children, Task::meta, ::ESMoL::CommMapping::meta, "", "");
			::Uml::SetChildRole(Task::meta_MsgAssignment_children, Task::meta, ::ESMoL::MsgAssignment::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_DesignFolder_children, RootFolder::meta, ::ESMoL::DesignFolder::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_ArchitectureLibrary_children, RootFolder::meta, ::ESMoL::ArchitectureLibrary::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_Types_children, RootFolder::meta, ::ESMoL::Types::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_RequirementsLibrary_children, RootFolder::meta, ::ESMoL::RequirementsLibrary::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_Dataflow_children, RootFolder::meta, ::ESMoL::Dataflow::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_Stateflow_children, RootFolder::meta, ::ESMoL::Stateflow::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_PlatformLibrary_children, RootFolder::meta, ::ESMoL::PlatformLibrary::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_DeploymentLibrary_children, RootFolder::meta, ::ESMoL::DeploymentLibrary::meta, "", "");
			::Uml::SetChildRole(RootFolder::meta_RootFolder_children, RootFolder::meta, ::ESMoL::RootFolder::meta, "", "");

			// Association roles 
			::Uml::SetAssocRole(SubsystemRef::meta_ref, SubsystemRef::meta, ::ESMoL::Subsystem::meta, "referedbySubsystemRef");
			::Uml::SetAssocRole(IOPortExp::meta_srcIOPortAssignment, IOPortExp::meta, ::ESMoL::IOPortInfoBase::meta, "dstIOPortAssignment");
			::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment_rev = IOPortExp::meta_srcIOPortAssignment;
			::Uml::SetAssocRole(IOPortInfo::meta_referedbyIOPortInfoRef, IOPortInfo::meta, ::ESMoL::IOPortInfoRef::meta, "ref");
			::Uml::SetAssocRole(IOPortInfoRef::meta_ref, IOPortInfoRef::meta, ::ESMoL::IOPortInfo::meta, "referedbyIOPortInfoRef");
			::Uml::SetAssocRole(IOPortInfoBase::meta_dstIOPortAssignment, IOPortInfoBase::meta, ::ESMoL::IOPortExp::meta, "srcIOPortAssignment");
			::ESMoL::IOPortExp::meta_srcIOPortAssignment_rev = IOPortInfoBase::meta_dstIOPortAssignment;
			::Uml::SetAssocRole(ComponentBase::meta_referedbySystemRef, ComponentBase::meta, ::ESMoL::Component::meta, "ref");
			::Uml::SetAssocRole(Output::meta_dstOutCommMapping, Output::meta, ::ESMoL::CommDst::meta, "srcOutCommMapping");
			::ESMoL::CommDst::meta_srcOutCommMapping_rev = Output::meta_dstOutCommMapping;
			::Uml::SetAssocRole(Output::meta_dstConnector, Output::meta, ::ESMoL::Input::meta, "srcConnector");
			::ESMoL::Input::meta_srcConnector_rev = Output::meta_dstConnector;
			::Uml::SetAssocRole(Input::meta_srcConnector, Input::meta, ::ESMoL::Output::meta, "dstConnector");
			::ESMoL::Output::meta_dstConnector_rev = Input::meta_srcConnector;
			::Uml::SetAssocRole(Input::meta_srcInCommMapping, Input::meta, ::ESMoL::CommDst::meta, "dstInCommMapping");
			::ESMoL::CommDst::meta_dstInCommMapping_rev = Input::meta_srcInCommMapping;
			::Uml::SetAssocRole(TypeBase::meta_referedbyTypeStructRef, TypeBase::meta, ::ESMoL::TypeBaseRef::meta, "ref");
			::Uml::SetAssocRole(TypeBaseRef::meta_ref, TypeBaseRef::meta, ::ESMoL::TypeBase::meta, "referedbyTypeStructRef");
			::Uml::SetAssocRole(TaskRef::meta_srcTimingConstraint, TaskRef::meta, ::ESMoL::TaskRef::meta, "dstTimingConstraint");
			::ESMoL::TaskRef::meta_dstTimingConstraint_rev = TaskRef::meta_srcTimingConstraint;
			::Uml::SetAssocRole(TaskRef::meta_dstTimingConstraint, TaskRef::meta, ::ESMoL::TaskRef::meta, "srcTimingConstraint");
			::ESMoL::TaskRef::meta_srcTimingConstraint_rev = TaskRef::meta_dstTimingConstraint;
			::Uml::SetAssocRole(TaskRef::meta_ref, TaskRef::meta, ::ESMoL::Task::meta, "referedbyTaskRef");
			::Uml::SetAssocRole(Subsystem::meta_referedbySubsystemRef, Subsystem::meta, ::ESMoL::SubsystemRef::meta, "ref");
			::Uml::SetAssocRole(Port::meta_srcLine, Port::meta, ::ESMoL::Port::meta, "dstLine");
			::ESMoL::Port::meta_dstLine_rev = Port::meta_srcLine;
			::Uml::SetAssocRole(Port::meta_dstLine, Port::meta, ::ESMoL::Port::meta, "srcLine");
			::ESMoL::Port::meta_srcLine_rev = Port::meta_dstLine;
			::Uml::SetAssocRole(ConnectorRef::meta_ref, ConnectorRef::meta, ::ESMoL::TransConnector::meta, "referedbyConnectorRef");
			::Uml::SetAssocRole(TransConnector::meta_referedbyConnectorRef, TransConnector::meta, ::ESMoL::ConnectorRef::meta, "ref");
			::Uml::SetAssocRole(TransConnector::meta_dstTransition, TransConnector::meta, ::ESMoL::TransConnector::meta, "srcTransition");
			::ESMoL::TransConnector::meta_srcTransition_rev = TransConnector::meta_dstTransition;
			::Uml::SetAssocRole(TransConnector::meta_srcTransition, TransConnector::meta, ::ESMoL::TransConnector::meta, "dstTransition");
			::ESMoL::TransConnector::meta_dstTransition_rev = TransConnector::meta_srcTransition;
			::Uml::SetAssocRole(Connectable::meta_srcWire, Connectable::meta, ::ESMoL::Connectable::meta, "dstWire");
			::ESMoL::Connectable::meta_dstWire_rev = Connectable::meta_srcWire;
			::Uml::SetAssocRole(Connectable::meta_dstWire, Connectable::meta, ::ESMoL::Connectable::meta, "srcWire");
			::ESMoL::Connectable::meta_srcWire_rev = Connectable::meta_dstWire;
			::Uml::SetAssocRole(Node::meta_referedbyNodeRef, Node::meta, ::ESMoL::NodeRef::meta, "ref");
			::Uml::SetAssocRole(Channel::meta_referedbyChannelRef, Channel::meta, ::ESMoL::ChannelRef::meta, "ref");
			::Uml::SetAssocRole(CommDst::meta_srcOutCommMapping, CommDst::meta, ::ESMoL::Output::meta, "dstOutCommMapping");
			::ESMoL::Output::meta_dstOutCommMapping_rev = CommDst::meta_srcOutCommMapping;
			::Uml::SetAssocRole(CommDst::meta_dstInCommMapping, CommDst::meta, ::ESMoL::Input::meta, "srcInCommMapping");
			::ESMoL::Input::meta_srcInCommMapping_rev = CommDst::meta_dstInCommMapping;
			::Uml::SetAssocRole(CommDst::meta_dstMsgAssignment, CommDst::meta, ::ESMoL::ChannelRef::meta, "srcMsgAssignment");
			::ESMoL::ChannelRef::meta_srcMsgAssignment_rev = CommDst::meta_dstMsgAssignment;
			::Uml::SetAssocRole(Component::meta_ref, Component::meta, ::ESMoL::ComponentBase::meta, "referedbySystemRef");
			::Uml::SetAssocRole(Message::meta_referedbyBusMessageRef, Message::meta, ::ESMoL::MessageRef::meta, "ref");
			::Uml::SetAssocRole(MessageRef::meta_ref, MessageRef::meta, ::ESMoL::Message::meta, "referedbyBusMessageRef");
			::Uml::SetAssocRole(Task::meta_referedbyTaskRef, Task::meta, ::ESMoL::TaskRef::meta, "ref");
			::Uml::SetAssocRole(Task::meta_dstTaskAssignment, Task::meta, ::ESMoL::NodeRef::meta, "srcTaskAssignment");
			::ESMoL::NodeRef::meta_srcTaskAssignment_rev = Task::meta_dstTaskAssignment;
			::Uml::SetAssocRole(NodeRef::meta_ref, NodeRef::meta, ::ESMoL::Node::meta, "referedbyNodeRef");
			::Uml::SetAssocRole(NodeRef::meta_srcTaskAssignment, NodeRef::meta, ::ESMoL::Task::meta, "dstTaskAssignment");
			::ESMoL::Task::meta_dstTaskAssignment_rev = NodeRef::meta_srcTaskAssignment;
			::Uml::SetAssocRole(ChannelRef::meta_ref, ChannelRef::meta, ::ESMoL::Channel::meta, "referedbyChannelRef");
			::Uml::SetAssocRole(ChannelRef::meta_srcMsgAssignment, ChannelRef::meta, ::ESMoL::CommDst::meta, "dstMsgAssignment");
			::ESMoL::CommDst::meta_dstMsgAssignment_rev = ChannelRef::meta_srcMsgAssignment;
			IOPortAssignment::meta_dstIOPortAssignment_end_ = ::ESMoL::IOPortInfoBase::meta_dstIOPortAssignment;
			IOPortAssignment::meta_srcIOPortAssignment_end_ = ::ESMoL::IOPortExp::meta_srcIOPortAssignment;
			Connector::meta_srcConnector_end_ = ::ESMoL::Input::meta_srcConnector;
			Connector::meta_dstConnector_end_ = ::ESMoL::Output::meta_dstConnector;
			TimingConstraint::meta_dstTimingConstraint_end_ = ::ESMoL::TaskRef::meta_dstTimingConstraint;
			TimingConstraint::meta_srcTimingConstraint_end_ = ::ESMoL::TaskRef::meta_srcTimingConstraint;
			Line::meta_dstLine_end_ = ::ESMoL::Port::meta_dstLine;
			Line::meta_srcLine_end_ = ::ESMoL::Port::meta_srcLine;
			Transition::meta_srcTransition_end_ = ::ESMoL::TransConnector::meta_srcTransition;
			Transition::meta_dstTransition_end_ = ::ESMoL::TransConnector::meta_dstTransition;
			Wire::meta_dstWire_end_ = ::ESMoL::Connectable::meta_dstWire;
			Wire::meta_srcWire_end_ = ::ESMoL::Connectable::meta_srcWire;
			OutCommMapping::meta_srcOutCommMapping_end_ = ::ESMoL::CommDst::meta_srcOutCommMapping;
			OutCommMapping::meta_dstOutCommMapping_end_ = ::ESMoL::Output::meta_dstOutCommMapping;
			InCommMapping::meta_dstInCommMapping_end_ = ::ESMoL::CommDst::meta_dstInCommMapping;
			InCommMapping::meta_srcInCommMapping_end_ = ::ESMoL::Input::meta_srcInCommMapping;
			MsgAssignment::meta_srcMsgAssignment_end_ = ::ESMoL::ChannelRef::meta_srcMsgAssignment;
			MsgAssignment::meta_dstMsgAssignment_end_ = ::ESMoL::CommDst::meta_dstMsgAssignment;
			TaskAssignment::meta_srcTaskAssignment_end_ = ::ESMoL::NodeRef::meta_srcTaskAssignment;
			TaskAssignment::meta_dstTaskAssignment_end_ = ::ESMoL::Task::meta_dstTaskAssignment;

			// namespaces
			
		}

	 void Initialize()
	{
		static bool first = true;
		if(!first) return;
		first = false;
		::Uml::Initialize();

		ASSERT( umldiagram == Udm::null );
		UdmStatic::StaticDataNetwork * meta_dn = new UdmStatic::StaticDataNetwork(::Uml::diagram);
		meta_dn->CreateNew("ESMoL.mem", "", ::Uml::Diagram::meta, Udm::CHANGES_LOST_DEFAULT);
		umldiagram = ::Uml::Diagram::Cast(meta_dn->GetRootObject());
		umldiagram.name() ="ESMoL";
		umldiagram.version() ="1.00";
		InitializeDgr();

		UdmDom::str_xsd_storage::StoreXsd("ESMoL.xsd", ESMoL_xsd::getString());

		InitCrossNSInheritence();
		InitCrossNSCompositions();
		InitCrossNSAssociations();

	};

	 void Initialize(const ::Uml::Diagram &dgr)
	{
		umldiagram = dgr;
		InitializeDgrSetupMeta(dgr);
		InitializeDgr2();

	};

	 Udm::UdmDiagram diagram = { &umldiagram, Initialize };
	static struct _regClass
	{
		_regClass()
		{
			Udm::MetaDepository::StoreDiagram("ESMoL", diagram);
		};
		~_regClass()
		{
			Udm::MetaDepository::RemoveDiagram("ESMoL");
		};
	} __regUnUsed;

}
// END ESMoL.cpp
